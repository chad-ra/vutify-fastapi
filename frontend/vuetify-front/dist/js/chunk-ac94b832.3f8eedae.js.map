{"version":3,"sources":["webpack:///./src/components/CheckmongHomeBar.vue?e3fc","webpack:///src/components/CheckmongHomeBar.vue","webpack:///./src/components/CheckmongHomeBar.vue?78e5","webpack:///./src/components/CheckmongHomeBar.vue","webpack:///./node_modules/vue-chartjs/legacy/index.js","webpack:///./node_modules/chart.js/dist/chunks/helpers.segment.mjs","webpack:///./node_modules/chart.js/dist/chart.mjs"],"names":["render","_vm","this","_h","$createElement","_c","_self","directives","name","rawName","value","$vuetify","breakpoint","expression","staticClass","attrs","staticStyle","_v","_s","title","on","goHome","staticRenderFns","components","props","data","watch","methods","component","VBtn","VCol","VIcon","VRow","ChartEmits","chartCreate","createChartFunction","chartData","chartOptions","context","undefined","emit","ChartRendered","chartUpdate","chart","update","ChartUpdated","chartDestroy","destroy","ChartDestroyed","getChartData","datasetIdKey","nextData","labels","datasets","setChartDatasets","oldData","newData","addedDatasets","map","nextDataset","currentDataset","find","dataset","includes","push","Object","assign","setChartLabels","LabelsUpdated","setChartOptions","options","compareData","newDatasetLabels","label","oldDatasetLabels","length","every","index","templateError","ANNOTATION_PLUGIN_KEY","generateChart","chartId","chartType","chartController","_chartRef","type","required","default","String","width","Number","height","cssClasses","styles","plugins","Array","_chart","computed","ref","ref1","pluginSettings","register","current","renderChart","$emit","handler","newValue","oldValue","chartDataHandler","deep","chartOptionsHandler","currentChart","getCurrentChart","$refs","canvas","Error","canvasEl2DContext","getContext","setCurrentChart","keys","isEqualLabelsAndDatasetsLength","updateChart","hasAnnotationPlugin","$data","createElement","style","class","id","Bar","Doughnut","Line","noop","uid","isNullOrUndef","isArray","prototype","toString","call","slice","isObject","isNumberFinite","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","clone$1","source","target","create","klen","k","isValidKey","key","indexOf","_merger","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","v","x","o","y","resolveObjectKey","obj","resolver","_getKeyResolver","_splitKey","parts","split","tmp","part","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","_isClickEvent","e","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","roundedRange","round","almostEquals","niceRange","pow","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNumber","n","isNaN","epsilon","abs","almostWhole","rounded","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","add","from","requestAnimFrame","window","requestAnimationFrame","throttled","updateFn","updateArgs","ticking","rest","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInBounce","easeOutBounce","m","d","easeInOutBounce","lim","l","h","p2b","n2b","b2n","n2p","map$1","0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","c","f","hex","h1","h2","eq","isShort","r","g","hexParse","ret","hexString","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","hueValue","rgb2hsl","calln","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","exec","p1","p2","rotate","deg","hslString","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","tkeys","j","ok","nk","replace","parseInt","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","interpolate","rgb1","rgb2","modHSL","ratio","clone","proto","fromObject","input","functionParse","Color","_rgb","_valid","color","weight","c1","c2","w2","w1","val","index_esm","isPatternOrGradient","getHoverColor","saturate","darken","overrides","getScope$1","node","root","scope","Defaults","_descriptors","animation","backgroundColor","borderColor","devicePixelRatio","platform","getDevicePixelRatio","elements","events","font","family","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","defaults","_scriptable","startsWith","_indexable","_fallback","toFontString","_measureText","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","resetTransform","clearRect","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","top","bottom","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","text","opts","lines","strokeWidth","strokeColor","line","setRenderOpts","strokeStyle","lineWidth","strokeText","maxWidth","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","info","cacheable","_addGrace","minmax","grace","beginAtZero","change","keepZero","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","override","Proxy","_keys","_cached","_resolveWithPrefixes","Reflect","getOwnPropertyDescriptor","getPrototypeOf","getKeysFromAllScopes","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","ownKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","constructor","descriptors","_resolveScriptable","_resolveArray","join","delete","createSubResolver","arr","filter","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","delta","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","getStyle","el","getPropertyValue","positions","getPositionedStyle","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","evt","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","addEventListener","removeEventListener","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","getRightToLeftAdapter","rectX","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","getSegment","segment","bounds","startBound","endBound","_boundSegment","prevValue","inside","subStart","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","_request","_charts","_running","_lastDate","anims","date","callbacks","numSteps","duration","initial","currentStep","_update","_refresh","Date","now","remaining","running","draw","_active","_total","tick","_notify","charts","complete","progress","event","cb","_getAnims","reduce","acc","_duration","cancel","animator","interpolators","to","factor","c0","valid","mix","cfg","currentValue","_fn","_easing","easing","_start","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","rej","resolved","numbers","colors","properties","active","resize","show","animations","visible","hide","config","_properties","configure","animatedProps","getOwnPropertyNames","option","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","_animateOptions","anim","wait","all","scaleClip","allowedOverflow","defaultClip","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","stacked","getStackKey","indexScale","valueScale","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","shift","createDatasetContext","createDataContext","dataIndex","raw","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","_ctx","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","addElements","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","isExtensible","_dataCheck","datasetElementType","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","getLabels","singleScale","xAxisKey","yAxisKey","parsedValue","NaN","otherScale","_getOtherScale","otherMin","otherMax","_skip","updateRangeFromParsed","getParsed","getLabelForValue","_clip","getMaxOverflow","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","names","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","sharedOptions","_animationsDisabled","firstOpts","previouslySharedOptions","getSharedOptions","includeOptions","updateSharedOptions","_resolveAnimations","_setStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_dataChanges","arguments","_sync","newCount","getAllScaleValues","_cache","$bar","visibleMetas","concat","getAllParsedValues","computeMinSampleSize","curr","_length","updateMinAndPrev","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","iAxisKey","vAxisKey","super","bars","reset","getBasePixel","_getRuler","_getSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","updateElement","grouped","skipNull","_getStacks","_startPixel","_endPixel","_getStackCount","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","_getStackIndex","rects","_index_","offset","grid","_value_","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","tooltip","innerRadius","outerRadius","getter","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","_getRotationExtents","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","_dataset","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","border","lastPoint","updateControlPoints","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","pointPosition","getPointPositionForValue","useFinalPosition","getProps","final","defaultRoutes","formatters","tickValue","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","numeric","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","tickLength","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","diff","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","padding","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","minor","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","position","titleArgs","titleX","titleY","positionAxisID","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_reversePixels","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getMinMax","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","fullSize","generateTickLabels","_computeLabelSizes","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getBaseValue","optionTicks","rot","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","backdrop","tickTextAlign","labelPadding","fillRect","findIndex","_computeGridLineItems","drawLine","setLineDash","lineDashOffset","lastLineWidth","_computeLabelArea","_computeLabelItems","drawBackground","drawGrid","drawTitle","drawLabels","tz","z","gz","getSortedVisibleDatasetMetas","axisID","fontSize","isPrototypeOf","parentScope","isIChartComponent","registerDefaults","itemDefaults","routeDefaults","routes","propertyParts","sourceName","sourceScope","controllers","_typedRegistries","_each","_get","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","registry","camelMethod","getElement","DateAdapter","timestamp","amount","unit","weekday","members","adapters","_date","binarySearch","metaset","lookupMethod","getRange","evaluateInteractionItems","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","autoPadding","_layers","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","passive","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","_init","hook","_createDescriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","getPlugin","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","animationOptions","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","userConfig","initialCanvas","existingChart","chartOptionScopes","updateConfig","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","listen","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","scalesOptions","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","getScale","init","hasUpdated","addBox","_destroyDatasetMeta","newControllers","_removeUnreferencedMetasets","order","updateIndex","ControllerClass","getController","_updateMetasets","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","removeBox","ensureScalesHaveIDs","buildOrUpdateScales","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","setDatasetVisibility","_updateVisibility","_destroy","remove","_stop","releaseContext","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","isAttached","activeElements","lastActive","notify","replay","hoverOptions","deactivated","activated","updateHoverStyle","eventFilter","_handleEvent","_getActiveElements","getElementsAtEventForMode","invalidatePlugins","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","drawFullCircleBorders","inner","lineJoin","unregister","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","_points","_segments","_pointsUpdated","_interpolate","interpolated","inRange$1","hitRadius","mouseX","mouseY","hoverRadius","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","refRect","addRectPath","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","generateLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","heightLimit","totalWidth","currentColWidth","currentColHeight","col","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","textDirection","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","isListened","hoveredItem","_getLegendItemAt","sameItem","onLeave","plugin_legend","_element","_args","adjustHitBoxes","handleEvent","ci","_padding","textSize","fontOpts","_drawArgs","createTitle","titleBlock","plugin_title","WeakMap","positioners","hasValue","tooltipPosition","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","getLabelAndValue","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","drawBody","drawFooter","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","_willRender","labelCount","addIfString","addedLabels","unshift","findOrAddLabel","lastIndexOf","_startValue","_valueRange","_addedLabels","added","getDecimalForPixel","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","_endValue","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","stepSize","computeTickLimit","getTickLimit","numericGeneratorOptions","_maxDigits","handleTickRangeOptions","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","logarithmic","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","scaledDistance","pointLabel","distanceFromCenter","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","_unit","_majorUnit","_offsets","_normalized","displayFormats","formats","normalized","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable"],"mappings":"gHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAOT,EAAIU,SAASC,WAAiB,OAAEC,WAAW,gCAAgC,CAACR,EAAG,QAAQ,CAACS,YAAY,yBAAyB,CAACT,EAAG,QAAQ,CAACU,MAAM,CAAC,KAAO,OAAO,CAACV,EAAG,OAAO,CAACW,YAAY,CAAC,YAAY,OAAO,cAAc,MAAM,MAAQ,YAAY,CAACf,EAAIgB,GAAGhB,EAAIiB,GAAGjB,EAAIkB,YAAYd,EAAG,QAAQ,CAACU,MAAM,CAAC,KAAO,MAAM,CAACV,EAAG,QAAQ,CAACW,YAAY,CAAC,mBAAmB,WAAWD,MAAM,CAAC,UAAY,IAAI,KAAO,GAAG,MAAQ,GAAG,MAAQ,WAAWK,GAAG,CAAC,MAAQnB,EAAIoB,SAAS,CAAChB,EAAG,SAAS,CAACU,MAAM,CAAC,MAAQ,YAAY,CAACd,EAAIgB,GAAG,WAAW,IAAI,IAAI,IAAI,IACjqBK,EAAkB,GCcP,GACfd,wBACAe,cACAC,OACAL,cAEAM,OACA,UAEAC,SACAC,SACAN,SACA,wCC3B0V,I,iFCOtVO,EAAY,eACd,EACA5B,EACAsB,GACA,EACA,KACA,KACA,MAIa,OAAAM,EAAiB,QAQhC,IAAkBA,EAAW,CAACC,OAAA,KAAKC,OAAA,KAAKC,QAAA,KAAMC,OAAA,Q,oCC1B9C,0GAEIC,EAFJ,YASA,SAASC,EAAYC,EAAqBC,EAAWC,EAAcC,GAC/DH,EAAoBC,EAAWC,QACfE,IAAZD,GACAA,EAAQE,KAAKP,EAAWQ,eAGhC,SAASC,EAAYC,EAAOL,GACxBK,EAAMC,cACUL,IAAZD,GACAA,EAAQE,KAAKP,EAAWY,cAGhC,SAASC,EAAaH,EAAOL,GACzBK,EAAMI,eACUR,IAAZD,GACAA,EAAQE,KAAKP,EAAWe,gBAGhC,SAASC,EAAaxB,EAAMyB,GACxB,MAAMC,EAAW,CACbC,OAA+B,qBAAhB3B,EAAK2B,OAAyB,GAAK,IAC3C3B,EAAK2B,QAEZC,SAAU,IAKd,OAHAC,EAAiBH,EAAU,IACpB1B,GACJyB,GACIC,EAEX,SAASG,EAAiBC,EAASC,EAASN,GACxC,MAAMO,EAAgB,GACtBF,EAAQF,SAAWG,EAAQH,SAASK,IAAKC,IAErC,MAAMC,EAAiBL,EAAQF,SAASQ,KAAMC,GAAUA,EAAQZ,KAAkBS,EAAYT,IAG9F,OAAKU,GAAmBD,EAAYlC,OAAQgC,EAAcM,SAASH,IAKnEH,EAAcO,KAAKJ,GACnBK,OAAOC,OAAON,EAAgBD,GACvBC,GANI,IACAD,KAQnB,SAASQ,EAAexB,EAAOS,EAAQd,GACnCK,EAAMlB,KAAK2B,OAASA,OACJb,IAAZD,GACAA,EAAQE,KAAKP,EAAWmC,eAGhC,SAASC,EAAgB1B,EAAO2B,GAC5B3B,EAAM2B,QAAU,IACTA,GAGX,SAASC,EAAYf,EAASD,GAE1B,MAAMiB,EAAmBhB,EAAQH,SAASK,IAAKI,GACpCA,EAAQW,OAEbC,EAAmBnB,EAAQF,SAASK,IAAKI,GACpCA,EAAQW,OAGnB,OAAOlB,EAAQF,SAASsB,SAAWnB,EAAQH,SAASsB,QAAUH,EAAiBI,MAAM,CAAClE,EAAOmE,IAAQnE,IAAUgE,EAAiBG,KAzEpI,SAAU5C,GACNA,EAAW,iBAAmB,iBAC9BA,EAAW,gBAAkB,gBAC7BA,EAAW,kBAAoB,kBAC/BA,EAAW,iBAAmB,kBAJlC,CAKGA,IAAeA,EAAa,KAuE/B,MAAM6C,EAAgB,wIAEhBC,EAAwB,aAC9B,SAASC,EAAcC,EAASC,EAAWC,GACvC,IAAIC,EAAY,KAChB,MAAO,CACH5D,MAAO,CACHY,UAAW,CACPiD,KAAMpB,OACNqB,UAAU,GAEdjD,aAAc,CACVgD,KAAMpB,OACNsB,QAAS,QAEbrC,aAAc,CACVmC,KAAMG,OACND,QAAS,SAEbN,QAAS,CACLI,KAAMG,OACND,QAASN,GAEbQ,MAAO,CACHJ,KAAMK,OACNH,QAAS,KAEbI,OAAQ,CACJN,KAAMK,OACNH,QAAS,KAEbK,WAAY,CACRP,KAAMG,OACND,QAAS,IAEbM,OAAQ,CACJR,KAAMpB,OACNsB,QAAS,QAEbO,QAAS,CACLT,KAAMU,MACNR,QAAS,IAAI,KAGrB,OACI,MAAO,CACHS,OAAQ,OAGhBC,SAAU,CACN,sBACI,IAAIC,EAAKC,EACT,MAAMC,EAA+C,QAA7BF,EAAMhG,KAAKmC,oBAAkC,IAAR6D,GAAmD,QAAxBC,EAAOD,EAAIJ,eAA8B,IAATK,OAA1C,EAAqEA,EAAKpB,GACxJ,MAAiC,qBAAnBqB,IAGtB,UACI,OAAMC,SAASlB,IAEnB,UACIC,EAAY,CACRkB,QAAS,MAET,aAAcpG,KAAKkC,WAAalC,KAAKkC,UAAUiB,SAASsB,OAAS,IACjEzC,EAAYhC,KAAKqG,YAAarG,KAAKkC,UAAWlC,KAAKmC,cACnDnC,KAAKsG,MAAMvE,EAAWQ,iBAG9Bf,MAAO,CACHU,UAAW,CACPqE,QAAS,SAASC,EAAUC,GACxBzG,KAAK0G,iBAAiBF,EAAUC,IAEpCE,MAAM,GAEVxE,aAAc,CACVoE,QAAS,SAASC,GACdxG,KAAK4G,oBAAoBJ,IAE7BG,MAAM,IAGdlF,QAAS,CACL,YAAaF,EAAM6C,GACf,MAAMyC,EAAe7G,KAAK8G,kBAK1B,GAJqB,OAAjBD,IACAjE,EAAaiE,GACb7G,KAAKsG,MAAMvE,EAAWe,kBAErB9C,KAAK+G,MAAMC,OACZ,MAAM,IAAIC,MAAMrC,GACb,CACH,MAAM1C,EAAYa,EAAaxB,EAAMvB,KAAKgD,cACpCkE,EAAoBlH,KAAK+G,MAAMC,OAAOG,WAAW,MAC7B,OAAtBD,GACAlH,KAAKoH,gBAAgB,IAAI,OAAMF,EAAmB,CAC9C/B,KAAMH,EACNzD,KAAMW,EACNkC,UACAwB,QAAS5F,KAAK4F,aAK9B,iBAAkBY,EAAUC,GACxB,MAAMnD,EAAU,IACTkD,GAEDnD,EAAU,IACToD,GAEDI,EAAe7G,KAAK8G,kBAC1B,GAAI/C,OAAOsD,KAAKhE,GAASoB,OAAS,EAAG,CACjC,MAAM6C,EAAiCjD,EAAYf,EAASD,GACxDiE,GAAmD,OAAjBT,GAClCzD,EAAiByD,EAAatF,KAAM+B,EAAStD,KAAKgD,mBAC3BX,IAAnBiB,EAAQJ,SACRe,EAAe4C,EAAcvD,EAAQJ,QACrClD,KAAKsG,MAAMvE,EAAWmC,gBAE1BlE,KAAKuH,cACLvH,KAAKsG,MAAMvE,EAAWY,gBAED,OAAjBkE,IACAjE,EAAaiE,GACb7G,KAAKsG,MAAMvE,EAAWe,iBAE1Bd,EAAYhC,KAAKqG,YAAarG,KAAKkC,UAAWlC,KAAKmC,cACnDnC,KAAKsG,MAAMvE,EAAWQ,qBAGL,OAAjBsE,IACAjE,EAAaiE,GACb7G,KAAKsG,MAAMvE,EAAWe,iBAE1Bd,EAAYhC,KAAKqG,YAAarG,KAAKkC,UAAWlC,KAAKmC,cACnDnC,KAAKsG,MAAMvE,EAAWQ,gBAG9B,oBAAqB6B,GACjB,MAAMyC,EAAe7G,KAAK8G,kBACL,OAAjBD,GACA1C,EAAgB0C,EAAczC,GAC9BpE,KAAKuH,eAELvF,EAAYhC,KAAKqG,YAAarG,KAAKkC,UAAWlC,KAAKmC,eAG3D,cACI,MAAM0E,EAAe7G,KAAK8G,kBAC1BtE,EAAYqE,IAEhB,kBACI,OAAO7G,KAAKwH,oBAAsBtC,EAAUkB,QAAUpG,KAAKyH,MAAM3B,QAErE,gBAAiBrD,GACbzC,KAAKwH,oBAAsBtC,EAAUkB,QAAU3D,EAAQzC,KAAKyH,MAAM3B,OAASrD,IAGnF,gBACI,MAAMoE,EAAe7G,KAAK8G,kBACL,OAAjBD,IACAjE,EAAaiE,GACb7G,KAAKsG,MAAMvE,EAAWe,kBAG9BhD,OAAQ,SAAS4H,GACb,OAAOA,EAAc,MAAO,CACxBC,MAAO3H,KAAK2F,OACZiC,MAAO5H,KAAK0F,YACb,CACCgC,EAAc,SAAU,CACpB7G,MAAO,CACHgH,GAAI7H,KAAK+E,QACTQ,MAAOvF,KAAKuF,MACZE,OAAQzF,KAAKyF,QAEjBO,IAAK,eAML,MAAM8B,EAAsBhD,EAAc,YAAa,MAAO,QACxDiD,EAA2BjD,EAAc,iBAAkB,WAAY,QACvEkD,EAAuBlD,EAAc,aAAc,OAAQ,QACH,OACc,OACR,OACG,OACG,Q;;;;;;;ACvQ9F,SAASmD,K,snBACT,MAAMC,EAAO,WACX,IAAIL,EAAK,EACT,OAAO,WACL,OAAOA,KAHC,GAMZ,SAASM,EAAc3H,GACrB,OAAiB,OAAVA,GAAmC,qBAAVA,EAElC,SAAS4H,EAAQ5H,GACf,GAAIqF,MAAMuC,SAAWvC,MAAMuC,QAAQ5H,GACjC,OAAO,EAET,MAAM2E,EAAOpB,OAAOsE,UAAUC,SAASC,KAAK/H,GAC5C,MAAyB,YAArB2E,EAAKqD,MAAM,EAAG,IAAuC,WAAnBrD,EAAKqD,OAAO,GAKpD,SAASC,EAASjI,GAChB,OAAiB,OAAVA,GAA4D,oBAA1CuD,OAAOsE,UAAUC,SAASC,KAAK/H,GAE1D,MAAMkI,EAAkBlI,IAA4B,kBAAVA,GAAsBA,aAAiBgF,SAAWmD,UAAUnI,GACtG,SAASoI,EAAgBpI,EAAOqI,GAC9B,OAAOH,EAAelI,GAASA,EAAQqI,EAEzC,SAASC,EAAetI,EAAOqI,GAC7B,MAAwB,qBAAVrI,EAAwBqI,EAAerI,EAEvD,MAAMuI,EAAe,CAACvI,EAAOwI,IACV,kBAAVxI,GAAsBA,EAAMyI,SAAS,KAC1CC,WAAW1I,GAAS,IAClBA,EAAQwI,EACRG,EAAc,CAAC3I,EAAOwI,IACT,kBAAVxI,GAAsBA,EAAMyI,SAAS,KAC1CC,WAAW1I,GAAS,IAAMwI,GACvBxI,EACP,SAAS4I,EAASC,EAAIC,EAAMC,GAC1B,GAAIF,GAAyB,oBAAZA,EAAGd,KAClB,OAAOc,EAAGG,MAAMD,EAASD,GAG7B,SAASG,EAAKC,EAAUL,EAAIE,EAASI,GACnC,IAAIC,EAAGC,EAAKxC,EACZ,GAAIe,EAAQsB,GAEV,GADAG,EAAMH,EAASjF,OACXkF,EACF,IAAKC,EAAIC,EAAM,EAAGD,GAAK,EAAGA,IACxBP,EAAGd,KAAKgB,EAASG,EAASE,GAAIA,QAGhC,IAAKA,EAAI,EAAGA,EAAIC,EAAKD,IACnBP,EAAGd,KAAKgB,EAASG,EAASE,GAAIA,QAG7B,GAAInB,EAASiB,GAGlB,IAFArC,EAAOtD,OAAOsD,KAAKqC,GACnBG,EAAMxC,EAAK5C,OACNmF,EAAI,EAAGA,EAAIC,EAAKD,IACnBP,EAAGd,KAAKgB,EAASG,EAASrC,EAAKuC,IAAKvC,EAAKuC,IAI/C,SAASE,EAAeC,EAAIC,GAC1B,IAAIJ,EAAGK,EAAMC,EAAIC,EACjB,IAAKJ,IAAOC,GAAMD,EAAGtF,SAAWuF,EAAGvF,OACjC,OAAO,EAET,IAAKmF,EAAI,EAAGK,EAAOF,EAAGtF,OAAQmF,EAAIK,IAAQL,EAGxC,GAFAM,EAAKH,EAAGH,GACRO,EAAKH,EAAGJ,GACJM,EAAGE,eAAiBD,EAAGC,cAAgBF,EAAGvF,QAAUwF,EAAGxF,MACzD,OAAO,EAGX,OAAO,EAET,SAAS0F,EAAQC,GACf,GAAIlC,EAAQkC,GACV,OAAOA,EAAO9G,IAAI6G,GAEpB,GAAI5B,EAAS6B,GAAS,CACpB,MAAMC,EAASxG,OAAOyG,OAAO,MACvBnD,EAAOtD,OAAOsD,KAAKiD,GACnBG,EAAOpD,EAAK5C,OAClB,IAAIiG,EAAI,EACR,KAAOA,EAAID,IAAQC,EACjBH,EAAOlD,EAAKqD,IAAML,EAAQC,EAAOjD,EAAKqD,KAExC,OAAOH,EAET,OAAOD,EAET,SAASK,EAAWC,GAClB,OAAmE,IAA5D,CAAC,YAAa,YAAa,eAAeC,QAAQD,GAE3D,SAASE,EAAQF,EAAKL,EAAQD,EAAQlG,GACpC,IAAKuG,EAAWC,GACd,OAEF,MAAMG,EAAOR,EAAOK,GACdI,EAAOV,EAAOM,GAChBnC,EAASsC,IAAStC,EAASuC,GAC7BC,EAAMF,EAAMC,EAAM5G,GAElBmG,EAAOK,GAAOP,EAAQW,GAG1B,SAASC,EAAMV,EAAQD,EAAQlG,GAC7B,MAAM8G,EAAU9C,EAAQkC,GAAUA,EAAS,CAACA,GACtCL,EAAOiB,EAAQzG,OACrB,IAAKgE,EAAS8B,GACZ,OAAOA,EAETnG,EAAUA,GAAW,GACrB,MAAM+G,EAAS/G,EAAQ+G,QAAUL,EACjC,IAAK,IAAIlB,EAAI,EAAGA,EAAIK,IAAQL,EAAG,CAE7B,GADAU,EAASY,EAAQtB,IACZnB,EAAS6B,GACZ,SAEF,MAAMjD,EAAOtD,OAAOsD,KAAKiD,GACzB,IAAK,IAAII,EAAI,EAAGD,EAAOpD,EAAK5C,OAAQiG,EAAID,IAAQC,EAC9CS,EAAO9D,EAAKqD,GAAIH,EAAQD,EAAQlG,GAGpC,OAAOmG,EAET,SAASa,EAAQb,EAAQD,GACvB,OAAOW,EAAMV,EAAQD,EAAQ,CAACa,OAAQE,IAExC,SAASA,EAAUT,EAAKL,EAAQD,GAC9B,IAAKK,EAAWC,GACd,OAEF,MAAMG,EAAOR,EAAOK,GACdI,EAAOV,EAAOM,GAChBnC,EAASsC,IAAStC,EAASuC,GAC7BI,EAAQL,EAAMC,GACJjH,OAAOsE,UAAUiD,eAAe/C,KAAKgC,EAAQK,KACvDL,EAAOK,GAAOP,EAAQW,IAS1B,MAAMO,EAAe,CACnB,GAAIC,GAAKA,EACTC,EAAGC,GAAKA,EAAED,EACVE,EAAGD,GAAKA,EAAEC,GAEZ,SAASC,EAAiBC,EAAKjB,GAC7B,MAAMkB,EAAWP,EAAaX,KAASW,EAAaX,GAAOmB,EAAgBnB,IAC3E,OAAOkB,EAASD,GAElB,SAASE,EAAgBnB,GACvB,MAAMvD,EAAO2E,EAAUpB,GACvB,OAAOiB,IACL,IAAK,MAAMnB,KAAKrD,EAAM,CACpB,GAAU,KAANqD,EACF,MAEFmB,EAAMA,GAAOA,EAAInB,GAEnB,OAAOmB,GAGX,SAASG,EAAUpB,GACjB,MAAMqB,EAAQrB,EAAIsB,MAAM,KAClB7E,EAAO,GACb,IAAI8E,EAAM,GACV,IAAK,MAAMC,KAAQH,EACjBE,GAAOC,EACHD,EAAIlD,SAAS,MACfkD,EAAMA,EAAI3D,MAAM,GAAI,GAAK,KAEzBnB,EAAKvD,KAAKqI,GACVA,EAAM,IAGV,OAAO9E,EAET,SAASgF,EAAYC,GACnB,OAAOA,EAAIC,OAAO,GAAGC,cAAgBF,EAAI9D,MAAM,GAEjD,MAAMiE,EAAWjM,GAA2B,qBAAVA,EAC5BkM,EAAclM,GAA2B,oBAAVA,EAC/BmM,EAAY,CAACC,EAAGC,KACpB,GAAID,EAAEE,OAASD,EAAEC,KACf,OAAO,EAET,IAAK,MAAMC,KAAQH,EACjB,IAAKC,EAAEG,IAAID,GACT,OAAO,EAGX,OAAO,GAET,SAASE,EAAcC,GACrB,MAAkB,YAAXA,EAAE/H,MAAiC,UAAX+H,EAAE/H,MAA+B,gBAAX+H,EAAE/H,KAGzD,MAAMgI,EAAKC,KAAKD,GACVE,EAAM,EAAIF,EACVG,EAAQD,EAAMF,EACdI,EAAW/H,OAAOgI,kBAClBC,EAAcN,EAAK,IACnBO,EAAUP,EAAK,EACfQ,EAAaR,EAAK,EAClBS,EAAqB,EAALT,EAAS,EACzBU,EAAQT,KAAKS,MACbC,EAAOV,KAAKU,KAClB,SAASC,EAAQC,GACf,MAAMC,EAAeb,KAAKc,MAAMF,GAChCA,EAAQG,EAAaH,EAAOC,EAAcD,EAAQ,KAAQC,EAAeD,EACzE,MAAMI,EAAYhB,KAAKiB,IAAI,GAAIjB,KAAKkB,MAAMT,EAAMG,KAC1CO,EAAWP,EAAQI,EACnBI,EAAeD,GAAY,EAAI,EAAIA,GAAY,EAAI,EAAIA,GAAY,EAAI,EAAI,GACjF,OAAOC,EAAeJ,EAExB,SAASK,EAAWjO,GAClB,MAAMkO,EAAS,GACTC,EAAOvB,KAAKuB,KAAKnO,GACvB,IAAIoJ,EACJ,IAAKA,EAAI,EAAGA,EAAI+E,EAAM/E,IAChBpJ,EAAQoJ,IAAM,IAChB8E,EAAO5K,KAAK8F,GACZ8E,EAAO5K,KAAKtD,EAAQoJ,IAOxB,OAJI+E,KAAiB,EAAPA,IACZD,EAAO5K,KAAK6K,GAEdD,EAAOE,KAAK,CAAChC,EAAGC,IAAMD,EAAIC,GAAGgC,MACtBH,EAET,SAASI,EAASC,GAChB,OAAQC,MAAM9F,WAAW6F,KAAOpG,SAASoG,GAE3C,SAASZ,EAAa1C,EAAGE,EAAGsD,GAC1B,OAAO7B,KAAK8B,IAAIzD,EAAIE,GAAKsD,EAE3B,SAASE,EAAY1D,EAAGwD,GACtB,MAAMG,EAAUhC,KAAKc,MAAMzC,GAC3B,OAAS2D,EAAUH,GAAYxD,GAAQ2D,EAAUH,GAAYxD,EAE/D,SAAS4D,EAAmBC,EAAO/E,EAAQgF,GACzC,IAAI3F,EAAGK,EAAMzJ,EACb,IAAKoJ,EAAI,EAAGK,EAAOqF,EAAM7K,OAAQmF,EAAIK,EAAML,IACzCpJ,EAAQ8O,EAAM1F,GAAG2F,GACZP,MAAMxO,KACT+J,EAAOiF,IAAMpC,KAAKoC,IAAIjF,EAAOiF,IAAKhP,GAClC+J,EAAOkF,IAAMrC,KAAKqC,IAAIlF,EAAOkF,IAAKjP,IAIxC,SAASkP,EAAUC,GACjB,OAAOA,GAAWxC,EAAK,KAEzB,SAASyC,EAAUC,GACjB,OAAOA,GAAW,IAAM1C,GAE1B,SAAS2C,EAAerE,GACtB,IAAK/C,EAAe+C,GAClB,OAEF,IAAIyB,EAAI,EACJ6C,EAAI,EACR,MAAO3C,KAAKc,MAAMzC,EAAIyB,GAAKA,IAAMzB,EAC/ByB,GAAK,GACL6C,IAEF,OAAOA,EAET,SAASC,EAAkBC,EAAaC,GACtC,MAAMC,EAAsBD,EAAWzE,EAAIwE,EAAYxE,EACjD2E,EAAsBF,EAAWvE,EAAIsE,EAAYtE,EACjD0E,EAA2BjD,KAAKuB,KAAKwB,EAAsBA,EAAsBC,EAAsBA,GAC7G,IAAIE,EAAQlD,KAAKmD,MAAMH,EAAqBD,GAI5C,OAHIG,GAAU,GAAMnD,IAClBmD,GAASjD,GAEJ,CACLiD,QACAE,SAAUH,GAGd,SAASI,EAAsBC,EAAKC,GAClC,OAAOvD,KAAKuB,KAAKvB,KAAKiB,IAAIsC,EAAIlF,EAAIiF,EAAIjF,EAAG,GAAK2B,KAAKiB,IAAIsC,EAAIhF,EAAI+E,EAAI/E,EAAG,IAExE,SAASiF,EAAWhE,EAAGC,GACrB,OAAQD,EAAIC,EAAIS,GAASD,EAAMF,EAEjC,SAAS0D,EAAgBjE,GACvB,OAAQA,EAAIS,EAAMA,GAAOA,EAE3B,SAASyD,GAAcR,EAAOS,EAAOC,EAAKC,GACxC,MAAMrE,EAAIiE,EAAgBP,GACpBY,EAAIL,EAAgBE,GACpB7D,EAAI2D,EAAgBG,GACpBG,EAAeN,EAAgBK,EAAItE,GACnCwE,EAAaP,EAAgB3D,EAAIN,GACjCyE,EAAeR,EAAgBjE,EAAIsE,GACnCI,EAAaT,EAAgBjE,EAAIM,GACvC,OAAON,IAAMsE,GAAKtE,IAAMM,GAAM+D,GAAyBC,IAAMhE,GACvDiE,EAAeC,GAAcC,EAAeC,EAEpD,SAASC,GAAY/Q,EAAOgP,EAAKC,GAC/B,OAAOrC,KAAKqC,IAAID,EAAKpC,KAAKoC,IAAIC,EAAKjP,IAErC,SAASgR,GAAYhR,GACnB,OAAO+Q,GAAY/Q,GAAQ,MAAO,OAEpC,SAASiR,GAAWjR,EAAOuQ,EAAOC,EAAK/B,EAAU,MAC/C,OAAOzO,GAAS4M,KAAKoC,IAAIuB,EAAOC,GAAO/B,GAAWzO,GAAS4M,KAAKqC,IAAIsB,EAAOC,GAAO/B,EAGpF,SAASyC,GAAQC,EAAOnR,EAAOoR,GAC7BA,EAAMA,GAAO,CAAEjN,GAAUgN,EAAMhN,GAASnE,GACxC,IAEIqR,EAFAC,EAAKH,EAAMlN,OAAS,EACpBsN,EAAK,EAET,MAAOD,EAAKC,EAAK,EACfF,EAAOE,EAAKD,GAAO,EACfF,EAAIC,GACNE,EAAKF,EAELC,EAAKD,EAGT,MAAO,CAACE,KAAID,MAEd,MAAME,GAAe,CAACL,EAAO/G,EAAKpK,EAAOyR,IACvCP,GAAQC,EAAOnR,EAAOyR,EAClBtN,GAASgN,EAAMhN,GAAOiG,IAAQpK,EAC9BmE,GAASgN,EAAMhN,GAAOiG,GAAOpK,GAC7B0R,GAAgB,CAACP,EAAO/G,EAAKpK,IACjCkR,GAAQC,EAAOnR,EAAOmE,GAASgN,EAAMhN,GAAOiG,IAAQpK,GACtD,SAAS2R,GAAeC,EAAQ5C,EAAKC,GACnC,IAAIsB,EAAQ,EACRC,EAAMoB,EAAO3N,OACjB,MAAOsM,EAAQC,GAAOoB,EAAOrB,GAASvB,EACpCuB,IAEF,MAAOC,EAAMD,GAASqB,EAAOpB,EAAM,GAAKvB,EACtCuB,IAEF,OAAOD,EAAQ,GAAKC,EAAMoB,EAAO3N,OAC7B2N,EAAO5J,MAAMuI,EAAOC,GACpBoB,EAEN,MAAMC,GAAc,CAAC,OAAQ,MAAO,QAAS,SAAU,WACvD,SAASC,GAAkBhD,EAAOiD,GAC5BjD,EAAMkD,SACRlD,EAAMkD,SAASC,UAAU3O,KAAKyO,IAGhCxO,OAAO2O,eAAepD,EAAO,WAAY,CACvCqD,cAAc,EACdC,YAAY,EACZpS,MAAO,CACLiS,UAAW,CAACF,MAGhBF,GAAYQ,QAASjI,IACnB,MAAMkI,EAAS,UAAYzG,EAAYzB,GACjCmI,EAAOzD,EAAM1E,GACnB7G,OAAO2O,eAAepD,EAAO1E,EAAK,CAChC+H,cAAc,EACdC,YAAY,EACZ,SAAStJ,GACP,MAAM0J,EAAMD,EAAKvJ,MAAMxJ,KAAMsJ,GAM7B,OALAgG,EAAMkD,SAASC,UAAUI,QAASI,IACF,oBAAnBA,EAAOH,IAChBG,EAAOH,MAAWxJ,KAGf0J,QAKf,SAASE,GAAoB5D,EAAOiD,GAClC,MAAMY,EAAO7D,EAAMkD,SACnB,IAAKW,EACH,OAEF,MAAMV,EAAYU,EAAKV,UACjB9N,EAAQ8N,EAAU5H,QAAQ0H,IACjB,IAAX5N,GACF8N,EAAUW,OAAOzO,EAAO,GAEtB8N,EAAUhO,OAAS,IAGvB4N,GAAYQ,QAASjI,WACZ0E,EAAM1E,YAER0E,EAAMkD,UAEf,SAASa,GAAaC,GACpB,MAAMC,EAAM,IAAIC,IAChB,IAAI5J,EAAGK,EACP,IAAKL,EAAI,EAAGK,EAAOqJ,EAAM7O,OAAQmF,EAAIK,IAAQL,EAC3C2J,EAAIE,IAAIH,EAAM1J,IAEhB,OAAI2J,EAAIzG,OAAS7C,EACRqJ,EAEFzN,MAAM6N,KAAKH,GAMpB,MAAMI,GAAoB,WACxB,MAAsB,qBAAXC,OACF,SAASxK,GACd,OAAOA,KAGJwK,OAAOC,sBANS,GAQzB,SAASC,GAAUzK,EAAIE,EAASwK,GAC9B,MAAMC,EAAaD,GAAY,CAAEzK,GAASzD,MAAMwC,UAAUG,MAAMD,KAAKe,IACrE,IAAI2K,GAAU,EACV3K,EAAO,GACX,OAAO,YAAY4K,GACjB5K,EAAO0K,EAAWE,GACbD,IACHA,GAAU,EACVN,GAAiBpL,KAAKqL,OAAQ,KAC5BK,GAAU,EACV5K,EAAGG,MAAMD,EAASD,OAK1B,SAAS6K,GAAS9K,EAAI+K,GACpB,IAAIC,EACJ,OAAO,YAAY/K,GAOjB,OANI8K,GACFE,aAAaD,GACbA,EAAUE,WAAWlL,EAAI+K,EAAO9K,IAEhCD,EAAGG,MAAMxJ,KAAMsJ,GAEV8K,GAGX,MAAMI,GAAsBC,GAAoB,UAAVA,EAAoB,OAAmB,QAAVA,EAAkB,QAAU,SACzFC,GAAiB,CAACD,EAAO1D,EAAOC,IAAkB,UAAVyD,EAAoB1D,EAAkB,QAAV0D,EAAkBzD,GAAOD,EAAQC,GAAO,EAC5G2D,GAAS,CAACF,EAAOG,EAAMC,EAAOC,KAClC,MAAMC,EAAQD,EAAM,OAAS,QAC7B,OAAOL,IAAUM,EAAQF,EAAkB,WAAVJ,GAAsBG,EAAOC,GAAS,EAAID,GAE7E,SAASI,GAAiCC,EAAMC,EAAQC,GACtD,MAAMC,EAAaF,EAAOzQ,OAC1B,IAAIsM,EAAQ,EACRsE,EAAQD,EACZ,GAAIH,EAAKK,QAAS,CAChB,MAAM,OAACC,EAAM,QAAEC,GAAWP,EACpBQ,EAAOF,EAAOE,MACd,IAACjG,EAAG,IAAEC,EAAG,WAAEiG,EAAU,WAAEC,GAAcJ,EAAOK,gBAC9CF,IACF3E,EAAQQ,GAAYnE,KAAKoC,IACvBwC,GAAawD,EAASD,EAAOE,KAAMjG,GAAKuC,GACxCoD,EAAqBC,EAAapD,GAAakD,EAAQO,EAAMF,EAAOM,iBAAiBrG,IAAMuC,IAC7F,EAAGqD,EAAa,IAGhBC,EADEM,EACMpE,GAAYnE,KAAKqC,IACvBuC,GAAawD,EAASD,EAAOE,KAAMhG,GAAK,GAAMqC,GAAK,EACnDqD,EAAqB,EAAInD,GAAakD,EAAQO,EAAMF,EAAOM,iBAAiBpG,IAAM,GAAMqC,GAAK,GAC/Ff,EAAOqE,GAAcrE,EAEbqE,EAAarE,EAGzB,MAAO,CAACA,QAAOsE,SAEjB,SAASS,GAAoBb,GAC3B,MAAM,OAACc,EAAM,OAAEC,EAAM,aAAEC,GAAgBhB,EACjCiB,EAAY,CAChBC,KAAMJ,EAAOvG,IACb4G,KAAML,EAAOtG,IACb4G,KAAML,EAAOxG,IACb8G,KAAMN,EAAOvG,KAEf,IAAKwG,EAEH,OADAhB,EAAKgB,aAAeC,GACb,EAET,MAAMK,EAAUN,EAAaE,OAASJ,EAAOvG,KAC1CyG,EAAaG,OAASL,EAAOtG,KAC7BwG,EAAaI,OAASL,EAAOxG,KAC7ByG,EAAaK,OAASN,EAAOvG,IAEhC,OADA1L,OAAOC,OAAOiS,EAAcC,GACrBK,EAGT,MAAMC,GAAUC,GAAY,IAANA,GAAiB,IAANA,EAC3BC,GAAY,CAACD,EAAGvF,EAAGnB,KAAQ3C,KAAKiB,IAAI,EAAG,IAAMoI,GAAK,IAAMrJ,KAAKuJ,KAAKF,EAAIvF,GAAK7D,EAAM0C,GACjF6G,GAAa,CAACH,EAAGvF,EAAGnB,IAAM3C,KAAKiB,IAAI,GAAI,GAAKoI,GAAKrJ,KAAKuJ,KAAKF,EAAIvF,GAAK7D,EAAM0C,GAAK,EAC/E8G,GAAU,CACdC,OAAQL,GAAKA,EACbM,WAAYN,GAAKA,EAAIA,EACrBO,YAAaP,IAAMA,GAAKA,EAAI,GAC5BQ,cAAeR,IAAOA,GAAK,IAAO,EAC9B,GAAMA,EAAIA,GACT,MAAUA,GAAMA,EAAI,GAAK,GAC9BS,YAAaT,GAAKA,EAAIA,EAAIA,EAC1BU,aAAcV,IAAMA,GAAK,GAAKA,EAAIA,EAAI,EACtCW,eAAgBX,IAAOA,GAAK,IAAO,EAC/B,GAAMA,EAAIA,EAAIA,EACd,KAAQA,GAAK,GAAKA,EAAIA,EAAI,GAC9BY,YAAaZ,GAAKA,EAAIA,EAAIA,EAAIA,EAC9Ba,aAAcb,MAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GAC5Cc,eAAgBd,IAAOA,GAAK,IAAO,EAC/B,GAAMA,EAAIA,EAAIA,EAAIA,GACjB,KAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GACnCe,YAAaf,GAAKA,EAAIA,EAAIA,EAAIA,EAAIA,EAClCgB,aAAchB,IAAMA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,EAC9CiB,eAAgBjB,IAAOA,GAAK,IAAO,EAC/B,GAAMA,EAAIA,EAAIA,EAAIA,EAAIA,EACtB,KAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,GACtCkB,WAAYlB,GAA8B,EAAxBrJ,KAAKwK,IAAInB,EAAI/I,GAC/BmK,YAAapB,GAAKrJ,KAAKuJ,IAAIF,EAAI/I,GAC/BoK,cAAerB,IAAM,IAAOrJ,KAAKwK,IAAIzK,EAAKsJ,GAAK,GAC/CsB,WAAYtB,GAAY,IAANA,EAAW,EAAIrJ,KAAKiB,IAAI,EAAG,IAAMoI,EAAI,IACvDuB,YAAavB,GAAY,IAANA,EAAW,EAA4B,EAAvBrJ,KAAKiB,IAAI,GAAI,GAAKoI,GACrDwB,cAAexB,GAAKD,GAAOC,GAAKA,EAAIA,EAAI,GACpC,GAAMrJ,KAAKiB,IAAI,EAAG,IAAU,EAAJoI,EAAQ,IAChC,IAAyC,EAAjCrJ,KAAKiB,IAAI,GAAI,IAAU,EAAJoI,EAAQ,KACvCyB,WAAYzB,GAAMA,GAAK,EAAKA,IAAMrJ,KAAKuB,KAAK,EAAI8H,EAAIA,GAAK,GACzD0B,YAAa1B,GAAKrJ,KAAKuB,KAAK,GAAK8H,GAAK,GAAKA,GAC3C2B,cAAe3B,IAAOA,GAAK,IAAO,GAC7B,IAAOrJ,KAAKuB,KAAK,EAAI8H,EAAIA,GAAK,GAC/B,IAAOrJ,KAAKuB,KAAK,GAAK8H,GAAK,GAAKA,GAAK,GACzC4B,cAAe5B,GAAKD,GAAOC,GAAKA,EAAIC,GAAUD,EAAG,KAAO,IACxD6B,eAAgB7B,GAAKD,GAAOC,GAAKA,EAAIG,GAAWH,EAAG,KAAO,IAC1D,iBAAiBA,GACf,MAAMvF,EAAI,MACJnB,EAAI,IACV,OAAOyG,GAAOC,GAAKA,EACjBA,EAAI,GACA,GAAMC,GAAc,EAAJD,EAAOvF,EAAGnB,GAC1B,GAAM,GAAM6G,GAAe,EAAJH,EAAQ,EAAGvF,EAAGnB,IAE7C,WAAW0G,GACT,MAAMvF,EAAI,QACV,OAAOuF,EAAIA,IAAMvF,EAAI,GAAKuF,EAAIvF,IAEhC,YAAYuF,GACV,MAAMvF,EAAI,QACV,OAAQuF,GAAK,GAAKA,IAAMvF,EAAI,GAAKuF,EAAIvF,GAAK,GAE5C,cAAcuF,GACZ,IAAIvF,EAAI,QACR,OAAKuF,GAAK,IAAO,EACDA,EAAIA,IAAuB,GAAhBvF,GAAK,QAAgBuF,EAAIvF,GAA3C,GAEF,KAAQuF,GAAK,GAAKA,IAAuB,GAAhBvF,GAAK,QAAgBuF,EAAIvF,GAAK,IAEhEqH,aAAc9B,GAAK,EAAII,GAAQ2B,cAAc,EAAI/B,GACjD,cAAcA,GACZ,MAAMgC,EAAI,OACJC,EAAI,KACV,OAAIjC,EAAK,EAAIiC,EACJD,EAAIhC,EAAIA,EAEbA,EAAK,EAAIiC,EACJD,GAAKhC,GAAM,IAAMiC,GAAMjC,EAAI,IAEhCA,EAAK,IAAMiC,EACND,GAAKhC,GAAM,KAAOiC,GAAMjC,EAAI,MAE9BgC,GAAKhC,GAAM,MAAQiC,GAAMjC,EAAI,SAEtCkC,gBAAiBlC,GAAMA,EAAI,GACO,GAA9BI,GAAQ0B,aAAiB,EAAJ9B,GACc,GAAnCI,GAAQ2B,cAAkB,EAAJ/B,EAAQ,GAAW;;;;;;;AAS/C,SAAS,GAAMjL,GACb,OAAOA,EAAI,GAAM,EAEnB,MAAMoN,GAAM,CAACpN,EAAGqN,EAAGC,IAAM1L,KAAKqC,IAAIrC,KAAKoC,IAAIhE,EAAGsN,GAAID,GAClD,SAASE,GAAIvN,GACX,OAAOoN,GAAI,GAAU,KAAJpN,GAAW,EAAG,KAEjC,SAASwN,GAAIxN,GACX,OAAOoN,GAAI,GAAU,IAAJpN,GAAU,EAAG,KAEhC,SAASyN,GAAIzN,GACX,OAAOoN,GAAI,GAAMpN,EAAI,MAAQ,IAAK,EAAG,GAEvC,SAAS0N,GAAI1N,GACX,OAAOoN,GAAI,GAAU,IAAJpN,GAAU,EAAG,KAEhC,MAAM2N,GAAQ,CAACC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIvN,EAAG,GAAIC,EAAG,GAAIuN,EAAG,GAAI1B,EAAG,GAAIxL,EAAG,GAAImN,EAAG,IACrJC,GAAM,IAAI,oBACVC,GAAK1N,GAAKyN,GAAQ,GAAJzN,GACd2N,GAAK3N,GAAKyN,IAAS,IAAJzN,IAAa,GAAKyN,GAAQ,GAAJzN,GACrC4N,GAAK5N,IAAW,IAAJA,IAAa,KAAY,GAAJA,GACjC6N,GAAUlP,GAAKiP,GAAGjP,EAAEmP,IAAMF,GAAGjP,EAAEoP,IAAMH,GAAGjP,EAAEqB,IAAM4N,GAAGjP,EAAEoB,GAC3D,SAASiO,GAASvO,GAChB,IACIwO,EADAjR,EAAMyC,EAAI7H,OAmBd,MAjBe,MAAX6H,EAAI,KACM,IAARzC,GAAqB,IAARA,EACfiR,EAAM,CACJH,EAAG,IAAsB,GAAhBxB,GAAM7M,EAAI,IACnBsO,EAAG,IAAsB,GAAhBzB,GAAM7M,EAAI,IACnBO,EAAG,IAAsB,GAAhBsM,GAAM7M,EAAI,IACnBM,EAAW,IAAR/C,EAA4B,GAAhBsP,GAAM7M,EAAI,IAAW,KAErB,IAARzC,GAAqB,IAARA,IACtBiR,EAAM,CACJH,EAAGxB,GAAM7M,EAAI,KAAO,EAAI6M,GAAM7M,EAAI,IAClCsO,EAAGzB,GAAM7M,EAAI,KAAO,EAAI6M,GAAM7M,EAAI,IAClCO,EAAGsM,GAAM7M,EAAI,KAAO,EAAI6M,GAAM7M,EAAI,IAClCM,EAAW,IAAR/C,EAAasP,GAAM7M,EAAI,KAAO,EAAI6M,GAAM7M,EAAI,IAAO,OAIrDwO,EAET,MAAM,GAAQ,CAAClO,EAAGyN,IAAMzN,EAAI,IAAMyN,EAAEzN,GAAK,GACzC,SAASmO,GAAUvP,GACjB,IAAI6O,EAAIK,GAAQlP,GAAK+O,GAAKC,GAC1B,OAAOhP,EACH,IAAM6O,EAAE7O,EAAEmP,GAAKN,EAAE7O,EAAEoP,GAAKP,EAAE7O,EAAEqB,GAAK,GAAMrB,EAAEoB,EAAGyN,QAC5ChY,EAEN,MAAM2Y,GAAS,+GACf,SAASC,GAASnC,EAAG5H,EAAG2H,GACtB,MAAMjM,EAAIsE,EAAI9D,KAAKoC,IAAIqJ,EAAG,EAAIA,GACxBwB,EAAI,CAACtL,EAAGrE,GAAKqE,EAAI+J,EAAI,IAAM,KAAOD,EAAIjM,EAAIQ,KAAKqC,IAAIrC,KAAKoC,IAAI9E,EAAI,EAAG,EAAIA,EAAG,IAAK,GACrF,MAAO,CAAC2P,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAExB,SAASa,GAASpC,EAAG5H,EAAG1F,GACtB,MAAM6O,EAAI,CAACtL,EAAGrE,GAAKqE,EAAI+J,EAAI,IAAM,IAAMtN,EAAIA,EAAI0F,EAAI9D,KAAKqC,IAAIrC,KAAKoC,IAAI9E,EAAG,EAAIA,EAAG,GAAI,GACnF,MAAO,CAAC2P,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAExB,SAASc,GAASrC,EAAGsC,EAAGvO,GACtB,MAAMwO,EAAMJ,GAASnC,EAAG,EAAG,IAC3B,IAAIlP,EAMJ,IALIwR,EAAIvO,EAAI,IACVjD,EAAI,GAAKwR,EAAIvO,GACbuO,GAAKxR,EACLiD,GAAKjD,GAEFA,EAAI,EAAGA,EAAI,EAAGA,IACjByR,EAAIzR,IAAM,EAAIwR,EAAIvO,EAClBwO,EAAIzR,IAAMwR,EAEZ,OAAOC,EAET,SAASC,GAASX,EAAGC,EAAG/N,EAAG6L,EAAGjJ,GAC5B,OAAIkL,IAAMlL,GACCmL,EAAI/N,GAAK6L,GAAMkC,EAAI/N,EAAI,EAAI,GAElC+N,IAAMnL,GACA5C,EAAI8N,GAAKjC,EAAI,GAEfiC,EAAIC,GAAKlC,EAAI,EAEvB,SAAS6C,GAAQ/P,GACf,MAAMwC,EAAQ,IACR2M,EAAInP,EAAEmP,EAAI3M,EACV4M,EAAIpP,EAAEoP,EAAI5M,EACVnB,EAAIrB,EAAEqB,EAAImB,EACVyB,EAAMrC,KAAKqC,IAAIkL,EAAGC,EAAG/N,GACrB2C,EAAMpC,KAAKoC,IAAImL,EAAGC,EAAG/N,GACrBgM,GAAKpJ,EAAMD,GAAO,EACxB,IAAIsJ,EAAG5H,EAAGwH,EAOV,OANIjJ,IAAQD,IACVkJ,EAAIjJ,EAAMD,EACV0B,EAAI2H,EAAI,GAAMH,GAAK,EAAIjJ,EAAMD,GAAOkJ,GAAKjJ,EAAMD,GAC/CsJ,EAAIwC,GAASX,EAAGC,EAAG/N,EAAG6L,EAAGjJ,GACzBqJ,EAAQ,GAAJA,EAAS,IAER,CAAK,EAAJA,EAAO5H,GAAK,EAAG2H,GAEzB,SAAS2C,GAAMnB,EAAGzN,EAAGC,EAAGuN,GACtB,OACEvU,MAAMuC,QAAQwE,GACVyN,EAAEzN,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAChByN,EAAEzN,EAAGC,EAAGuN,IACZ5W,IAAIwV,IAER,SAASyC,GAAQ3C,EAAG5H,EAAG2H,GACrB,OAAO2C,GAAMP,GAAUnC,EAAG5H,EAAG2H,GAE/B,SAAS6C,GAAQ5C,EAAGsC,EAAGvO,GACrB,OAAO2O,GAAML,GAAUrC,EAAGsC,EAAGvO,GAE/B,SAAS8O,GAAQ7C,EAAG5H,EAAG1F,GACrB,OAAOgQ,GAAMN,GAAUpC,EAAG5H,EAAG1F,GAE/B,SAASoQ,GAAI9C,GACX,OAAQA,EAAI,IAAM,KAAO,IAE3B,SAAS+C,GAASvP,GAChB,MAAMmM,EAAIuC,GAAOc,KAAKxP,GACtB,IACId,EADAoB,EAAI,IAER,IAAK6L,EACH,OAEEA,EAAE,KAAOjN,IACXoB,EAAI6L,EAAE,GAAKM,IAAKN,EAAE,IAAMO,IAAKP,EAAE,KAEjC,MAAMK,EAAI8C,IAAKnD,EAAE,IACXsD,GAAMtD,EAAE,GAAK,IACbuD,GAAMvD,EAAE,GAAK,IAQnB,OANEjN,EADW,QAATiN,EAAE,GACAiD,GAAQ5C,EAAGiD,EAAIC,GACD,QAATvD,EAAE,GACPkD,GAAQ7C,EAAGiD,EAAIC,GAEfP,GAAQ3C,EAAGiD,EAAIC,GAEd,CACLrB,EAAGnP,EAAE,GACLoP,EAAGpP,EAAE,GACLqB,EAAGrB,EAAE,GACLoB,EAAGA,GAGP,SAASqP,GAAOzQ,EAAG0Q,GACjB,IAAIpD,EAAIyC,GAAQ/P,GAChBsN,EAAE,GAAK8C,GAAI9C,EAAE,GAAKoD,GAClBpD,EAAI2C,GAAQ3C,GACZtN,EAAEmP,EAAI7B,EAAE,GACRtN,EAAEoP,EAAI9B,EAAE,GACRtN,EAAEqB,EAAIiM,EAAE,GAEV,SAASqD,GAAU3Q,GACjB,IAAKA,EACH,OAEF,MAAMoB,EAAI2O,GAAQ/P,GACZsN,EAAIlM,EAAE,GACNsE,EAAIgI,GAAItM,EAAE,IACViM,EAAIK,GAAItM,EAAE,IAChB,OAAOpB,EAAEoB,EAAI,IACT,QAAQkM,MAAM5H,OAAO2H,OAAOI,GAAIzN,EAAEoB,MAClC,OAAOkM,MAAM5H,OAAO2H,MAE1B,MAAMrV,GAAM,CACViI,EAAG,OACH2Q,EAAG,QACHC,EAAG,KACHC,EAAG,MACHC,EAAG,KACHC,EAAG,SACHC,EAAG,QACH3C,EAAG,KACH4C,EAAG,KACHC,EAAG,KACH5C,EAAG,KACHC,EAAG,QACHC,EAAG,QACH2C,EAAG,KACHC,EAAG,WACH3C,EAAG,KACH4C,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,QACH/C,EAAG,KACHgD,EAAG,KACHC,EAAG,OACHC,EAAG,KACHC,EAAG,QACHC,EAAG,MAECC,GAAU,CACdC,OAAQ,SACRC,YAAa,SACbC,KAAM,OACNC,UAAW,SACXC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,MAAO,IACPC,aAAc,SACdC,GAAI,KACJC,QAAS,SACTC,KAAM,SACNC,UAAW,SACXC,OAAQ,SACRC,SAAU,SACVC,QAAS,SACTC,IAAK,SACLC,YAAa,SACbC,QAAS,SACTC,QAAS,SACTC,KAAM,OACNC,IAAK,KACLC,MAAO,OACPC,QAAS,SACTC,KAAM,SACNC,KAAM,OACNC,KAAM,SACNC,OAAQ,SACRC,QAAS,SACTC,SAAU,SACVC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,IAAK,OACLC,OAAQ,SACRC,OAAQ,SACRC,SAAU,OACVC,OAAQ,SACRC,OAAQ,SACRC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,OAAQ,SACRC,QAAS,SACTC,UAAW,SACXC,IAAK,SACLC,OAAQ,SACRC,IAAK,SACLC,IAAK,OACLC,MAAO,SACPC,IAAK,SACLC,QAAS,SACTC,OAAQ,SACRC,QAAS,SACTC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,UAAW,SACXC,QAAS,SACTC,WAAY,SACZC,IAAK,SACLC,KAAM,SACNC,MAAO,SACPC,UAAW,SACXC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,QAAS,SACTC,IAAK,SACLC,KAAM,OACNC,QAAS,SACTC,IAAK,SACLC,OAAQ,SACRC,MAAO,SACPC,WAAY,SACZC,IAAK,KACLC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,UAAW,OACXC,IAAK,SACLC,SAAU,SACVC,WAAY,SACZC,QAAS,SACTC,SAAU,SACVC,QAAS,SACTC,WAAY,SACZC,KAAM,KACNC,OAAQ,SACRC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,QAAS,SACTC,KAAM,SACNC,UAAW,SACXC,OAAQ,SACRC,MAAO,SACPC,WAAY,SACZC,UAAW,SACXC,QAAS,SACTC,KAAM,SACNC,IAAK,SACLC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,YAAa,SACbC,GAAI,SACJC,SAAU,SACVC,MAAO,SACPC,UAAW,SACXC,MAAO,SACPC,UAAW,SACXC,MAAO,SACPC,QAAS,SACTC,MAAO,SACPC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,SAAU,OACVC,OAAQ,SACRC,IAAK,SACLC,IAAK,OACLC,MAAO,SACPC,OAAQ,SACRC,GAAI,SACJC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,UAAW,SACXC,GAAI,SACJC,MAAO,UAET,SAASC,KACP,MAAMC,EAAW,GACXzf,EAAOtD,OAAOsD,KAAKmW,IACnBuJ,EAAQhjB,OAAOsD,KAAK7D,IAC1B,IAAIoG,EAAGod,EAAGtc,EAAGuc,EAAIC,EACjB,IAAKtd,EAAI,EAAGA,EAAIvC,EAAK5C,OAAQmF,IAAK,CAEhC,IADAqd,EAAKC,EAAK7f,EAAKuC,GACVod,EAAI,EAAGA,EAAID,EAAMtiB,OAAQuiB,IAC5Btc,EAAIqc,EAAMC,GACVE,EAAKA,EAAGC,QAAQzc,EAAGlH,GAAIkH,IAEzBA,EAAI0c,SAAS5J,GAAQyJ,GAAK,IAC1BH,EAASI,GAAM,CAACxc,GAAK,GAAK,IAAMA,GAAK,EAAI,IAAU,IAAJA,GAEjD,OAAOoc,EAET,IAAI,GACJ,SAASO,GAAU/a,GACZ,KACH,GAAQua,KACR,GAAMS,YAAc,CAAC,EAAG,EAAG,EAAG,IAEhC,MAAM1a,EAAI,GAAMN,EAAIib,eACpB,OAAO3a,GAAK,CACV+N,EAAG/N,EAAE,GACLgO,EAAGhO,EAAE,GACLC,EAAGD,EAAE,GACLA,EAAgB,IAAbA,EAAEnI,OAAemI,EAAE,GAAK,KAG/B,MAAM4a,GAAS,uGACf,SAASC,GAASnb,GAChB,MAAMmM,EAAI+O,GAAO1L,KAAKxP,GACtB,IACIqO,EAAGC,EAAG/N,EADND,EAAI,IAER,GAAK6L,EAAL,CAGA,GAAIA,EAAE,KAAOkC,EAAG,CACd,MAAMnP,GAAKiN,EAAE,GACb7L,EAAI6L,EAAE,GAAKM,GAAIvN,GAAKoN,GAAQ,IAAJpN,EAAS,EAAG,KAQtC,OANAmP,GAAKlC,EAAE,GACPmC,GAAKnC,EAAE,GACP5L,GAAK4L,EAAE,GACPkC,EAAI,KAAOlC,EAAE,GAAKM,GAAI4B,GAAK/B,GAAI+B,EAAG,EAAG,MACrCC,EAAI,KAAOnC,EAAE,GAAKM,GAAI6B,GAAKhC,GAAIgC,EAAG,EAAG,MACrC/N,EAAI,KAAO4L,EAAE,GAAKM,GAAIlM,GAAK+L,GAAI/L,EAAG,EAAG,MAC9B,CACL8N,EAAGA,EACHC,EAAGA,EACH/N,EAAGA,EACHD,EAAGA,IAGP,SAAS8a,GAAUlc,GACjB,OAAOA,IACLA,EAAEoB,EAAI,IACF,QAAQpB,EAAEmP,MAAMnP,EAAEoP,MAAMpP,EAAEqB,MAAMoM,GAAIzN,EAAEoB,MACtC,OAAOpB,EAAEmP,MAAMnP,EAAEoP,MAAMpP,EAAEqB,MAGjC,MAAM,GAAKrB,GAAKA,GAAK,SAAgB,MAAJA,EAAqC,MAAzB4B,KAAKiB,IAAI7C,EAAG,EAAM,KAAe,KACxE,GAAOA,GAAKA,GAAK,OAAUA,EAAI,MAAQ4B,KAAKiB,KAAK7C,EAAI,MAAS,MAAO,KAC3E,SAASmc,GAAYC,EAAMC,EAAMpR,GAC/B,MAAMkE,EAAI,GAAK1B,GAAI2O,EAAKjN,IAClBC,EAAI,GAAK3B,GAAI2O,EAAKhN,IAClB/N,EAAI,GAAKoM,GAAI2O,EAAK/a,IACxB,MAAO,CACL8N,EAAG3B,GAAI,GAAG2B,EAAIlE,GAAK,GAAKwC,GAAI4O,EAAKlN,IAAMA,KACvCC,EAAG5B,GAAI,GAAG4B,EAAInE,GAAK,GAAKwC,GAAI4O,EAAKjN,IAAMA,KACvC/N,EAAGmM,GAAI,GAAGnM,EAAI4J,GAAK,GAAKwC,GAAI4O,EAAKhb,IAAMA,KACvCD,EAAGgb,EAAKhb,EAAI6J,GAAKoR,EAAKjb,EAAIgb,EAAKhb,IAGnC,SAASkb,GAAOtc,EAAG5B,EAAGme,GACpB,GAAIvc,EAAG,CACL,IAAIW,EAAMoP,GAAQ/P,GAClBW,EAAIvC,GAAKwD,KAAKqC,IAAI,EAAGrC,KAAKoC,IAAIrD,EAAIvC,GAAKuC,EAAIvC,GAAKme,EAAa,IAANne,EAAU,IAAM,IACvEuC,EAAMsP,GAAQtP,GACdX,EAAEmP,EAAIxO,EAAI,GACVX,EAAEoP,EAAIzO,EAAI,GACVX,EAAEqB,EAAIV,EAAI,IAGd,SAAS6b,GAAMxc,EAAGyc,GAChB,OAAOzc,EAAIzH,OAAOC,OAAOikB,GAAS,GAAIzc,GAAKA,EAE7C,SAAS0c,GAAWC,GAClB,IAAI3c,EAAI,CAACmP,EAAG,EAAGC,EAAG,EAAG/N,EAAG,EAAGD,EAAG,KAY9B,OAXI/G,MAAMuC,QAAQ+f,GACZA,EAAM1jB,QAAU,IAClB+G,EAAI,CAACmP,EAAGwN,EAAM,GAAIvN,EAAGuN,EAAM,GAAItb,EAAGsb,EAAM,GAAIvb,EAAG,KAC3Cub,EAAM1jB,OAAS,IACjB+G,EAAEoB,EAAIoM,GAAImP,EAAM,OAIpB3c,EAAIwc,GAAMG,EAAO,CAACxN,EAAG,EAAGC,EAAG,EAAG/N,EAAG,EAAGD,EAAG,IACvCpB,EAAEoB,EAAIoM,GAAIxN,EAAEoB,IAEPpB,EAET,SAAS4c,GAAc9b,GACrB,MAAsB,MAAlBA,EAAIC,OAAO,GACNkb,GAASnb,GAEXuP,GAASvP,GAElB,MAAM+b,GACJ,YAAYF,GACV,GAAIA,aAAiBE,GACnB,OAAOF,EAET,MAAMhjB,SAAcgjB,EACpB,IAAI3c,EACS,WAATrG,EACFqG,EAAI0c,GAAWC,GACG,WAAThjB,IACTqG,EAAIqP,GAASsN,IAAUd,GAAUc,IAAUC,GAAcD,IAE3DnoB,KAAKsoB,KAAO9c,EACZxL,KAAKuoB,SAAW/c,EAElB,YACE,OAAOxL,KAAKuoB,OAEd,UACE,IAAI/c,EAAIwc,GAAMhoB,KAAKsoB,MAInB,OAHI9c,IACFA,EAAEoB,EAAIqM,GAAIzN,EAAEoB,IAEPpB,EAET,QAAQK,GACN7L,KAAKsoB,KAAOJ,GAAWrc,GAEzB,YACE,OAAO7L,KAAKuoB,OAASb,GAAU1nB,KAAKsoB,WAAQjmB,EAE9C,YACE,OAAOrC,KAAKuoB,OAASxN,GAAU/a,KAAKsoB,WAAQjmB,EAE9C,YACE,OAAOrC,KAAKuoB,OAASpM,GAAUnc,KAAKsoB,WAAQjmB,EAE9C,IAAImmB,EAAOC,GACT,GAAID,EAAO,CACT,MAAME,EAAK1oB,KAAKqb,IACVsN,EAAKH,EAAMnN,IACjB,IAAIuN,EACJ,MAAM7Y,EAAI0Y,IAAWG,EAAK,GAAMH,EAC1BrN,EAAI,EAAIrL,EAAI,EACZnD,EAAI8b,EAAG9b,EAAI+b,EAAG/b,EACdic,IAAOzN,EAAIxO,KAAO,EAAIwO,GAAKA,EAAIxO,IAAM,EAAIwO,EAAIxO,IAAM,GAAK,EAC9Dgc,EAAK,EAAIC,EACTH,EAAG/N,EAAI,IAAOkO,EAAKH,EAAG/N,EAAIiO,EAAKD,EAAGhO,EAAI,GACtC+N,EAAG9N,EAAI,IAAOiO,EAAKH,EAAG9N,EAAIgO,EAAKD,EAAG/N,EAAI,GACtC8N,EAAG7b,EAAI,IAAOgc,EAAKH,EAAG7b,EAAI+b,EAAKD,EAAG9b,EAAI,GACtC6b,EAAG9b,EAAImD,EAAI2Y,EAAG9b,GAAK,EAAImD,GAAK4Y,EAAG/b,EAC/B5M,KAAKqb,IAAMqN,EAEb,OAAO1oB,KAET,YAAYwoB,EAAO/R,GAIjB,OAHI+R,IACFxoB,KAAKsoB,KAAOX,GAAY3nB,KAAKsoB,KAAME,EAAMF,KAAM7R,IAE1CzW,KAET,QACE,OAAO,IAAIqoB,GAAMroB,KAAKqb,KAExB,MAAMzO,GAEJ,OADA5M,KAAKsoB,KAAK1b,EAAIoM,GAAIpM,GACX5M,KAET,QAAQ+nB,GACN,MAAM1M,EAAMrb,KAAKsoB,KAEjB,OADAjN,EAAIzO,GAAK,EAAImb,EACN/nB,KAET,YACE,MAAMqb,EAAMrb,KAAKsoB,KACXQ,EAAM,GAAc,GAARzN,EAAIV,EAAkB,IAARU,EAAIT,EAAmB,IAARS,EAAIxO,GAEnD,OADAwO,EAAIV,EAAIU,EAAIT,EAAIS,EAAIxO,EAAIic,EACjB9oB,KAET,QAAQ+nB,GACN,MAAM1M,EAAMrb,KAAKsoB,KAEjB,OADAjN,EAAIzO,GAAK,EAAImb,EACN/nB,KAET,SACE,MAAMwL,EAAIxL,KAAKsoB,KAIf,OAHA9c,EAAEmP,EAAI,IAAMnP,EAAEmP,EACdnP,EAAEoP,EAAI,IAAMpP,EAAEoP,EACdpP,EAAEqB,EAAI,IAAMrB,EAAEqB,EACP7M,KAET,QAAQ+nB,GAEN,OADAD,GAAO9nB,KAAKsoB,KAAM,EAAGP,GACd/nB,KAET,OAAO+nB,GAEL,OADAD,GAAO9nB,KAAKsoB,KAAM,GAAIP,GACf/nB,KAET,SAAS+nB,GAEP,OADAD,GAAO9nB,KAAKsoB,KAAM,EAAGP,GACd/nB,KAET,WAAW+nB,GAET,OADAD,GAAO9nB,KAAKsoB,KAAM,GAAIP,GACf/nB,KAET,OAAOkc,GAEL,OADAD,GAAOjc,KAAKsoB,KAAMpM,GACXlc,MAGX,SAAS+oB,GAAUZ,GACjB,OAAO,IAAIE,GAAMF,GAGnB,SAASa,GAAoBxoB,GAC3B,GAAIA,GAA0B,kBAAVA,EAAoB,CACtC,MAAM2E,EAAO3E,EAAM8H,WACnB,MAAgB,2BAATnD,GAA8C,4BAATA,EAE9C,OAAO,EAET,SAAS,GAAM3E,GACb,OAAOwoB,GAAoBxoB,GAASA,EAAQuoB,GAAUvoB,GAExD,SAASyoB,GAAczoB,GACrB,OAAOwoB,GAAoBxoB,GACvBA,EACAuoB,GAAUvoB,GAAO0oB,SAAS,IAAKC,OAAO,IAAKpO,YAGjD,MAAMqO,GAAYrlB,OAAOyG,OAAO,MAC1B,GAAczG,OAAOyG,OAAO,MAClC,SAAS6e,GAAWC,EAAM1e,GACxB,IAAKA,EACH,OAAO0e,EAET,MAAMjiB,EAAOuD,EAAIsB,MAAM,KACvB,IAAK,IAAItC,EAAI,EAAGmF,EAAI1H,EAAK5C,OAAQmF,EAAImF,IAAKnF,EAAG,CAC3C,MAAMc,EAAIrD,EAAKuC,GACf0f,EAAOA,EAAK5e,KAAO4e,EAAK5e,GAAK3G,OAAOyG,OAAO,OAE7C,OAAO8e,EAET,SAAS,GAAIC,EAAMC,EAAOpX,GACxB,MAAqB,kBAAVoX,EACFve,EAAMoe,GAAWE,EAAMC,GAAQpX,GAEjCnH,EAAMoe,GAAWE,EAAM,IAAKC,GAErC,MAAMC,GACJ,YAAYC,GACV1pB,KAAK2pB,eAAYtnB,EACjBrC,KAAK4pB,gBAAkB,kBACvB5pB,KAAK6pB,YAAc,kBACnB7pB,KAAKwoB,MAAQ,OACbxoB,KAAKmD,SAAW,GAChBnD,KAAK8pB,iBAAoB1nB,GAAYA,EAAQK,MAAMsnB,SAASC,sBAC5DhqB,KAAKiqB,SAAW,GAChBjqB,KAAKkqB,OAAS,CACZ,YACA,WACA,QACA,aACA,aAEFlqB,KAAKmqB,KAAO,CACVC,OAAQ,qDACRtd,KAAM,GACNnF,MAAO,SACP0iB,WAAY,IACZ5B,OAAQ,MAEVzoB,KAAKsqB,MAAQ,GACbtqB,KAAKuqB,qBAAuB,CAACC,EAAKpmB,IAAY6kB,GAAc7kB,EAAQwlB,iBACpE5pB,KAAKyqB,iBAAmB,CAACD,EAAKpmB,IAAY6kB,GAAc7kB,EAAQylB,aAChE7pB,KAAK0qB,WAAa,CAACF,EAAKpmB,IAAY6kB,GAAc7kB,EAAQokB,OAC1DxoB,KAAK2qB,UAAY,IACjB3qB,KAAK4qB,YAAc,CACjBC,KAAM,UACNC,WAAW,EACXC,kBAAkB,GAEpB/qB,KAAKgrB,qBAAsB,EAC3BhrB,KAAKirB,QAAU,KACfjrB,KAAKkrB,QAAU,KACflrB,KAAKmrB,SAAU,EACfnrB,KAAK4F,QAAU,GACf5F,KAAKorB,YAAa,EAClBprB,KAAKqrB,WAAQhpB,EACbrC,KAAKsrB,OAAS,GACdtrB,KAAKurB,UAAW,EAChBvrB,KAAKwrB,yBAA0B,EAC/BxrB,KAAKyrB,SAAS/B,GAEhB,IAAIF,EAAOpX,GACT,OAAO,GAAIpS,KAAMwpB,EAAOpX,GAE1B,IAAIoX,GACF,OAAOH,GAAWrpB,KAAMwpB,GAE1B,SAASA,EAAOpX,GACd,OAAO,GAAI,GAAaoX,EAAOpX,GAEjC,SAASoX,EAAOpX,GACd,OAAO,GAAIgX,GAAWI,EAAOpX,GAE/B,MAAMoX,EAAOlpB,EAAMorB,EAAaC,GAC9B,MAAMC,EAAcvC,GAAWrpB,KAAMwpB,GAC/BqC,EAAoBxC,GAAWrpB,KAAM0rB,GACrCI,EAAc,IAAMxrB,EAC1ByD,OAAOgoB,iBAAiBH,EAAa,CACnC,CAACE,GAAc,CACbtrB,MAAOorB,EAAYtrB,GACnB0rB,UAAU,GAEZ,CAAC1rB,GAAO,CACNsS,YAAY,EACZ,MACE,MAAMqZ,EAAQjsB,KAAK8rB,GACbvhB,EAASshB,EAAkBF,GACjC,OAAIljB,EAASwjB,GACJloB,OAAOC,OAAO,GAAIuG,EAAQ0hB,GAE5BnjB,EAAemjB,EAAO1hB,IAE/B,IAAI/J,GACFR,KAAK8rB,GAAetrB,OAM9B,IAAI0rB,GAAW,IAAIzC,GAAS,CAC1B0C,YAAc7rB,IAAUA,EAAK8rB,WAAW,MACxCC,WAAa/rB,GAAkB,WAATA,EACtBgqB,MAAO,CACLgC,UAAW,eAEb1B,YAAa,CACXuB,aAAa,EACbE,YAAY,KAIhB,SAASE,GAAapC,GACpB,OAAKA,GAAQhiB,EAAcgiB,EAAKrd,OAAS3E,EAAcgiB,EAAKC,QACnD,MAEDD,EAAKxiB,MAAQwiB,EAAKxiB,MAAQ,IAAM,KACrCwiB,EAAK1B,OAAS0B,EAAK1B,OAAS,IAAM,IACnC0B,EAAKrd,KAAO,MACZqd,EAAKC,OAET,SAASoC,GAAahC,EAAKjpB,EAAMkrB,EAAIC,EAASC,GAC5C,IAAIC,EAAYrrB,EAAKorB,GAQrB,OAPKC,IACHA,EAAYrrB,EAAKorB,GAAUnC,EAAIqC,YAAYF,GAAQpnB,MACnDknB,EAAG3oB,KAAK6oB,IAENC,EAAYF,IACdA,EAAUE,GAELF,EAET,SAASI,GAAatC,EAAKL,EAAM4C,EAAeC,GAC9CA,EAAQA,GAAS,GACjB,IAAIzrB,EAAOyrB,EAAMzrB,KAAOyrB,EAAMzrB,MAAQ,GAClCkrB,EAAKO,EAAMC,eAAiBD,EAAMC,gBAAkB,GACpDD,EAAM7C,OAASA,IACjB5oB,EAAOyrB,EAAMzrB,KAAO,GACpBkrB,EAAKO,EAAMC,eAAiB,GAC5BD,EAAM7C,KAAOA,GAEfK,EAAI0C,OACJ1C,EAAIL,KAAOA,EACX,IAAIuC,EAAU,EACd,MAAMziB,EAAO8iB,EAActoB,OAC3B,IAAImF,EAAGod,EAAGmG,EAAMC,EAAOC,EACvB,IAAKzjB,EAAI,EAAGA,EAAIK,EAAML,IAEpB,GADAwjB,EAAQL,EAAcnjB,QACRvH,IAAV+qB,GAAiC,OAAVA,IAAqC,IAAnBhlB,EAAQglB,GACnDV,EAAUF,GAAahC,EAAKjpB,EAAMkrB,EAAIC,EAASU,QAC1C,GAAIhlB,EAAQglB,GACjB,IAAKpG,EAAI,EAAGmG,EAAOC,EAAM3oB,OAAQuiB,EAAImG,EAAMnG,IACzCqG,EAAcD,EAAMpG,QACA3kB,IAAhBgrB,GAA6C,OAAhBA,GAAyBjlB,EAAQilB,KAChEX,EAAUF,GAAahC,EAAKjpB,EAAMkrB,EAAIC,EAASW,IAKvD7C,EAAI8C,UACJ,MAAMC,EAAQd,EAAGhoB,OAAS,EAC1B,GAAI8oB,EAAQR,EAActoB,OAAQ,CAChC,IAAKmF,EAAI,EAAGA,EAAI2jB,EAAO3jB,WACdrI,EAAKkrB,EAAG7iB,IAEjB6iB,EAAGrZ,OAAO,EAAGma,GAEf,OAAOb,EAET,SAASc,GAAY/qB,EAAOgrB,EAAOloB,GACjC,MAAMukB,EAAmBrnB,EAAMirB,wBACzBC,EAAsB,IAAVpoB,EAAc6H,KAAKqC,IAAIlK,EAAQ,EAAG,IAAO,EAC3D,OAAO6H,KAAKc,OAAOuf,EAAQE,GAAa7D,GAAoBA,EAAmB6D,EAEjF,SAASC,GAAY5mB,EAAQwjB,GAC3BA,EAAMA,GAAOxjB,EAAOG,WAAW,MAC/BqjB,EAAI0C,OACJ1C,EAAIqD,iBACJrD,EAAIsD,UAAU,EAAG,EAAG9mB,EAAOzB,MAAOyB,EAAOvB,QACzC+kB,EAAI8C,UAEN,SAASS,GAAUvD,EAAKpmB,EAASqH,EAAGE,GAClCqiB,GAAgBxD,EAAKpmB,EAASqH,EAAGE,EAAG,MAEtC,SAASqiB,GAAgBxD,EAAKpmB,EAASqH,EAAGE,EAAGyP,GAC3C,IAAIjW,EAAM8oB,EAASC,EAASphB,EAAMqhB,EAAc5oB,EAChD,MAAMoC,EAAQvD,EAAQgqB,WAChBC,EAAWjqB,EAAQiqB,SACnBC,EAASlqB,EAAQkqB,OACvB,IAAIC,GAAOF,GAAY,GAAK5gB,EAC5B,GAAI9F,GAA0B,kBAAVA,IAClBxC,EAAOwC,EAAMW,WACA,8BAATnD,GAAiD,+BAATA,GAM1C,OALAqlB,EAAI0C,OACJ1C,EAAIgE,UAAU/iB,EAAGE,GACjB6e,EAAIvO,OAAOsS,GACX/D,EAAIiE,UAAU9mB,GAAQA,EAAMpC,MAAQ,GAAIoC,EAAMlC,OAAS,EAAGkC,EAAMpC,MAAOoC,EAAMlC,aAC7E+kB,EAAI8C,UAIR,KAAIte,MAAMsf,IAAWA,GAAU,GAA/B,CAIA,OADA9D,EAAIkE,YACI/mB,GACR,QACMyT,EACFoP,EAAImE,QAAQljB,EAAGE,EAAGyP,EAAI,EAAGkT,EAAQ,EAAG,EAAGjhB,GAEvCmd,EAAIoE,IAAInjB,EAAGE,EAAG2iB,EAAQ,EAAGjhB,GAE3Bmd,EAAIqE,YACJ,MACF,IAAK,WACHrE,EAAIsE,OAAOrjB,EAAI2B,KAAKuJ,IAAI4X,GAAOD,EAAQ3iB,EAAIyB,KAAKwK,IAAI2W,GAAOD,GAC3DC,GAAO3gB,EACP4c,EAAIuE,OAAOtjB,EAAI2B,KAAKuJ,IAAI4X,GAAOD,EAAQ3iB,EAAIyB,KAAKwK,IAAI2W,GAAOD,GAC3DC,GAAO3gB,EACP4c,EAAIuE,OAAOtjB,EAAI2B,KAAKuJ,IAAI4X,GAAOD,EAAQ3iB,EAAIyB,KAAKwK,IAAI2W,GAAOD,GAC3D9D,EAAIqE,YACJ,MACF,IAAK,cACHV,EAAwB,KAATG,EACfxhB,EAAOwhB,EAASH,EAChBF,EAAU7gB,KAAKwK,IAAI2W,EAAM5gB,GAAcb,EACvCohB,EAAU9gB,KAAKuJ,IAAI4X,EAAM5gB,GAAcb,EACvC0d,EAAIoE,IAAInjB,EAAIwiB,EAAStiB,EAAIuiB,EAASC,EAAcI,EAAMphB,EAAIohB,EAAM7gB,GAChE8c,EAAIoE,IAAInjB,EAAIyiB,EAASviB,EAAIsiB,EAASE,EAAcI,EAAM7gB,EAAS6gB,GAC/D/D,EAAIoE,IAAInjB,EAAIwiB,EAAStiB,EAAIuiB,EAASC,EAAcI,EAAKA,EAAM7gB,GAC3D8c,EAAIoE,IAAInjB,EAAIyiB,EAASviB,EAAIsiB,EAASE,EAAcI,EAAM7gB,EAAS6gB,EAAMphB,GACrEqd,EAAIqE,YACJ,MACF,IAAK,OACH,IAAKR,EAAU,CACbvhB,EAAOM,KAAK4hB,QAAUV,EACtB/oB,EAAQ6V,EAAIA,EAAI,EAAItO,EACpB0d,EAAIyE,KAAKxjB,EAAIlG,EAAOoG,EAAImB,EAAM,EAAIvH,EAAO,EAAIuH,GAC7C,MAEFyhB,GAAO5gB,EACT,IAAK,UACHsgB,EAAU7gB,KAAKwK,IAAI2W,GAAOD,EAC1BJ,EAAU9gB,KAAKuJ,IAAI4X,GAAOD,EAC1B9D,EAAIsE,OAAOrjB,EAAIwiB,EAAStiB,EAAIuiB,GAC5B1D,EAAIuE,OAAOtjB,EAAIyiB,EAASviB,EAAIsiB,GAC5BzD,EAAIuE,OAAOtjB,EAAIwiB,EAAStiB,EAAIuiB,GAC5B1D,EAAIuE,OAAOtjB,EAAIyiB,EAASviB,EAAIsiB,GAC5BzD,EAAIqE,YACJ,MACF,IAAK,WACHN,GAAO5gB,EACT,IAAK,QACHsgB,EAAU7gB,KAAKwK,IAAI2W,GAAOD,EAC1BJ,EAAU9gB,KAAKuJ,IAAI4X,GAAOD,EAC1B9D,EAAIsE,OAAOrjB,EAAIwiB,EAAStiB,EAAIuiB,GAC5B1D,EAAIuE,OAAOtjB,EAAIwiB,EAAStiB,EAAIuiB,GAC5B1D,EAAIsE,OAAOrjB,EAAIyiB,EAASviB,EAAIsiB,GAC5BzD,EAAIuE,OAAOtjB,EAAIyiB,EAASviB,EAAIsiB,GAC5B,MACF,IAAK,OACHA,EAAU7gB,KAAKwK,IAAI2W,GAAOD,EAC1BJ,EAAU9gB,KAAKuJ,IAAI4X,GAAOD,EAC1B9D,EAAIsE,OAAOrjB,EAAIwiB,EAAStiB,EAAIuiB,GAC5B1D,EAAIuE,OAAOtjB,EAAIwiB,EAAStiB,EAAIuiB,GAC5B1D,EAAIsE,OAAOrjB,EAAIyiB,EAASviB,EAAIsiB,GAC5BzD,EAAIuE,OAAOtjB,EAAIyiB,EAASviB,EAAIsiB,GAC5BM,GAAO5gB,EACPsgB,EAAU7gB,KAAKwK,IAAI2W,GAAOD,EAC1BJ,EAAU9gB,KAAKuJ,IAAI4X,GAAOD,EAC1B9D,EAAIsE,OAAOrjB,EAAIwiB,EAAStiB,EAAIuiB,GAC5B1D,EAAIuE,OAAOtjB,EAAIwiB,EAAStiB,EAAIuiB,GAC5B1D,EAAIsE,OAAOrjB,EAAIyiB,EAASviB,EAAIsiB,GAC5BzD,EAAIuE,OAAOtjB,EAAIyiB,EAASviB,EAAIsiB,GAC5B,MACF,IAAK,OACHA,EAAU7S,EAAIA,EAAI,EAAIhO,KAAKwK,IAAI2W,GAAOD,EACtCJ,EAAU9gB,KAAKuJ,IAAI4X,GAAOD,EAC1B9D,EAAIsE,OAAOrjB,EAAIwiB,EAAStiB,EAAIuiB,GAC5B1D,EAAIuE,OAAOtjB,EAAIwiB,EAAStiB,EAAIuiB,GAC5B,MACF,IAAK,OACH1D,EAAIsE,OAAOrjB,EAAGE,GACd6e,EAAIuE,OAAOtjB,EAAI2B,KAAKwK,IAAI2W,GAAOD,EAAQ3iB,EAAIyB,KAAKuJ,IAAI4X,GAAOD,GAC3D,MAEF9D,EAAI0E,OACA9qB,EAAQ+qB,YAAc,GACxB3E,EAAI4E,UAGR,SAASC,GAAeC,EAAOC,EAAMC,GAEnC,OADAA,EAASA,GAAU,IACXD,GAASD,GAASA,EAAM7jB,EAAI8jB,EAAK3a,KAAO4a,GAAUF,EAAM7jB,EAAI8jB,EAAK1a,MAAQ2a,GACjFF,EAAM3jB,EAAI4jB,EAAKE,IAAMD,GAAUF,EAAM3jB,EAAI4jB,EAAKG,OAASF,EAEzD,SAASG,GAASnF,EAAK+E,GACrB/E,EAAI0C,OACJ1C,EAAIkE,YACJlE,EAAIyE,KAAKM,EAAK3a,KAAM2a,EAAKE,IAAKF,EAAK1a,MAAQ0a,EAAK3a,KAAM2a,EAAKG,OAASH,EAAKE,KACzEjF,EAAIoF,OAEN,SAASC,GAAWrF,GAClBA,EAAI8C,UAEN,SAASwC,GAAetF,EAAKuF,EAAUxlB,EAAQylB,EAAMnF,GACnD,IAAKkF,EACH,OAAOvF,EAAIuE,OAAOxkB,EAAOkB,EAAGlB,EAAOoB,GAErC,GAAa,WAATkf,EAAmB,CACrB,MAAMoF,GAAYF,EAAStkB,EAAIlB,EAAOkB,GAAK,EAC3C+e,EAAIuE,OAAOkB,EAAUF,EAASpkB,GAC9B6e,EAAIuE,OAAOkB,EAAU1lB,EAAOoB,OACV,UAATkf,MAAuBmF,EAChCxF,EAAIuE,OAAOgB,EAAStkB,EAAGlB,EAAOoB,GAE9B6e,EAAIuE,OAAOxkB,EAAOkB,EAAGskB,EAASpkB,GAEhC6e,EAAIuE,OAAOxkB,EAAOkB,EAAGlB,EAAOoB,GAE9B,SAASukB,GAAe1F,EAAKuF,EAAUxlB,EAAQylB,GAC7C,IAAKD,EACH,OAAOvF,EAAIuE,OAAOxkB,EAAOkB,EAAGlB,EAAOoB,GAErC6e,EAAI2F,cACFH,EAAOD,EAASK,KAAOL,EAASM,KAChCL,EAAOD,EAASO,KAAOP,EAASQ,KAChCP,EAAOzlB,EAAO8lB,KAAO9lB,EAAO6lB,KAC5BJ,EAAOzlB,EAAOgmB,KAAOhmB,EAAO+lB,KAC5B/lB,EAAOkB,EACPlB,EAAOoB,GAEX,SAAS6kB,GAAWhG,EAAKiG,EAAMhlB,EAAGE,EAAGwe,EAAMuG,EAAO,IAChD,MAAMC,EAAQvoB,EAAQqoB,GAAQA,EAAO,CAACA,GAChCrB,EAASsB,EAAKE,YAAc,GAA0B,KAArBF,EAAKG,YAC5C,IAAIjnB,EAAGknB,EAIP,IAHAtG,EAAI0C,OACJ1C,EAAIL,KAAOA,EAAKwC,OAChBoE,GAAcvG,EAAKkG,GACd9mB,EAAI,EAAGA,EAAI+mB,EAAMlsB,SAAUmF,EAC9BknB,EAAOH,EAAM/mB,GACTwlB,IACEsB,EAAKG,cACPrG,EAAIwG,YAAcN,EAAKG,aAEpB1oB,EAAcuoB,EAAKE,eACtBpG,EAAIyG,UAAYP,EAAKE,aAEvBpG,EAAI0G,WAAWJ,EAAMrlB,EAAGE,EAAG+kB,EAAKS,WAElC3G,EAAI4G,SAASN,EAAMrlB,EAAGE,EAAG+kB,EAAKS,UAC9BE,GAAa7G,EAAK/e,EAAGE,EAAGmlB,EAAMJ,GAC9B/kB,GAAKwe,EAAKE,WAEZG,EAAI8C,UAEN,SAASyD,GAAcvG,EAAKkG,GACtBA,EAAKY,aACP9G,EAAIgE,UAAUkC,EAAKY,YAAY,GAAIZ,EAAKY,YAAY,IAEjDnpB,EAAcuoB,EAAKrC,WACtB7D,EAAIvO,OAAOyU,EAAKrC,UAEdqC,EAAKlI,QACPgC,EAAI+G,UAAYb,EAAKlI,OAEnBkI,EAAKc,YACPhH,EAAIgH,UAAYd,EAAKc,WAEnBd,EAAKe,eACPjH,EAAIiH,aAAef,EAAKe,cAG5B,SAASJ,GAAa7G,EAAK/e,EAAGE,EAAGmlB,EAAMJ,GACrC,GAAIA,EAAKgB,eAAiBhB,EAAKiB,UAAW,CACxC,MAAMC,EAAUpH,EAAIqC,YAAYiE,GAC1Blc,EAAOnJ,EAAImmB,EAAQC,sBACnBhd,EAAQpJ,EAAImmB,EAAQE,uBACpBrC,EAAM9jB,EAAIimB,EAAQG,wBAClBrC,EAAS/jB,EAAIimB,EAAQI,yBACrBC,EAAcvB,EAAKgB,eAAiBjC,EAAMC,GAAU,EAAIA,EAC9DlF,EAAIwG,YAAcxG,EAAI+G,UACtB/G,EAAIkE,YACJlE,EAAIyG,UAAYP,EAAKwB,iBAAmB,EACxC1H,EAAIsE,OAAOla,EAAMqd,GACjBzH,EAAIuE,OAAOla,EAAOod,GAClBzH,EAAI4E,UAGR,SAAS+C,GAAmB3H,EAAKyE,GAC/B,MAAM,EAACxjB,EAAC,EAAEE,EAAC,EAAEyP,EAAC,EAAEtC,EAAC,OAAEwV,GAAUW,EAC7BzE,EAAIoE,IAAInjB,EAAI6iB,EAAO8D,QAASzmB,EAAI2iB,EAAO8D,QAAS9D,EAAO8D,SAAU1kB,EAASP,GAAI,GAC9Eqd,EAAIuE,OAAOtjB,EAAGE,EAAImN,EAAIwV,EAAO+D,YAC7B7H,EAAIoE,IAAInjB,EAAI6iB,EAAO+D,WAAY1mB,EAAImN,EAAIwV,EAAO+D,WAAY/D,EAAO+D,WAAYllB,EAAIO,GAAS,GAC1F8c,EAAIuE,OAAOtjB,EAAI2P,EAAIkT,EAAOgE,YAAa3mB,EAAImN,GAC3C0R,EAAIoE,IAAInjB,EAAI2P,EAAIkT,EAAOgE,YAAa3mB,EAAImN,EAAIwV,EAAOgE,YAAahE,EAAOgE,YAAa5kB,EAAS,GAAG,GAChG8c,EAAIuE,OAAOtjB,EAAI2P,EAAGzP,EAAI2iB,EAAOiE,UAC7B/H,EAAIoE,IAAInjB,EAAI2P,EAAIkT,EAAOiE,SAAU5mB,EAAI2iB,EAAOiE,SAAUjE,EAAOiE,SAAU,GAAI7kB,GAAS,GACpF8c,EAAIuE,OAAOtjB,EAAI6iB,EAAO8D,QAASzmB,GAGjC,MAAM6mB,GAAc,IAAIC,OAAO,wCACzBC,GAAa,IAAID,OAAO,yEAC9B,SAASE,GAAanyB,EAAOsM,GAC3B,MAAM8lB,GAAW,GAAKpyB,GAAOqyB,MAAML,IACnC,IAAKI,GAA0B,WAAfA,EAAQ,GACtB,OAAc,IAAP9lB,EAGT,OADAtM,GAASoyB,EAAQ,GACTA,EAAQ,IAChB,IAAK,KACH,OAAOpyB,EACT,IAAK,IACHA,GAAS,IACT,MAEF,OAAOsM,EAAOtM,EAEhB,MAAMsyB,GAAetnB,IAAMA,GAAK,EAChC,SAASunB,GAAkBvyB,EAAOc,GAChC,MAAMwZ,EAAM,GACNkY,EAAWvqB,EAASnH,GACpB+F,EAAO2rB,EAAWjvB,OAAOsD,KAAK/F,GAASA,EACvC2xB,EAAOxqB,EAASjI,GAClBwyB,EACEE,GAAQpqB,EAAetI,EAAM0yB,GAAO1yB,EAAMc,EAAM4xB,KAChDA,GAAQ1yB,EAAM0yB,GAChB,IAAM1yB,EACV,IAAK,MAAM0yB,KAAQ7rB,EACjByT,EAAIoY,GAAQJ,GAAaG,EAAKC,IAEhC,OAAOpY,EAET,SAASqY,GAAO3yB,GACd,OAAOuyB,GAAkBvyB,EAAO,CAACivB,IAAK,IAAK5a,MAAO,IAAK6a,OAAQ,IAAK9a,KAAM,MAE5E,SAASwe,GAAc5yB,GACrB,OAAOuyB,GAAkBvyB,EAAO,CAAC,UAAW,WAAY,aAAc,gBAExE,SAAS6yB,GAAU7yB,GACjB,MAAMqL,EAAMsnB,GAAO3yB,GAGnB,OAFAqL,EAAItG,MAAQsG,EAAI+I,KAAO/I,EAAIgJ,MAC3BhJ,EAAIpG,OAASoG,EAAI4jB,IAAM5jB,EAAI6jB,OACpB7jB,EAET,SAASynB,GAAOlvB,EAASmvB,GACvBnvB,EAAUA,GAAW,GACrBmvB,EAAWA,GAAYrH,GAAS/B,KAChC,IAAIrd,EAAOhE,EAAe1E,EAAQ0I,KAAMymB,EAASzmB,MAC7B,kBAATA,IACTA,EAAOsa,SAASta,EAAM,KAExB,IAAInF,EAAQmB,EAAe1E,EAAQuD,MAAO4rB,EAAS5rB,OAC/CA,KAAW,GAAKA,GAAOkrB,MAAMH,MAC/Bc,QAAQC,KAAK,kCAAoC9rB,EAAQ,KACzDA,EAAQ,IAEV,MAAMwiB,EAAO,CACXC,OAAQthB,EAAe1E,EAAQgmB,OAAQmJ,EAASnJ,QAChDC,WAAYsI,GAAa7pB,EAAe1E,EAAQimB,WAAYkJ,EAASlJ,YAAavd,GAClFA,OACAnF,QACA8gB,OAAQ3f,EAAe1E,EAAQqkB,OAAQ8K,EAAS9K,QAChDkE,OAAQ,IAGV,OADAxC,EAAKwC,OAASJ,GAAapC,GACpBA,EAET,SAASuJ,GAAQC,EAAQvxB,EAASuC,EAAOivB,GACvC,IACIhqB,EAAGK,EAAMzJ,EADTqzB,GAAY,EAEhB,IAAKjqB,EAAI,EAAGK,EAAO0pB,EAAOlvB,OAAQmF,EAAIK,IAAQL,EAE5C,GADApJ,EAAQmzB,EAAO/pB,QACDvH,IAAV7B,SAGY6B,IAAZD,GAA0C,oBAAV5B,IAClCA,EAAQA,EAAM4B,GACdyxB,GAAY,QAEAxxB,IAAVsC,GAAuByD,EAAQ5H,KACjCA,EAAQA,EAAMmE,EAAQnE,EAAMiE,QAC5BovB,GAAY,QAEAxxB,IAAV7B,GAIF,OAHIozB,IAASC,IACXD,EAAKC,WAAY,GAEZrzB,EAIb,SAASszB,GAAUC,EAAQC,EAAOC,GAChC,MAAM,IAACzkB,EAAG,IAAEC,GAAOskB,EACbG,EAAS/qB,EAAY6qB,GAAQvkB,EAAMD,GAAO,GAC1C2kB,EAAW,CAAC3zB,EAAOiT,IAAQwgB,GAAyB,IAAVzzB,EAAc,EAAIA,EAAQiT,EAC1E,MAAO,CACLjE,IAAK2kB,EAAS3kB,GAAMpC,KAAK8B,IAAIglB,IAC7BzkB,IAAK0kB,EAAS1kB,EAAKykB,IAGvB,SAASE,GAAcC,EAAejyB,GACpC,OAAO2B,OAAOC,OAAOD,OAAOyG,OAAO6pB,GAAgBjyB,GAGrD,SAASkyB,GAAgBC,EAAQC,EAAW,CAAC,IAAKC,EAAaF,EAAQhB,EAAUmB,EAAY,KAAMH,EAAO,KACnG9nB,EAAQ8mB,KACXA,EAAWoB,GAAS,YAAaJ,IAEnC,MAAMvH,EAAQ,CACZ,CAAC4H,OAAOC,aAAc,SACtBC,YAAY,EACZC,QAASR,EACTS,YAAaP,EACbnI,UAAWiH,EACX0B,WAAYP,EACZQ,SAAW1L,GAAU8K,GAAgB,CAAC9K,KAAU+K,GAASC,EAAUC,EAAYlB,IAEjF,OAAO,IAAI4B,MAAMnI,EAAO,CACtB,eAAeziB,EAAQ2oB,GAIrB,cAHO3oB,EAAO2oB,UACP3oB,EAAO6qB,aACPb,EAAO,GAAGrB,IACV,GAET,IAAI3oB,EAAQ2oB,GACV,OAAOmC,GAAQ9qB,EAAQ2oB,EACrB,IAAMoC,GAAqBpC,EAAMsB,EAAUD,EAAQhqB,KAEvD,yBAAyBA,EAAQ2oB,GAC/B,OAAOqC,QAAQC,yBAAyBjrB,EAAOwqB,QAAQ,GAAI7B,IAE7D,iBACE,OAAOqC,QAAQE,eAAelB,EAAO,KAEvC,IAAIhqB,EAAQ2oB,GACV,OAAOwC,GAAqBnrB,GAAQ1G,SAASqvB,IAE/C,QAAQ3oB,GACN,OAAOmrB,GAAqBnrB,IAE9B,IAAIA,EAAQ2oB,EAAM1yB,GAChB,MAAMm1B,EAAUprB,EAAOqrB,WAAarrB,EAAOqrB,SAAWlB,KAGtD,OAFAnqB,EAAO2oB,GAAQyC,EAAQzC,GAAQ1yB,SACxB+J,EAAO6qB,OACP,KAIb,SAASS,GAAeC,EAAO1zB,EAAS2zB,EAAUC,GAChD,MAAMhJ,EAAQ,CACZ8H,YAAY,EACZmB,OAAQH,EACRI,SAAU9zB,EACV+zB,UAAWJ,EACXK,OAAQ,IAAI5iB,IACZkW,aAAcA,GAAaoM,EAAOE,GAClCK,WAAa7L,GAAQqL,GAAeC,EAAOtL,EAAKuL,EAAUC,GAC1Dd,SAAW1L,GAAUqM,GAAeC,EAAMZ,SAAS1L,GAAQpnB,EAAS2zB,EAAUC,IAEhF,OAAO,IAAIb,MAAMnI,EAAO,CACtB,eAAeziB,EAAQ2oB,GAGrB,cAFO3oB,EAAO2oB,UACP4C,EAAM5C,IACN,GAET,IAAI3oB,EAAQ2oB,EAAMoD,GAChB,OAAOjB,GAAQ9qB,EAAQ2oB,EACrB,IAAMqD,GAAoBhsB,EAAQ2oB,EAAMoD,KAE5C,yBAAyB/rB,EAAQ2oB,GAC/B,OAAO3oB,EAAOmf,aAAa8M,QACvBjB,QAAQvoB,IAAI8oB,EAAO5C,GAAQ,CAACtgB,YAAY,EAAMD,cAAc,QAAQtQ,EACpEkzB,QAAQC,yBAAyBM,EAAO5C,IAE9C,iBACE,OAAOqC,QAAQE,eAAeK,IAEhC,IAAIvrB,EAAQ2oB,GACV,OAAOqC,QAAQvoB,IAAI8oB,EAAO5C,IAE5B,UACE,OAAOqC,QAAQkB,QAAQX,IAEzB,IAAIvrB,EAAQ2oB,EAAM1yB,GAGhB,OAFAs1B,EAAM5C,GAAQ1yB,SACP+J,EAAO2oB,IACP,KAIb,SAASxJ,GAAaoM,EAAO5J,EAAW,CAACwK,YAAY,EAAMC,WAAW,IACpE,MAAM,YAACxK,EAAcD,EAASwK,WAAU,WAAErK,EAAaH,EAASyK,UAAS,SAAEC,EAAW1K,EAASsK,SAAWV,EAC1G,MAAO,CACLU,QAASI,EACTF,WAAYvK,EACZwK,UAAWtK,EACXwK,aAAcnqB,EAAWyf,GAAeA,EAAc,IAAMA,EAC5D2K,YAAapqB,EAAW2f,GAAcA,EAAa,IAAMA,GAG7D,MAAM0K,GAAU,CAACC,EAAQ12B,IAAS02B,EAASA,EAAS3qB,EAAY/L,GAAQA,EAClE22B,GAAmB,CAAC/D,EAAM1yB,IAAUiI,EAASjI,IAAmB,aAAT0yB,IACzB,OAAjCnvB,OAAO0xB,eAAej1B,IAAmBA,EAAM02B,cAAgBnzB,QAClE,SAASsxB,GAAQ9qB,EAAQ2oB,EAAMQ,GAC7B,GAAI3vB,OAAOsE,UAAUiD,eAAe/C,KAAKgC,EAAQ2oB,GAC/C,OAAO3oB,EAAO2oB,GAEhB,MAAM1yB,EAAQkzB,IAEd,OADAnpB,EAAO2oB,GAAQ1yB,EACRA,EAET,SAAS+1B,GAAoBhsB,EAAQ2oB,EAAMoD,GACzC,MAAM,OAACL,EAAM,SAAEC,EAAQ,UAAEC,EAAWzM,aAAcyN,GAAe5sB,EACjE,IAAI/J,EAAQy1B,EAAO/C,GAUnB,OATIxmB,EAAWlM,IAAU22B,EAAYN,aAAa3D,KAChD1yB,EAAQ42B,GAAmBlE,EAAM1yB,EAAO+J,EAAQ+rB,IAE9CluB,EAAQ5H,IAAUA,EAAMiE,SAC1BjE,EAAQ62B,GAAcnE,EAAM1yB,EAAO+J,EAAQ4sB,EAAYL,cAErDG,GAAiB/D,EAAM1yB,KACzBA,EAAQq1B,GAAer1B,EAAO01B,EAAUC,GAAaA,EAAUjD,GAAOiE,IAEjE32B,EAET,SAAS42B,GAAmBlE,EAAM1yB,EAAO+J,EAAQ+rB,GAC/C,MAAM,OAACL,EAAM,SAAEC,EAAQ,UAAEC,EAAS,OAAEC,GAAU7rB,EAC9C,GAAI6rB,EAAOppB,IAAIkmB,GACb,MAAM,IAAIjsB,MAAM,uBAAyBpB,MAAM6N,KAAK0iB,GAAQkB,KAAK,MAAQ,KAAOpE,GAQlF,OANAkD,EAAO3iB,IAAIyf,GACX1yB,EAAQA,EAAM01B,EAAUC,GAAaG,GACrCF,EAAOmB,OAAOrE,GACV+D,GAAiB/D,EAAM1yB,KACzBA,EAAQg3B,GAAkBvB,EAAOlB,QAASkB,EAAQ/C,EAAM1yB,IAEnDA,EAET,SAAS62B,GAAcnE,EAAM1yB,EAAO+J,EAAQusB,GAC1C,MAAM,OAACb,EAAM,SAAEC,EAAQ,UAAEC,EAAWzM,aAAcyN,GAAe5sB,EACjE,GAAIkC,EAAQypB,EAASvxB,QAAUmyB,EAAY5D,GACzC1yB,EAAQA,EAAM01B,EAASvxB,MAAQnE,EAAMiE,aAChC,GAAIgE,EAASjI,EAAM,IAAK,CAC7B,MAAMi3B,EAAMj3B,EACN+zB,EAAS0B,EAAOlB,QAAQ2C,OAAOxmB,GAAKA,IAAMumB,GAChDj3B,EAAQ,GACR,IAAK,MAAMuM,KAAQ0qB,EAAK,CACtB,MAAM3rB,EAAW0rB,GAAkBjD,EAAQ0B,EAAQ/C,EAAMnmB,GACzDvM,EAAMsD,KAAK+xB,GAAe/pB,EAAUoqB,EAAUC,GAAaA,EAAUjD,GAAOiE,KAGhF,OAAO32B,EAET,SAASm3B,GAAgBpE,EAAUL,EAAM1yB,GACvC,OAAOkM,EAAW6mB,GAAYA,EAASL,EAAM1yB,GAAS+yB,EAExD,MAAMqE,GAAW,CAAChtB,EAAKitB,KAAmB,IAARjtB,EAAeitB,EAC9B,kBAARjtB,EAAmBgB,EAAiBisB,EAAQjtB,QAAOvI,EAC9D,SAASy1B,GAAUvkB,EAAKwkB,EAAcntB,EAAKotB,EAAgBx3B,GACzD,IAAK,MAAMq3B,KAAUE,EAAc,CACjC,MAAMvO,EAAQoO,GAAShtB,EAAKitB,GAC5B,GAAIrO,EAAO,CACTjW,EAAIE,IAAI+V,GACR,MAAM+J,EAAWoE,GAAgBnO,EAAM8C,UAAW1hB,EAAKpK,GACvD,GAAIiM,EAAQ8mB,IAAaA,IAAa3oB,GAAO2oB,IAAayE,EACxD,OAAOzE,OAEJ,IAAc,IAAV/J,GAAmB/c,EAAQurB,IAAmBptB,IAAQotB,EAC/D,OAAO,KAGX,OAAO,EAET,SAASR,GAAkBO,EAAcjsB,EAAUonB,EAAM1yB,GACvD,MAAMi0B,EAAa3oB,EAASkpB,YACtBzB,EAAWoE,GAAgB7rB,EAASwgB,UAAW4G,EAAM1yB,GACrDy3B,EAAY,IAAIF,KAAiBtD,GACjClhB,EAAM,IAAIC,IAChBD,EAAIE,IAAIjT,GACR,IAAIoK,EAAMstB,GAAiB3kB,EAAK0kB,EAAW/E,EAAMK,GAAYL,EAAM1yB,GACnE,OAAY,OAARoK,MAGA6B,EAAQ8mB,IAAaA,IAAaL,IACpCtoB,EAAMstB,GAAiB3kB,EAAK0kB,EAAW1E,EAAU3oB,EAAKpK,GAC1C,OAARoK,KAIC0pB,GAAgBzuB,MAAM6N,KAAKH,GAAM,CAAC,IAAKkhB,EAAYlB,EACxD,IAAM4E,GAAarsB,EAAUonB,EAAM1yB,KAEvC,SAAS03B,GAAiB3kB,EAAK0kB,EAAWrtB,EAAK2oB,EAAUxmB,GACvD,MAAOnC,EACLA,EAAMktB,GAAUvkB,EAAK0kB,EAAWrtB,EAAK2oB,EAAUxmB,GAEjD,OAAOnC,EAET,SAASutB,GAAarsB,EAAUonB,EAAM1yB,GACpC,MAAMq3B,EAAS/rB,EAASmpB,aAClB/B,KAAQ2E,IACZA,EAAO3E,GAAQ,IAEjB,MAAM3oB,EAASstB,EAAO3E,GACtB,OAAI9qB,EAAQmC,IAAW9B,EAASjI,GACvBA,EAEF+J,EAET,SAAS+qB,GAAqBpC,EAAMsB,EAAUD,EAAQuB,GACpD,IAAIt1B,EACJ,IAAK,MAAMw2B,KAAUxC,EAEnB,GADAh0B,EAAQm0B,GAASoC,GAAQC,EAAQ9D,GAAOqB,GACpC9nB,EAAQjM,GACV,OAAOy2B,GAAiB/D,EAAM1yB,GAC1Bg3B,GAAkBjD,EAAQuB,EAAO5C,EAAM1yB,GACvCA,EAIV,SAASm0B,GAAS/pB,EAAK2pB,GACrB,IAAK,MAAM/K,KAAS+K,EAAQ,CAC1B,IAAK/K,EACH,SAEF,MAAMhpB,EAAQgpB,EAAM5e,GACpB,GAAI6B,EAAQjM,GACV,OAAOA,GAIb,SAASk1B,GAAqBnrB,GAC5B,IAAIlD,EAAOkD,EAAO6qB,MAIlB,OAHK/tB,IACHA,EAAOkD,EAAO6qB,MAAQgD,GAAyB7tB,EAAOwqB,UAEjD1tB,EAET,SAAS+wB,GAAyB7D,GAChC,MAAMhhB,EAAM,IAAIC,IAChB,IAAK,MAAMgW,KAAS+K,EAClB,IAAK,MAAM3pB,KAAO7G,OAAOsD,KAAKmiB,GAAOkO,OAAOhtB,IAAMA,EAAE0hB,WAAW,MAC7D7Y,EAAIE,IAAI7I,GAGZ,OAAO/E,MAAM6N,KAAKH,GAEpB,SAAS8kB,GAA4BpjB,EAAM1T,EAAMwP,EAAOsE,GACtD,MAAM,OAACE,GAAUN,GACX,IAACrK,EAAM,KAAO5K,KAAKs4B,SACnBC,EAAS,IAAI1yB,MAAMwP,GACzB,IAAIzL,EAAGK,EAAMtF,EAAOoI,EACpB,IAAKnD,EAAI,EAAGK,EAAOoL,EAAOzL,EAAIK,IAAQL,EACpCjF,EAAQiF,EAAImH,EACZhE,EAAOxL,EAAKoD,GACZ4zB,EAAO3uB,GAAK,CACV+Q,EAAGpF,EAAOijB,MAAM5sB,EAAiBmB,EAAMnC,GAAMjG,IAGjD,OAAO4zB,EAGT,MAAME,GAAUjzB,OAAOizB,SAAW,MAC5BC,GAAW,CAACxjB,EAAQtL,IAAMA,EAAIsL,EAAOzQ,SAAWyQ,EAAOtL,GAAG+uB,MAAQzjB,EAAOtL,GACzEgvB,GAAgBjO,GAA4B,MAAdA,EAAoB,IAAM,IAC9D,SAASkO,GAAYC,EAAYC,EAAaC,EAAYviB,GACxD,MAAMsZ,EAAW+I,EAAWH,KAAOI,EAAcD,EAC3C1yB,EAAU2yB,EACVE,EAAOD,EAAWL,KAAOI,EAAcC,EACvCE,EAAMzoB,EAAsBrK,EAAS2pB,GACrCoJ,EAAM1oB,EAAsBwoB,EAAM7yB,GACxC,IAAIgzB,EAAMF,GAAOA,EAAMC,GACnBE,EAAMF,GAAOD,EAAMC,GACvBC,EAAMpqB,MAAMoqB,GAAO,EAAIA,EACvBC,EAAMrqB,MAAMqqB,GAAO,EAAIA,EACvB,MAAMC,EAAK7iB,EAAI2iB,EACTG,EAAK9iB,EAAI4iB,EACf,MAAO,CACLtJ,SAAU,CACRtkB,EAAGrF,EAAQqF,EAAI6tB,GAAML,EAAKxtB,EAAIskB,EAAStkB,GACvCE,EAAGvF,EAAQuF,EAAI2tB,GAAML,EAAKttB,EAAIokB,EAASpkB,IAEzCstB,KAAM,CACJxtB,EAAGrF,EAAQqF,EAAI8tB,GAAMN,EAAKxtB,EAAIskB,EAAStkB,GACvCE,EAAGvF,EAAQuF,EAAI4tB,GAAMN,EAAKttB,EAAIokB,EAASpkB,KAI7C,SAAS6tB,GAAetkB,EAAQukB,EAAQC,GACtC,MAAMC,EAAYzkB,EAAOzQ,OACzB,IAAIm1B,EAAQC,EAAOC,EAAMC,EAAkBC,EACvCC,EAAavB,GAASxjB,EAAQ,GAClC,IAAK,IAAItL,EAAI,EAAGA,EAAI+vB,EAAY,IAAK/vB,EACnCowB,EAAeC,EACfA,EAAavB,GAASxjB,EAAQtL,EAAI,GAC7BowB,GAAiBC,IAGlB9rB,EAAasrB,EAAO7vB,GAAI,EAAG6uB,IAC7BiB,EAAG9vB,GAAK8vB,EAAG9vB,EAAI,GAAK,GAGtBgwB,EAASF,EAAG9vB,GAAK6vB,EAAO7vB,GACxBiwB,EAAQH,EAAG9vB,EAAI,GAAK6vB,EAAO7vB,GAC3BmwB,EAAmB3sB,KAAKiB,IAAIurB,EAAQ,GAAKxsB,KAAKiB,IAAIwrB,EAAO,GACrDE,GAAoB,IAGxBD,EAAO,EAAI1sB,KAAKuB,KAAKorB,GACrBL,EAAG9vB,GAAKgwB,EAASE,EAAOL,EAAO7vB,GAC/B8vB,EAAG9vB,EAAI,GAAKiwB,EAAQC,EAAOL,EAAO7vB,MAGtC,SAASswB,GAAgBhlB,EAAQwkB,EAAI/O,EAAY,KAC/C,MAAMwP,EAAYvB,GAAajO,GACzBgP,EAAYzkB,EAAOzQ,OACzB,IAAI21B,EAAOC,EAAaL,EACpBC,EAAavB,GAASxjB,EAAQ,GAClC,IAAK,IAAItL,EAAI,EAAGA,EAAI+vB,IAAa/vB,EAAG,CAIlC,GAHAywB,EAAcL,EACdA,EAAeC,EACfA,EAAavB,GAASxjB,EAAQtL,EAAI,IAC7BowB,EACH,SAEF,MAAMM,EAASN,EAAarP,GACtB4P,EAASP,EAAaG,GACxBE,IACFD,GAASE,EAASD,EAAY1P,IAAc,EAC5CqP,EAAa,MAAMrP,GAAe2P,EAASF,EAC3CJ,EAAa,MAAMG,GAAeI,EAASH,EAAQV,EAAG9vB,IAEpDqwB,IACFG,GAASH,EAAWtP,GAAa2P,GAAU,EAC3CN,EAAa,MAAMrP,GAAe2P,EAASF,EAC3CJ,EAAa,MAAMG,GAAeI,EAASH,EAAQV,EAAG9vB,KAI5D,SAAS4wB,GAAoBtlB,EAAQyV,EAAY,KAC/C,MAAMwP,EAAYvB,GAAajO,GACzBgP,EAAYzkB,EAAOzQ,OACnBg1B,EAAS5zB,MAAM8zB,GAAWzK,KAAK,GAC/BwK,EAAK7zB,MAAM8zB,GACjB,IAAI/vB,EAAGywB,EAAaL,EAChBC,EAAavB,GAASxjB,EAAQ,GAClC,IAAKtL,EAAI,EAAGA,EAAI+vB,IAAa/vB,EAI3B,GAHAywB,EAAcL,EACdA,EAAeC,EACfA,EAAavB,GAASxjB,EAAQtL,EAAI,GAC7BowB,EAAL,CAGA,GAAIC,EAAY,CACd,MAAMQ,EAAaR,EAAWtP,GAAaqP,EAAarP,GACxD8O,EAAO7vB,GAAoB,IAAf6wB,GAAoBR,EAAWE,GAAaH,EAAaG,IAAcM,EAAa,EAElGf,EAAG9vB,GAAMywB,EACJJ,EACAnsB,EAAK2rB,EAAO7vB,EAAI,MAAQkE,EAAK2rB,EAAO7vB,IAAO,GAC3C6vB,EAAO7vB,EAAI,GAAK6vB,EAAO7vB,IAAM,EAFhB6vB,EAAO7vB,EAAI,GADN6vB,EAAO7vB,GAKhC4vB,GAAetkB,EAAQukB,EAAQC,GAC/BQ,GAAgBhlB,EAAQwkB,EAAI/O,GAE9B,SAAS+P,GAAgBC,EAAInrB,EAAKC,GAChC,OAAOrC,KAAKqC,IAAIrC,KAAKoC,IAAImrB,EAAIlrB,GAAMD,GAErC,SAASorB,GAAgB1lB,EAAQqa,GAC/B,IAAI3lB,EAAGK,EAAMqlB,EAAOuL,EAAQC,EACxBC,EAAa1L,GAAena,EAAO,GAAIqa,GAC3C,IAAK3lB,EAAI,EAAGK,EAAOiL,EAAOzQ,OAAQmF,EAAIK,IAAQL,EAC5CkxB,EAAaD,EACbA,EAASE,EACTA,EAAanxB,EAAIK,EAAO,GAAKolB,GAAena,EAAOtL,EAAI,GAAI2lB,GACtDsL,IAGLvL,EAAQpa,EAAOtL,GACXkxB,IACFxL,EAAMc,KAAOsK,GAAgBpL,EAAMc,KAAMb,EAAK3a,KAAM2a,EAAK1a,OACzDya,EAAMgB,KAAOoK,GAAgBpL,EAAMgB,KAAMf,EAAKE,IAAKF,EAAKG,SAEtDqL,IACFzL,EAAMe,KAAOqK,GAAgBpL,EAAMe,KAAMd,EAAK3a,KAAM2a,EAAK1a,OACzDya,EAAMiB,KAAOmK,GAAgBpL,EAAMiB,KAAMhB,EAAKE,IAAKF,EAAKG,UAI9D,SAASsL,GAA2B9lB,EAAQ9Q,EAASmrB,EAAM0L,EAAMtQ,GAC/D,IAAI/gB,EAAGK,EAAMqlB,EAAO4L,EAIpB,GAHI92B,EAAQ+2B,WACVjmB,EAASA,EAAOwiB,OAAQiD,IAAQA,EAAGhC,OAEE,aAAnCv0B,EAAQg3B,uBACVZ,GAAoBtlB,EAAQyV,OACvB,CACL,IAAI0Q,EAAOJ,EAAO/lB,EAAOA,EAAOzQ,OAAS,GAAKyQ,EAAO,GACrD,IAAKtL,EAAI,EAAGK,EAAOiL,EAAOzQ,OAAQmF,EAAIK,IAAQL,EAC5C0lB,EAAQpa,EAAOtL,GACfsxB,EAAgBrC,GACdwC,EACA/L,EACApa,EAAO9H,KAAKoC,IAAI5F,EAAI,EAAGK,GAAQgxB,EAAO,EAAI,IAAMhxB,GAChD7F,EAAQk3B,SAEVhM,EAAMc,KAAO8K,EAAcnL,SAAStkB,EACpC6jB,EAAMgB,KAAO4K,EAAcnL,SAASpkB,EACpC2jB,EAAMe,KAAO6K,EAAcjC,KAAKxtB,EAChC6jB,EAAMiB,KAAO2K,EAAcjC,KAAKttB,EAChC0vB,EAAO/L,EAGPlrB,EAAQw2B,iBACVA,GAAgB1lB,EAAQqa,GAI5B,SAASgM,KACP,MAAyB,qBAAX3nB,QAA8C,qBAAb4nB,SAEjD,SAASC,GAAeC,GACtB,IAAI7D,EAAS6D,EAAQC,WAIrB,OAHI9D,GAAgC,wBAAtBA,EAAOvvB,aACnBuvB,EAASA,EAAO+D,MAEX/D,EAET,SAASgE,GAAcC,EAAYxS,EAAMyS,GACvC,IAAIC,EASJ,MAR0B,kBAAfF,GACTE,EAAgB5U,SAAS0U,EAAY,KACJ,IAA7BA,EAAWjxB,QAAQ,OACrBmxB,EAAgBA,EAAgB,IAAM1S,EAAKqS,WAAWI,KAGxDC,EAAgBF,EAEXE,EAET,MAAMC,GAAoBC,GAAYtoB,OAAOqoB,iBAAiBC,EAAS,MACvE,SAASC,GAASC,EAAI7sB,GACpB,OAAO0sB,GAAiBG,GAAIC,iBAAiB9sB,GAE/C,MAAM+sB,GAAY,CAAC,MAAO,QAAS,SAAU,QAC7C,SAASC,GAAmB52B,EAAQgC,EAAO60B,GACzC,MAAM9tB,EAAS,GACf8tB,EAASA,EAAS,IAAMA,EAAS,GACjC,IAAK,IAAI5yB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,MAAM6yB,EAAMH,GAAU1yB,GACtB8E,EAAO+tB,GAAOvzB,WAAWvD,EAAOgC,EAAQ,IAAM80B,EAAMD,KAAY,EAIlE,OAFA9tB,EAAOnJ,MAAQmJ,EAAOkG,KAAOlG,EAAOmG,MACpCnG,EAAOjJ,OAASiJ,EAAO+gB,IAAM/gB,EAAOghB,OAC7BhhB,EAET,MAAMguB,GAAe,CAACjxB,EAAGE,EAAGpB,KAAYkB,EAAI,GAAKE,EAAI,MAAQpB,IAAWA,EAAOoyB,YAC/E,SAASC,GAAkB1vB,EAAGlG,GAC5B,MAAM61B,EAAU3vB,EAAE2vB,QACZvyB,EAASuyB,GAAWA,EAAQp4B,OAASo4B,EAAQ,GAAK3vB,GAClD,QAAC4vB,EAAO,QAAEC,GAAWzyB,EAC3B,IACImB,EAAGE,EADHqxB,GAAM,EAEV,GAAIN,GAAaI,EAASC,EAAS7vB,EAAE3C,QACnCkB,EAAIqxB,EACJnxB,EAAIoxB,MACC,CACL,MAAM9N,EAAOjoB,EAAOi2B,wBACpBxxB,EAAInB,EAAO4yB,QAAUjO,EAAKra,KAC1BjJ,EAAIrB,EAAO6yB,QAAUlO,EAAKQ,IAC1BuN,GAAM,EAER,MAAO,CAACvxB,IAAGE,IAAGqxB,OAEhB,SAASI,GAAoBC,EAAK56B,GAChC,GAAI,WAAY46B,EACd,OAAOA,EAET,MAAM,OAACr2B,EAAM,wBAAE0mB,GAA2BjrB,EACpCkF,EAAQs0B,GAAiBj1B,GACzBs2B,EAAgC,eAApB31B,EAAM41B,UAClBC,EAAWjB,GAAmB50B,EAAO,WACrC81B,EAAUlB,GAAmB50B,EAAO,SAAU,UAC9C,EAAC8D,EAAC,EAAEE,EAAC,IAAEqxB,GAAOJ,GAAkBS,EAAKr2B,GACrCinB,EAAUuP,EAAS5oB,MAAQooB,GAAOS,EAAQ7oB,MAC1CsZ,EAAUsP,EAAS/N,KAAOuN,GAAOS,EAAQhO,KAC/C,IAAI,MAAClqB,EAAK,OAAEE,GAAUhD,EAKtB,OAJI66B,IACF/3B,GAASi4B,EAASj4B,MAAQk4B,EAAQl4B,MAClCE,GAAU+3B,EAAS/3B,OAASg4B,EAAQh4B,QAE/B,CACLgG,EAAG2B,KAAKc,OAAOzC,EAAIwiB,GAAW1oB,EAAQyB,EAAOzB,MAAQmoB,GACrD/hB,EAAGyB,KAAKc,OAAOvC,EAAIuiB,GAAWzoB,EAASuB,EAAOvB,OAASioB,IAG3D,SAASgQ,GAAiB12B,EAAQzB,EAAOE,GACvC,IAAI0rB,EAAUwM,EACd,QAAct7B,IAAVkD,QAAkClD,IAAXoD,EAAsB,CAC/C,MAAMm4B,EAAYnC,GAAez0B,GACjC,GAAK42B,EAGE,CACL,MAAM3O,EAAO2O,EAAUX,wBACjBY,EAAiB5B,GAAiB2B,GAClCE,EAAkBvB,GAAmBsB,EAAgB,SAAU,SAC/DE,EAAmBxB,GAAmBsB,EAAgB,WAC5Dt4B,EAAQ0pB,EAAK1pB,MAAQw4B,EAAiBx4B,MAAQu4B,EAAgBv4B,MAC9DE,EAASwpB,EAAKxpB,OAASs4B,EAAiBt4B,OAASq4B,EAAgBr4B,OACjE0rB,EAAW0K,GAAcgC,EAAe1M,SAAUyM,EAAW,eAC7DD,EAAY9B,GAAcgC,EAAeF,UAAWC,EAAW,qBAV/Dr4B,EAAQyB,EAAOg3B,YACfv4B,EAASuB,EAAOi3B,aAYpB,MAAO,CACL14B,QACAE,SACA0rB,SAAUA,GAAY5jB,EACtBowB,UAAWA,GAAapwB,GAG5B,MAAM2wB,GAAS1yB,GAAK4B,KAAKc,MAAU,GAAJ1C,GAAU,GACzC,SAAS2yB,GAAen3B,EAAQo3B,EAASC,EAAUC,GACjD,MAAM32B,EAAQs0B,GAAiBj1B,GACzBu3B,EAAUhC,GAAmB50B,EAAO,UACpCwpB,EAAW0K,GAAcl0B,EAAMwpB,SAAUnqB,EAAQ,gBAAkBuG,EACnEowB,EAAY9B,GAAcl0B,EAAMg2B,UAAW32B,EAAQ,iBAAmBuG,EACtEixB,EAAgBd,GAAiB12B,EAAQo3B,EAASC,GACxD,IAAI,MAAC94B,EAAK,OAAEE,GAAU+4B,EACtB,GAAwB,gBAApB72B,EAAM41B,UAA6B,CACrC,MAAME,EAAUlB,GAAmB50B,EAAO,SAAU,SAC9C61B,EAAWjB,GAAmB50B,EAAO,WAC3CpC,GAASi4B,EAASj4B,MAAQk4B,EAAQl4B,MAClCE,GAAU+3B,EAAS/3B,OAASg4B,EAAQh4B,OAStC,OAPAF,EAAQ6H,KAAKqC,IAAI,EAAGlK,EAAQg5B,EAAQh5B,OACpCE,EAAS2H,KAAKqC,IAAI,EAAG6uB,EAAclxB,KAAKkB,MAAM/I,EAAQ+4B,GAAe74B,EAAS84B,EAAQ94B,QACtFF,EAAQ24B,GAAO9wB,KAAKoC,IAAIjK,EAAO4rB,EAAUqN,EAAcrN,WACvD1rB,EAASy4B,GAAO9wB,KAAKoC,IAAI/J,EAAQk4B,EAAWa,EAAcb,YACtDp4B,IAAUE,IACZA,EAASy4B,GAAO34B,EAAQ,IAEnB,CACLA,QACAE,UAGJ,SAASg5B,GAAYh8B,EAAOi8B,EAAYC,GACtC,MAAMC,EAAaF,GAAc,EAC3BG,EAAezxB,KAAKkB,MAAM7L,EAAMgD,OAASm5B,GACzCE,EAAc1xB,KAAKkB,MAAM7L,EAAM8C,MAAQq5B,GAC7Cn8B,EAAMgD,OAASo5B,EAAeD,EAC9Bn8B,EAAM8C,MAAQu5B,EAAcF,EAC5B,MAAM53B,EAASvE,EAAMuE,OAKrB,OAJIA,EAAOW,QAAUg3B,IAAgB33B,EAAOW,MAAMlC,SAAWuB,EAAOW,MAAMpC,SACxEyB,EAAOW,MAAMlC,OAAYhD,EAAMgD,OAAT,KACtBuB,EAAOW,MAAMpC,MAAW9C,EAAM8C,MAAT,OAEnB9C,EAAMirB,0BAA4BkR,GAC/B53B,EAAOvB,SAAWo5B,GAClB73B,EAAOzB,QAAUu5B,KACtBr8B,EAAMirB,wBAA0BkR,EAChC53B,EAAOvB,OAASo5B,EAChB73B,EAAOzB,MAAQu5B,EACfr8B,EAAM+nB,IAAIuU,aAAaH,EAAY,EAAG,EAAGA,EAAY,EAAG,IACjD,GAIX,MAAMI,GAAgC,WACpC,IAAIC,GAAmB,EACvB,IACE,MAAM76B,EAAU,CACd,cAEE,OADA66B,GAAmB,GACZ,IAGXrrB,OAAOsrB,iBAAiB,OAAQ,KAAM96B,GACtCwP,OAAOurB,oBAAoB,OAAQ,KAAM/6B,GACzC,MAAO8I,IAET,OAAO+xB,EAb4B,GAerC,SAASG,GAAalD,EAAS3sB,GAC7B,MAAM/O,EAAQ27B,GAASD,EAAS3sB,GAC1BqjB,EAAUpyB,GAASA,EAAMqyB,MAAM,qBACrC,OAAOD,GAAWA,EAAQ,QAAKvwB,EAGjC,SAASg9B,GAAatjB,EAAIC,EAAIvF,EAAGoU,GAC/B,MAAO,CACLpf,EAAGsQ,EAAGtQ,EAAIgL,GAAKuF,EAAGvQ,EAAIsQ,EAAGtQ,GACzBE,EAAGoQ,EAAGpQ,EAAI8K,GAAKuF,EAAGrQ,EAAIoQ,EAAGpQ,IAG7B,SAAS2zB,GAAsBvjB,EAAIC,EAAIvF,EAAGoU,GACxC,MAAO,CACLpf,EAAGsQ,EAAGtQ,EAAIgL,GAAKuF,EAAGvQ,EAAIsQ,EAAGtQ,GACzBE,EAAY,WAATkf,EAAoBpU,EAAI,GAAMsF,EAAGpQ,EAAIqQ,EAAGrQ,EAChC,UAATkf,EAAmBpU,EAAI,EAAIsF,EAAGpQ,EAAIqQ,EAAGrQ,EACrC8K,EAAI,EAAIuF,EAAGrQ,EAAIoQ,EAAGpQ,GAGxB,SAAS4zB,GAAqBxjB,EAAIC,EAAIvF,EAAGoU,GACvC,MAAM2U,EAAM,CAAC/zB,EAAGsQ,EAAGsU,KAAM1kB,EAAGoQ,EAAGwU,MACzBkP,EAAM,CAACh0B,EAAGuQ,EAAGoU,KAAMzkB,EAAGqQ,EAAGsU,MACzB1jB,EAAIyyB,GAAatjB,EAAIyjB,EAAK/oB,GAC1B5J,EAAIwyB,GAAaG,EAAKC,EAAKhpB,GAC3B2D,EAAIilB,GAAaI,EAAKzjB,EAAIvF,GAC1BiC,EAAI2mB,GAAazyB,EAAGC,EAAG4J,GACvBvJ,EAAImyB,GAAaxyB,EAAGuN,EAAG3D,GAC7B,OAAO4oB,GAAa3mB,EAAGxL,EAAGuJ,GAG5B,MAAMipB,GAAY,IAAIC,IACtB,SAASC,GAAgBC,EAAQz7B,GAC/BA,EAAUA,GAAW,GACrB,MAAM07B,EAAWD,EAASE,KAAKC,UAAU57B,GACzC,IAAI67B,EAAYP,GAAUQ,IAAIJ,GAK9B,OAJKG,IACHA,EAAY,IAAIE,KAAKC,aAAaP,EAAQz7B,GAC1Cs7B,GAAUnsB,IAAIusB,EAAUG,IAEnBA,EAET,SAASI,GAAaC,EAAKT,EAAQz7B,GACjC,OAAOw7B,GAAgBC,EAAQz7B,GAASm8B,OAAOD,GAGjD,MAAME,GAAwB,SAASC,EAAOl7B,GAC5C,MAAO,CACL,EAAEkG,GACA,OAAOg1B,EAAQA,EAAQl7B,EAAQkG,GAEjC,SAAS2P,GACP7V,EAAQ6V,GAEV,UAAU3G,GACR,MAAc,WAAVA,EACKA,EAEQ,UAAVA,EAAoB,OAAS,SAEtC,MAAMhJ,EAAGjL,GACP,OAAOiL,EAAIjL,GAEb,WAAWiL,EAAGi1B,GACZ,OAAOj1B,EAAIi1B,KAIXC,GAAwB,WAC5B,MAAO,CACL,EAAEl1B,GACA,OAAOA,GAET,SAAS2P,KAET,UAAU3G,GACR,OAAOA,GAET,MAAMhJ,EAAGjL,GACP,OAAOiL,EAAIjL,GAEb,WAAWiL,EAAGm1B,GACZ,OAAOn1B,KAIb,SAASo1B,GAAc/rB,EAAK2rB,EAAOl7B,GACjC,OAAOuP,EAAM0rB,GAAsBC,EAAOl7B,GAASo7B,KAErD,SAASG,GAAsBtW,EAAKuW,GAClC,IAAIp5B,EAAOq5B,EACO,QAAdD,GAAqC,QAAdA,IACzBp5B,EAAQ6iB,EAAIxjB,OAAOW,MACnBq5B,EAAW,CACTr5B,EAAM00B,iBAAiB,aACvB10B,EAAMs5B,oBAAoB,cAE5Bt5B,EAAMu5B,YAAY,YAAaH,EAAW,aAC1CvW,EAAI2W,kBAAoBH,GAG5B,SAASI,GAAqB5W,EAAKwW,QAChB3+B,IAAb2+B,WACKxW,EAAI2W,kBACX3W,EAAIxjB,OAAOW,MAAMu5B,YAAY,YAAaF,EAAS,GAAIA,EAAS,KAIpE,SAASK,GAAW9xB,GAClB,MAAiB,UAAbA,EACK,CACL+xB,QAASxwB,GACTywB,QAAS3wB,EACT4wB,UAAW3wB,GAGR,CACLywB,QAAS7vB,GACT8vB,QAAS,CAAC30B,EAAGC,IAAMD,EAAIC,EACvB20B,UAAW/1B,GAAKA,GAGpB,SAASg2B,IAAiB,MAAC1wB,EAAK,IAAEC,EAAG,MAAEqE,EAAK,KAAE4lB,EAAI,MAAEtzB,IAClD,MAAO,CACLoJ,MAAOA,EAAQsE,EACfrE,IAAKA,EAAMqE,EACX4lB,KAAMA,IAASjqB,EAAMD,EAAQ,GAAKsE,IAAU,EAC5C1N,SAGJ,SAAS+5B,GAAWC,EAASzsB,EAAQ0sB,GACnC,MAAM,SAACryB,EAAUwB,MAAO8wB,EAAY7wB,IAAK8wB,GAAYF,GAC/C,QAACN,EAAO,UAAEE,GAAaH,GAAW9xB,GAClC8F,EAAQH,EAAOzQ,OACrB,IACImF,EAAGK,GADH,MAAC8G,EAAK,IAAEC,EAAG,KAAEiqB,GAAQ0G,EAEzB,GAAI1G,EAAM,CAGR,IAFAlqB,GAASsE,EACTrE,GAAOqE,EACFzL,EAAI,EAAGK,EAAOoL,EAAOzL,EAAIK,IAAQL,EAAG,CACvC,IAAK03B,EAAQE,EAAUtsB,EAAOnE,EAAQsE,GAAO9F,IAAYsyB,EAAYC,GACnE,MAEF/wB,IACAC,IAEFD,GAASsE,EACTrE,GAAOqE,EAKT,OAHIrE,EAAMD,IACRC,GAAOqE,GAEF,CAACtE,QAAOC,MAAKiqB,OAAMtzB,MAAOg6B,EAAQh6B,OAE3C,SAASo6B,GAAcJ,EAASzsB,EAAQ0sB,GACtC,IAAKA,EACH,MAAO,CAACD,GAEV,MAAM,SAACpyB,EAAUwB,MAAO8wB,EAAY7wB,IAAK8wB,GAAYF,EAC/CvsB,EAAQH,EAAOzQ,QACf,QAAC88B,EAAO,QAAED,EAAO,UAAEE,GAAaH,GAAW9xB,IAC3C,MAACwB,EAAK,IAAEC,EAAG,KAAEiqB,EAAI,MAAEtzB,GAAS+5B,GAAWC,EAASzsB,EAAQ0sB,GACxDlzB,EAAS,GACf,IAEIlO,EAAO8uB,EAAO0S,EAFdC,GAAS,EACTC,EAAW,KAEf,MAAMC,EAAgB,IAAMb,EAAQO,EAAYG,EAAWxhC,IAA6C,IAAnC+gC,EAAQM,EAAYG,GACnFI,EAAc,IAAmC,IAA7Bb,EAAQO,EAAUthC,IAAgB8gC,EAAQQ,EAAUE,EAAWxhC,GACnF6hC,EAAc,IAAMJ,GAAUE,IAC9BG,EAAa,KAAOL,GAAUG,IACpC,IAAK,IAAIx4B,EAAImH,EAAOsqB,EAAOtqB,EAAOnH,GAAKoH,IAAOpH,EAC5C0lB,EAAQpa,EAAOtL,EAAIyL,GACfia,EAAMqJ,OAGVn4B,EAAQghC,EAAUlS,EAAM/f,IACpB/O,IAAUwhC,IAGdC,EAASX,EAAQ9gC,EAAOqhC,EAAYC,GACnB,OAAbI,GAAqBG,MACvBH,EAA0C,IAA/BX,EAAQ/gC,EAAOqhC,GAAoBj4B,EAAIyxB,GAEnC,OAAb6G,GAAqBI,MACvB5zB,EAAO5K,KAAK29B,GAAiB,CAAC1wB,MAAOmxB,EAAUlxB,IAAKpH,EAAGqxB,OAAM5lB,QAAO1N,WACpEu6B,EAAW,MAEb7G,EAAOzxB,EACPo4B,EAAYxhC,IAKd,OAHiB,OAAb0hC,GACFxzB,EAAO5K,KAAK29B,GAAiB,CAAC1wB,MAAOmxB,EAAUlxB,MAAKiqB,OAAM5lB,QAAO1N,WAE5D+G,EAET,SAAS6zB,GAAezR,EAAM8Q,GAC5B,MAAMlzB,EAAS,GACT8zB,EAAW1R,EAAK0R,SACtB,IAAK,IAAI54B,EAAI,EAAGA,EAAI44B,EAAS/9B,OAAQmF,IAAK,CACxC,MAAM64B,EAAMV,GAAcS,EAAS54B,GAAIknB,EAAK5b,OAAQ0sB,GAChDa,EAAIh+B,QACNiK,EAAO5K,QAAQ2+B,GAGnB,OAAO/zB,EAET,SAASg0B,GAAgBxtB,EAAQG,EAAO4lB,EAAME,GAC5C,IAAIpqB,EAAQ,EACRC,EAAMqE,EAAQ,EAClB,GAAI4lB,IAASE,EACX,MAAOpqB,EAAQsE,IAAUH,EAAOnE,GAAO4nB,KACrC5nB,IAGJ,MAAOA,EAAQsE,GAASH,EAAOnE,GAAO4nB,KACpC5nB,IAEFA,GAASsE,EACL4lB,IACFjqB,GAAOD,GAET,MAAOC,EAAMD,GAASmE,EAAOlE,EAAMqE,GAAOsjB,KACxC3nB,IAGF,OADAA,GAAOqE,EACA,CAACtE,QAAOC,OAEjB,SAAS2xB,GAAcztB,EAAQnE,EAAOtB,EAAKwrB,GACzC,MAAM5lB,EAAQH,EAAOzQ,OACfiK,EAAS,GACf,IAEIsC,EAFAiB,EAAOlB,EACPsqB,EAAOnmB,EAAOnE,GAElB,IAAKC,EAAMD,EAAQ,EAAGC,GAAOvB,IAAOuB,EAAK,CACvC,MAAM4xB,EAAM1tB,EAAOlE,EAAMqE,GACrButB,EAAIjK,MAAQiK,EAAIC,KACbxH,EAAK1C,OACRsC,GAAO,EACPvsB,EAAO5K,KAAK,CAACiN,MAAOA,EAAQsE,EAAOrE,KAAMA,EAAM,GAAKqE,EAAO4lB,SAC3DlqB,EAAQkB,EAAO2wB,EAAIC,KAAO7xB,EAAM,OAGlCiB,EAAOjB,EACHqqB,EAAK1C,OACP5nB,EAAQC,IAGZqqB,EAAOuH,EAKT,OAHa,OAAT3wB,GACFvD,EAAO5K,KAAK,CAACiN,MAAOA,EAAQsE,EAAOrE,IAAKiB,EAAOoD,EAAO4lB,SAEjDvsB,EAET,SAASo0B,GAAiBhS,EAAMiS,GAC9B,MAAM7tB,EAAS4b,EAAK5b,OACdimB,EAAWrK,EAAK1sB,QAAQ+2B,SACxB9lB,EAAQH,EAAOzQ,OACrB,IAAK4Q,EACH,MAAO,GAET,MAAM4lB,IAASnK,EAAKkS,OACd,MAACjyB,EAAK,IAAEC,GAAO0xB,GAAgBxtB,EAAQG,EAAO4lB,EAAME,GAC1D,IAAiB,IAAbA,EACF,OAAO8H,GAAcnS,EAAM,CAAC,CAAC/f,QAAOC,MAAKiqB,SAAQ/lB,EAAQ6tB,GAE3D,MAAMtzB,EAAMuB,EAAMD,EAAQC,EAAMqE,EAAQrE,EAClCkyB,IAAiBpS,EAAKqS,WAAuB,IAAVpyB,GAAeC,IAAQqE,EAAQ,EACxE,OAAO4tB,GAAcnS,EAAM6R,GAAcztB,EAAQnE,EAAOtB,EAAKyzB,GAAehuB,EAAQ6tB,GAEtF,SAASE,GAAcnS,EAAM0R,EAAUttB,EAAQ6tB,GAC7C,OAAKA,GAAmBA,EAAe1M,YAAenhB,EAG/CkuB,GAAgBtS,EAAM0R,EAAUttB,EAAQ6tB,GAFtCP,EAIX,SAASY,GAAgBtS,EAAM0R,EAAUttB,EAAQ6tB,GAC/C,MAAMM,EAAevS,EAAKhrB,OAAOqB,aAC3Bm8B,EAAYC,GAAUzS,EAAK1sB,UAC1Bo/B,cAAep5B,EAAchG,SAAS,SAAC+2B,IAAarK,EACrDzb,EAAQH,EAAOzQ,OACfiK,EAAS,GACf,IAAI+0B,EAAYH,EACZvyB,EAAQyxB,EAAS,GAAGzxB,MACpBnH,EAAImH,EACR,SAAS2yB,EAASxyB,EAAGhE,EAAG2L,EAAG8qB,GACzB,MAAMC,EAAMzI,GAAY,EAAI,EAC5B,GAAIjqB,IAAMhE,EAAV,CAGAgE,GAAKmE,EACL,MAAOH,EAAOhE,EAAImE,GAAOsjB,KACvBznB,GAAK0yB,EAEP,MAAO1uB,EAAOhI,EAAImI,GAAOsjB,KACvBzrB,GAAK02B,EAEH1yB,EAAImE,IAAUnI,EAAImI,IACpB3G,EAAO5K,KAAK,CAACiN,MAAOG,EAAImE,EAAOrE,IAAK9D,EAAImI,EAAO4lB,KAAMpiB,EAAGlR,MAAOg8B,IAC/DF,EAAYE,EACZ5yB,EAAQ7D,EAAImI,IAGhB,IAAK,MAAMssB,KAAWa,EAAU,CAC9BzxB,EAAQoqB,EAAWpqB,EAAQ4wB,EAAQ5wB,MACnC,IACIpJ,EADA0zB,EAAOnmB,EAAOnE,EAAQsE,GAE1B,IAAKzL,EAAImH,EAAQ,EAAGnH,GAAK+3B,EAAQ3wB,IAAKpH,IAAK,CACzC,MAAM+wB,EAAKzlB,EAAOtL,EAAIyL,GACtB1N,EAAQ47B,GAAUR,EAAe1M,WAAWjC,GAAciP,EAAc,CACtEl+B,KAAM,UACN0+B,GAAIxI,EACJtf,GAAI4e,EACJmJ,aAAcl6B,EAAI,GAAKyL,EACvB0uB,YAAan6B,EAAIyL,EACjBjL,mBAEE45B,GAAar8B,EAAO87B,IACtBC,EAAS3yB,EAAOnH,EAAI,EAAG+3B,EAAQ1G,KAAMwI,GAEvCpI,EAAOV,EACP8I,EAAY97B,EAEVoJ,EAAQnH,EAAI,GACd85B,EAAS3yB,EAAOnH,EAAI,EAAG+3B,EAAQ1G,KAAMwI,GAGzC,OAAO/0B,EAET,SAAS60B,GAAUn/B,GACjB,MAAO,CACLwlB,gBAAiBxlB,EAAQwlB,gBACzBqa,eAAgB7/B,EAAQ6/B,eACxBC,WAAY9/B,EAAQ8/B,WACpBC,iBAAkB//B,EAAQ+/B,iBAC1BC,gBAAiBhgC,EAAQggC,gBACzBjV,YAAa/qB,EAAQ+qB,YACrBtF,YAAazlB,EAAQylB,aAGzB,SAASma,GAAar8B,EAAO87B,GAC3B,OAAOA,GAAa1D,KAAKC,UAAUr4B,KAAWo4B,KAAKC,UAAUyD;;;;;;GC9iF/D,MAAM,GACJ,cACEzjC,KAAKqkC,SAAW,KAChBrkC,KAAKskC,QAAU,IAAI3E,IACnB3/B,KAAKukC,UAAW,EAChBvkC,KAAKwkC,eAAYniC,EAEnB,QAAQI,EAAOgiC,EAAOC,EAAMv/B,GAC1B,MAAMw/B,EAAYF,EAAMhyB,UAAUtN,GAC5By/B,EAAWH,EAAMI,SACvBF,EAAU9xB,QAAQxJ,GAAMA,EAAG,CACzB5G,QACAqiC,QAASL,EAAMK,QACfF,WACAG,YAAa33B,KAAKoC,IAAIk1B,EAAOD,EAAM1zB,MAAO6zB,MAG9C,WACM5kC,KAAKqkC,WAGTrkC,KAAKukC,UAAW,EAChBvkC,KAAKqkC,SAAW1wB,GAAiBpL,KAAKqL,OAAQ,KAC5C5T,KAAKglC,UACLhlC,KAAKqkC,SAAW,KACZrkC,KAAKukC,UACPvkC,KAAKilC,cAIX,QAAQP,EAAOQ,KAAKC,OAClB,IAAIC,EAAY,EAChBplC,KAAKskC,QAAQzxB,QAAQ,CAAC4xB,EAAOhiC,KAC3B,IAAKgiC,EAAMY,UAAYZ,EAAMnxB,MAAM7O,OACjC,OAEF,MAAM6O,EAAQmxB,EAAMnxB,MACpB,IAEIvG,EAFAnD,EAAI0J,EAAM7O,OAAS,EACnB6gC,GAAO,EAEX,KAAO17B,GAAK,IAAKA,EACfmD,EAAOuG,EAAM1J,GACTmD,EAAKw4B,SACHx4B,EAAKy4B,OAASf,EAAMI,WACtBJ,EAAMI,SAAW93B,EAAKy4B,QAExBz4B,EAAK04B,KAAKf,GACVY,GAAO,IAEPhyB,EAAM1J,GAAK0J,EAAMA,EAAM7O,OAAS,GAChC6O,EAAMzE,OAGNy2B,IACF7iC,EAAM6iC,OACNtlC,KAAK0lC,QAAQjjC,EAAOgiC,EAAOC,EAAM,aAE9BpxB,EAAM7O,SACTggC,EAAMY,SAAU,EAChBrlC,KAAK0lC,QAAQjjC,EAAOgiC,EAAOC,EAAM,YACjCD,EAAMK,SAAU,GAElBM,GAAa9xB,EAAM7O,SAErBzE,KAAKwkC,UAAYE,EACC,IAAdU,IACFplC,KAAKukC,UAAW,GAGpB,UAAU9hC,GACR,MAAMkjC,EAAS3lC,KAAKskC,QACpB,IAAIG,EAAQkB,EAAOzF,IAAIz9B,GAavB,OAZKgiC,IACHA,EAAQ,CACNY,SAAS,EACTP,SAAS,EACTxxB,MAAO,GACPb,UAAW,CACTmzB,SAAU,GACVC,SAAU,KAGdF,EAAOpyB,IAAI9Q,EAAOgiC,IAEbA,EAET,OAAOhiC,EAAOqjC,EAAOC,GACnB/lC,KAAKgmC,UAAUvjC,GAAOgQ,UAAUqzB,GAAOhiC,KAAKiiC,GAE9C,IAAItjC,EAAO6Q,GACJA,GAAUA,EAAM7O,QAGrBzE,KAAKgmC,UAAUvjC,GAAO6Q,MAAMxP,QAAQwP,GAEtC,IAAI7Q,GACF,OAAOzC,KAAKgmC,UAAUvjC,GAAO6Q,MAAM7O,OAAS,EAE9C,MAAMhC,GACJ,MAAMgiC,EAAQzkC,KAAKskC,QAAQpE,IAAIz9B,GAC1BgiC,IAGLA,EAAMY,SAAU,EAChBZ,EAAM1zB,MAAQm0B,KAAKC,MACnBV,EAAMI,SAAWJ,EAAMnxB,MAAM2yB,OAAO,CAACC,EAAKtD,IAAQx1B,KAAKqC,IAAIy2B,EAAKtD,EAAIuD,WAAY,GAChFnmC,KAAKilC,YAEP,QAAQxiC,GACN,IAAKzC,KAAKukC,SACR,OAAO,EAET,MAAME,EAAQzkC,KAAKskC,QAAQpE,IAAIz9B,GAC/B,SAAKgiC,GAAUA,EAAMY,SAAYZ,EAAMnxB,MAAM7O,QAK/C,KAAKhC,GACH,MAAMgiC,EAAQzkC,KAAKskC,QAAQpE,IAAIz9B,GAC/B,IAAKgiC,IAAUA,EAAMnxB,MAAM7O,OACzB,OAEF,MAAM6O,EAAQmxB,EAAMnxB,MACpB,IAAI1J,EAAI0J,EAAM7O,OAAS,EACvB,KAAOmF,GAAK,IAAKA,EACf0J,EAAM1J,GAAGw8B,SAEX3B,EAAMnxB,MAAQ,GACdtT,KAAK0lC,QAAQjjC,EAAOgiC,EAAOS,KAAKC,MAAO,YAEzC,OAAO1iC,GACL,OAAOzC,KAAKskC,QAAQ/M,OAAO90B,IAG/B,IAAI4jC,GAAW,IAAI,GAEnB,MAAM/e,GAAc,cACdgf,GAAgB,CACpB,QAAQ5yB,EAAM6yB,EAAIC,GAChB,OAAOA,EAAS,GAAMD,EAAK7yB,GAE7B,MAAMA,EAAM6yB,EAAIC,GACd,MAAMC,EAAK,GAAM/yB,GAAQ4T,IACnBoB,EAAK+d,EAAGC,OAAS,GAAMH,GAAMjf,IACnC,OAAOoB,GAAMA,EAAGge,MACZhe,EAAGie,IAAIF,EAAID,GAAQzrB,YACnBwrB,GAEN,OAAO7yB,EAAM6yB,EAAIC,GACf,OAAO9yB,GAAQ6yB,EAAK7yB,GAAQ8yB,IAGhC,MAAM,GACJ,YAAYI,EAAKr8B,EAAQ2oB,EAAMqT,GAC7B,MAAMM,EAAet8B,EAAO2oB,GAC5BqT,EAAK7S,GAAQ,CAACkT,EAAIL,GAAIA,EAAIM,EAAcD,EAAIlzB,OAC5C,MAAMA,EAAOggB,GAAQ,CAACkT,EAAIlzB,KAAMmzB,EAAcN,IAC9CvmC,KAAKulC,SAAU,EACfvlC,KAAK8mC,IAAMF,EAAIv9B,IAAMi9B,GAAcM,EAAIzhC,aAAeuO,GACtD1T,KAAK+mC,QAAUlwB,GAAQ+vB,EAAII,SAAWnwB,GAAQC,OAC9C9W,KAAKinC,OAAS75B,KAAKkB,MAAM42B,KAAKC,OAASyB,EAAIxyB,OAAS,IACpDpU,KAAKmmC,UAAYnmC,KAAKwlC,OAASp4B,KAAKkB,MAAMs4B,EAAI/B,UAC9C7kC,KAAKgjC,QAAU4D,EAAI3L,KACnBj7B,KAAKknC,QAAU38B,EACfvK,KAAKmnC,MAAQjU,EACblzB,KAAKonC,MAAQ1zB,EACb1T,KAAKqnC,IAAMd,EACXvmC,KAAKsnC,eAAYjlC,EAEnB,SACE,OAAOrC,KAAKulC,QAEd,OAAOqB,EAAKL,EAAI7B,GACd,GAAI1kC,KAAKulC,QAAS,CAChBvlC,KAAK0lC,SAAQ,GACb,MAAMmB,EAAe7mC,KAAKknC,QAAQlnC,KAAKmnC,OACjCI,EAAU7C,EAAO1kC,KAAKinC,OACtBO,EAASxnC,KAAKmmC,UAAYoB,EAChCvnC,KAAKinC,OAASvC,EACd1kC,KAAKmmC,UAAY/4B,KAAKkB,MAAMlB,KAAKqC,IAAI+3B,EAAQZ,EAAI/B,WACjD7kC,KAAKwlC,QAAU+B,EACfvnC,KAAKgjC,QAAU4D,EAAI3L,KACnBj7B,KAAKqnC,IAAM3T,GAAQ,CAACkT,EAAIL,GAAIA,EAAIM,EAAcD,EAAIlzB,OAClD1T,KAAKonC,MAAQ1T,GAAQ,CAACkT,EAAIlzB,KAAMmzB,EAAcN,KAGlD,SACMvmC,KAAKulC,UACPvlC,KAAKylC,KAAKP,KAAKC,OACfnlC,KAAKulC,SAAU,EACfvlC,KAAK0lC,SAAQ,IAGjB,KAAKhB,GACH,MAAM6C,EAAU7C,EAAO1kC,KAAKinC,OACtBpC,EAAW7kC,KAAKmmC,UAChBjT,EAAOlzB,KAAKmnC,MACZzzB,EAAO1T,KAAKonC,MACZnM,EAAOj7B,KAAKgjC,MACZuD,EAAKvmC,KAAKqnC,IAChB,IAAIb,EAEJ,GADAxmC,KAAKulC,QAAU7xB,IAAS6yB,IAAOtL,GAASsM,EAAU1C,IAC7C7kC,KAAKulC,QAGR,OAFAvlC,KAAKknC,QAAQhU,GAAQqT,OACrBvmC,KAAK0lC,SAAQ,GAGX6B,EAAU,EACZvnC,KAAKknC,QAAQhU,GAAQxf,GAGvB8yB,EAAUe,EAAU1C,EAAY,EAChC2B,EAASvL,GAAQuL,EAAS,EAAI,EAAIA,EAASA,EAC3CA,EAASxmC,KAAK+mC,QAAQ35B,KAAKoC,IAAI,EAAGpC,KAAKqC,IAAI,EAAG+2B,KAC9CxmC,KAAKknC,QAAQhU,GAAQlzB,KAAK8mC,IAAIpzB,EAAM6yB,EAAIC,IAE1C,OACE,MAAMiB,EAAWznC,KAAKsnC,YAActnC,KAAKsnC,UAAY,IACrD,OAAO,IAAII,QAAQ,CAAC10B,EAAK20B,KACvBF,EAAS3jC,KAAK,CAACkP,MAAK20B,UAGxB,QAAQC,GACN,MAAM90B,EAAS80B,EAAW,MAAQ,MAC5BH,EAAWznC,KAAKsnC,WAAa,GACnC,IAAK,IAAI19B,EAAI,EAAGA,EAAI69B,EAAShjC,OAAQmF,IACnC69B,EAAS79B,GAAGkJ,MAKlB,MAAM+0B,GAAU,CAAC,IAAK,IAAK,cAAe,SAAU,WAC9CC,GAAS,CAAC,QAAS,cAAe,mBACxC5b,GAAS3Y,IAAI,YAAa,CACxBa,WAAO/R,EACPwiC,SAAU,IACVmC,OAAQ,eACR39B,QAAIhH,EACJqR,UAAMrR,EACN44B,UAAM54B,EACNkkC,QAAIlkC,EACJ8C,UAAM9C,IAER,MAAM,GAAmB0B,OAAOsD,KAAK6kB,GAASvC,WAC9CuC,GAAST,SAAS,YAAa,CAC7Ba,WAAW,EACXD,YAAY,EACZF,YAAc7rB,GAAkB,eAATA,GAAkC,eAATA,GAAkC,OAATA,IAE3E4rB,GAAS3Y,IAAI,aAAc,CACzBu0B,OAAQ,CACN3iC,KAAM,QACN4iC,WAAYD,IAEdD,QAAS,CACP1iC,KAAM,SACN4iC,WAAYF,MAGhB3b,GAAST,SAAS,aAAc,CAC9Ba,UAAW,cAEbJ,GAAS3Y,IAAI,cAAe,CAC1By0B,OAAQ,CACNre,UAAW,CACTkb,SAAU,MAGdoD,OAAQ,CACNte,UAAW,CACTkb,SAAU,IAGdqD,KAAM,CACJC,WAAY,CACVL,OAAQ,CACNp0B,KAAM,eAER00B,QAAS,CACPjjC,KAAM,UACN0/B,SAAU,KAIhBwD,KAAM,CACJF,WAAY,CACVL,OAAQ,CACNvB,GAAI,eAEN6B,QAAS,CACPjjC,KAAM,UACN6hC,OAAQ,SACR39B,GAAImC,GAAS,EAAJA,OAKjB,MAAM,GACJ,YAAY/I,EAAO6lC,GACjBtoC,KAAK8F,OAASrD,EACdzC,KAAKuoC,YAAc,IAAI5I,IACvB3/B,KAAKwoC,UAAUF,GAEjB,UAAUA,GACR,IAAK7/B,EAAS6/B,GACZ,OAEF,MAAMG,EAAgBzoC,KAAKuoC,YAC3BxkC,OAAO2kC,oBAAoBJ,GAAQz1B,QAAQjI,IACzC,MAAMg8B,EAAM0B,EAAO19B,GACnB,IAAKnC,EAASm+B,GACZ,OAEF,MAAMgB,EAAW,GACjB,IAAK,MAAMe,KAAU,GACnBf,EAASe,GAAU/B,EAAI+B,IAExBvgC,EAAQw+B,EAAImB,aAAenB,EAAImB,YAAc,CAACn9B,IAAMiI,QAASqgB,IACxDA,IAAStoB,GAAQ69B,EAAcz7B,IAAIkmB,IACrCuV,EAAcl1B,IAAI2f,EAAM0U,OAKhC,gBAAgBr9B,EAAQ6H,GACtB,MAAMw2B,EAAax2B,EAAOhO,QACpBA,EAAUykC,GAAqBt+B,EAAQq+B,GAC7C,IAAKxkC,EACH,MAAO,GAET,MAAM+jC,EAAanoC,KAAK8oC,kBAAkB1kC,EAASwkC,GAOnD,OANIA,EAAWG,SACbC,GAASz+B,EAAOnG,QAAQ6kC,YAAaL,GAAYM,KAAK,KACpD3+B,EAAOnG,QAAUwkC,GAChB,QAGET,EAET,kBAAkB59B,EAAQ6H,GACxB,MAAMq2B,EAAgBzoC,KAAKuoC,YACrBJ,EAAa,GACb9C,EAAU96B,EAAO0+B,cAAgB1+B,EAAO0+B,YAAc,IACtD3nC,EAAQyC,OAAOsD,KAAK+K,GACpBsyB,EAAOQ,KAAKC,MAClB,IAAIv7B,EACJ,IAAKA,EAAItI,EAAMmD,OAAS,EAAGmF,GAAK,IAAKA,EAAG,CACtC,MAAMspB,EAAO5xB,EAAMsI,GACnB,GAAuB,MAAnBspB,EAAK3mB,OAAO,GACd,SAEF,GAAa,YAAT2mB,EAAoB,CACtBiV,EAAWrkC,QAAQ9D,KAAKmpC,gBAAgB5+B,EAAQ6H,IAChD,SAEF,MAAM5R,EAAQ4R,EAAO8gB,GACrB,IAAIvJ,EAAY0b,EAAQnS,GACxB,MAAM0T,EAAM6B,EAAcvI,IAAIhN,GAC9B,GAAIvJ,EAAW,CACb,GAAIid,GAAOjd,EAAUqe,SAAU,CAC7Bre,EAAUjnB,OAAOkkC,EAAKpmC,EAAOkkC,GAC7B,SAEA/a,EAAUyc,SAGTQ,GAAQA,EAAI/B,UAIjBQ,EAAQnS,GAAQvJ,EAAY,IAAI,GAAUid,EAAKr8B,EAAQ2oB,EAAM1yB,GAC7D2nC,EAAWrkC,KAAK6lB,IAJdpf,EAAO2oB,GAAQ1yB,EAMnB,OAAO2nC,EAET,OAAO59B,EAAQ6H,GACb,GAA8B,IAA1BpS,KAAKuoC,YAAYz7B,KAEnB,YADA/I,OAAOC,OAAOuG,EAAQ6H,GAGxB,MAAM+1B,EAAanoC,KAAK8oC,kBAAkBv+B,EAAQ6H,GAClD,OAAI+1B,EAAW1jC,QACb4hC,GAAS5yB,IAAIzT,KAAK8F,OAAQqiC,IACnB,QAFT,GAMJ,SAASa,GAASb,EAAYJ,GAC5B,MAAM1C,EAAU,GACVh+B,EAAOtD,OAAOsD,KAAK0gC,GACzB,IAAK,IAAIn+B,EAAI,EAAGA,EAAIvC,EAAK5C,OAAQmF,IAAK,CACpC,MAAMw/B,EAAOjB,EAAW9gC,EAAKuC,IACzBw/B,GAAQA,EAAKpB,UACf3C,EAAQvhC,KAAKslC,EAAKC,QAGtB,OAAO3B,QAAQ4B,IAAIjE,GAErB,SAASwD,GAAqBt+B,EAAQq+B,GACpC,IAAKA,EACH,OAEF,IAAIxkC,EAAUmG,EAAOnG,QACrB,GAAKA,EAOL,OAHIA,EAAQ2kC,UACVx+B,EAAOnG,QAAUA,EAAUL,OAAOC,OAAO,GAAII,EAAS,CAAC2kC,SAAS,EAAOE,YAAa,MAE/E7kC,EANLmG,EAAOnG,QAAUwkC,EASrB,SAASW,GAAUle,EAAOme,GACxB,MAAM9Y,EAAOrF,GAASA,EAAMjnB,SAAW,GACjCuF,EAAU+mB,EAAK/mB,QACf6F,OAAmBnN,IAAbquB,EAAKlhB,IAAoBg6B,EAAkB,EACjD/5B,OAAmBpN,IAAbquB,EAAKjhB,IAAoB+5B,EAAkB,EACvD,MAAO,CACLz4B,MAAOpH,EAAU8F,EAAMD,EACvBwB,IAAKrH,EAAU6F,EAAMC,GAGzB,SAASg6B,GAAY1zB,EAAQC,EAAQwzB,GACnC,IAAwB,IAApBA,EACF,OAAO,EAET,MAAM/9B,EAAI89B,GAAUxzB,EAAQyzB,GACtB79B,EAAI49B,GAAUvzB,EAAQwzB,GAC5B,MAAO,CACL/Z,IAAK9jB,EAAEqF,IACP6D,MAAOpJ,EAAEuF,IACT0e,OAAQ/jB,EAAEoF,MACV6D,KAAMnJ,EAAEsF,OAGZ,SAAS24B,GAAOlpC,GACd,IAAIiW,EAAGkE,EAAG9N,EAAGgM,EASb,OARIpQ,EAASjI,IACXiW,EAAIjW,EAAMivB,IACV9U,EAAIna,EAAMqU,MACVhI,EAAIrM,EAAMkvB,OACV7W,EAAIrY,EAAMoU,MAEV6B,EAAIkE,EAAI9N,EAAIgM,EAAIrY,EAEX,CACLivB,IAAKhZ,EACL5B,MAAO8F,EACP+U,OAAQ7iB,EACR+H,KAAMiE,EACN8wB,UAAoB,IAAVnpC,GAGd,SAASopC,GAAwBnnC,EAAOonC,GACtC,MAAMxiC,EAAO,GACPyiC,EAAWrnC,EAAMsnC,uBAAuBF,GAC9C,IAAIjgC,EAAGK,EACP,IAAKL,EAAI,EAAGK,EAAO6/B,EAASrlC,OAAQmF,EAAIK,IAAQL,EAC9CvC,EAAKvD,KAAKgmC,EAASlgC,GAAGjF,OAExB,OAAO0C,EAET,SAAS2iC,GAAWC,EAAOzpC,EAAO0pC,EAAS9lC,EAAU,IACnD,MAAMiD,EAAO4iC,EAAM5iC,KACb8iC,EAA8B,WAAjB/lC,EAAQymB,KAC3B,IAAIjhB,EAAGK,EAAMG,EAAcggC,EAC3B,GAAc,OAAV5pC,EAAJ,CAGA,IAAKoJ,EAAI,EAAGK,EAAO5C,EAAK5C,OAAQmF,EAAIK,IAAQL,EAAG,CAE7C,GADAQ,GAAgB/C,EAAKuC,GACjBQ,IAAiB8/B,EAAS,CAC5B,GAAI9lC,EAAQklC,IACV,SAEF,MAEFc,EAAaH,EAAM73B,OAAOhI,GACtB1B,EAAe0hC,KAAgBD,GAAyB,IAAV3pC,GAAesN,EAAKtN,KAAWsN,EAAKs8B,MACpF5pC,GAAS4pC,GAGb,OAAO5pC,GAET,SAAS6pC,GAAyB9oC,GAChC,MAAM8F,EAAOtD,OAAOsD,KAAK9F,GACnB+oC,EAAQ,IAAIzkC,MAAMwB,EAAK5C,QAC7B,IAAImF,EAAGK,EAAMW,EACb,IAAKhB,EAAI,EAAGK,EAAO5C,EAAK5C,OAAQmF,EAAIK,IAAQL,EAC1CgB,EAAMvD,EAAKuC,GACX0gC,EAAM1gC,GAAK,CACT6B,EAAGb,EACHe,EAAGpK,EAAKqJ,IAGZ,OAAO0/B,EAET,SAASC,GAAUlf,EAAOpW,GACxB,MAAMu1B,EAAUnf,GAASA,EAAMjnB,QAAQomC,QACvC,OAAOA,QAAwBnoC,IAAZmoC,QAAwCnoC,IAAf4S,EAAKg1B,MAEnD,SAASQ,GAAYC,EAAYC,EAAY11B,GAC3C,MAAO,GAAGy1B,EAAW7iC,MAAM8iC,EAAW9iC,MAAMoN,EAAKg1B,OAASh1B,EAAK9P,OAEjE,SAASyQ,GAAcyV,GACrB,MAAM,IAAC7b,EAAG,IAAEC,EAAG,WAAEiG,EAAU,WAAEC,GAAc0V,EAAMzV,gBACjD,MAAO,CACLpG,IAAKkG,EAAalG,EAAMhK,OAAOolC,kBAC/Bn7B,IAAKkG,EAAalG,EAAMjK,OAAOgI,mBAGnC,SAASq9B,GAAiBC,EAAQC,EAAUC,GAC1C,MAAMC,EAAWH,EAAOC,KAAcD,EAAOC,GAAY,IACzD,OAAOE,EAASD,KAAgBC,EAASD,GAAc,IAEzD,SAASE,GAAoBjB,EAAOkB,EAAQC,EAAUjmC,GACpD,IAAK,MAAM8P,KAAQk2B,EAAOE,wBAAwBlmC,GAAMwE,UAAW,CACjE,MAAMnJ,EAAQypC,EAAMh1B,EAAKtQ,OACzB,GAAKymC,GAAY5qC,EAAQ,IAAQ4qC,GAAY5qC,EAAQ,EACnD,OAAOyU,EAAKtQ,MAGhB,OAAO,KAET,SAAS2mC,GAAaC,EAAYhT,GAChC,MAAM,MAAC91B,EAAO+oC,YAAav2B,GAAQs2B,EAC7BT,EAASroC,EAAMgpC,UAAYhpC,EAAMgpC,QAAU,KAC3C,OAACl2B,EAAM,OAAE41B,EAAQxmC,MAAOyF,GAAgB6K,EACxCy2B,EAAQn2B,EAAOE,KACfk2B,EAAQR,EAAO11B,KACf7K,EAAM6/B,GAAYl1B,EAAQ41B,EAAQl2B,GAClChL,EAAOsuB,EAAO9zB,OACpB,IAAIwlC,EACJ,IAAK,IAAIrgC,EAAI,EAAGA,EAAIK,IAAQL,EAAG,CAC7B,MAAMmD,EAAOwrB,EAAO3uB,IACb,CAAC8hC,GAAQ/mC,EAAO,CAACgnC,GAAQnrC,GAASuM,EACnC6+B,EAAa7+B,EAAK0+B,UAAY1+B,EAAK0+B,QAAU,IACnDxB,EAAQ2B,EAAWD,GAASd,GAAiBC,EAAQlgC,EAAKjG,GAC1DslC,EAAM7/B,GAAgB5J,EACtBypC,EAAM4B,KAAOX,GAAoBjB,EAAOkB,GAAQ,EAAMl2B,EAAK9P,MAC3D8kC,EAAM6B,QAAUZ,GAAoBjB,EAAOkB,GAAQ,EAAOl2B,EAAK9P,OAGnE,SAAS4mC,GAAgBtpC,EAAOgT,GAC9B,MAAM6V,EAAS7oB,EAAM6oB,OACrB,OAAOvnB,OAAOsD,KAAKikB,GAAQoM,OAAO9sB,GAAO0gB,EAAO1gB,GAAK6K,OAASA,GAAMu2B,QAEtE,SAASC,GAAqBpU,EAAQlzB,GACpC,OAAOyvB,GAAcyD,EACnB,CACEmQ,QAAQ,EACRpkC,aAASvB,EACT+H,aAAczF,EACdA,QACAkmB,KAAM,UACN1lB,KAAM,YAIZ,SAAS+mC,GAAkBrU,EAAQlzB,EAAOu3B,GACxC,OAAO9H,GAAcyD,EAAQ,CAC3BmQ,QAAQ,EACRmE,UAAWxnC,EACX4zB,YAAQl2B,EACR+pC,SAAK/pC,EACL65B,UACAv3B,QACAkmB,KAAM,UACN1lB,KAAM,SAGV,SAASknC,GAAYp3B,EAAM3B,GACzB,MAAMlJ,EAAe6K,EAAKs2B,WAAW5mC,MAC/B8Q,EAAOR,EAAKk2B,QAAUl2B,EAAKk2B,OAAO11B,KACxC,GAAKA,EAAL,CAGAnC,EAAQA,GAAS2B,EAAKO,QACtB,IAAK,MAAM+iB,KAAUjlB,EAAO,CAC1B,MAAMw3B,EAASvS,EAAOkT,QACtB,IAAKX,QAA2BzoC,IAAjByoC,EAAOr1B,SAAsDpT,IAA/ByoC,EAAOr1B,GAAMrL,GACxD,cAEK0gC,EAAOr1B,GAAMrL,KAGxB,MAAMkiC,GAAsBzhB,GAAkB,UAATA,GAA6B,SAATA,EACnD0hB,GAAmB,CAACC,EAAQC,IAAWA,EAASD,EAASzoC,OAAOC,OAAO,GAAIwoC,GAC3EE,GAAc,CAACC,EAAU13B,EAAMxS,IAAUkqC,IAAa13B,EAAK23B,QAAU33B,EAAK43B,UAC3E,CAACxlC,KAAMuiC,GAAwBnnC,GAAO,GAAO2P,OAAQ,MAC1D,MAAM,GACJ,YAAY3P,EAAO2H,GACjBpK,KAAKyC,MAAQA,EACbzC,KAAK8sC,KAAOrqC,EAAM+nB,IAClBxqB,KAAK2E,MAAQyF,EACbpK,KAAK+sC,gBAAkB,GACvB/sC,KAAKwrC,YAAcxrC,KAAKgtC,UACxBhtC,KAAKitC,MAAQjtC,KAAKwrC,YAAYrmC,KAC9BnF,KAAKoE,aAAU/B,EACfrC,KAAKs4B,UAAW,EAChBt4B,KAAKktC,WAAQ7qC,EACbrC,KAAKmtC,iBAAc9qC,EACnBrC,KAAKotC,oBAAiB/qC,EACtBrC,KAAKqtC,gBAAahrC,EAClBrC,KAAKstC,gBAAajrC,EAClBrC,KAAKutC,qBAAsB,EAC3BvtC,KAAKwtC,oBAAqB,EAC1BxtC,KAAKytC,cAAWprC,EAChBrC,KAAK0tC,UAAY,GACjB1tC,KAAK2tC,aAEP,aACE,MAAM14B,EAAOjV,KAAKwrC,YAClBxrC,KAAKwoC,YACLxoC,KAAK4tC,aACL34B,EAAK43B,SAAWtC,GAAUt1B,EAAKk2B,OAAQl2B,GACvCjV,KAAK6tC,cAEP,YAAYzjC,GACNpK,KAAK2E,QAAUyF,GACjBiiC,GAAYrsC,KAAKwrC,aAEnBxrC,KAAK2E,MAAQyF,EAEf,aACE,MAAM3H,EAAQzC,KAAKyC,MACbwS,EAAOjV,KAAKwrC,YACZ5nC,EAAU5D,KAAK8tC,aACfC,EAAW,CAACt4B,EAAMhK,EAAGE,EAAGgP,IAAe,MAATlF,EAAehK,EAAa,MAATgK,EAAekF,EAAIhP,EACpEqiC,EAAM/4B,EAAKg5B,QAAUnlC,EAAelF,EAAQqqC,QAASlC,GAAgBtpC,EAAO,MAC5EyrC,EAAMj5B,EAAKk5B,QAAUrlC,EAAelF,EAAQuqC,QAASpC,GAAgBtpC,EAAO,MAC5E2rC,EAAMn5B,EAAKo5B,QAAUvlC,EAAelF,EAAQyqC,QAAStC,GAAgBtpC,EAAO,MAC5EkoB,EAAY1V,EAAK0V,UACjB2jB,EAAMr5B,EAAKs5B,QAAUR,EAASpjB,EAAWqjB,EAAKE,EAAKE,GACnDI,EAAMv5B,EAAKw5B,QAAUV,EAASpjB,EAAWujB,EAAKF,EAAKI,GACzDn5B,EAAKc,OAAS/V,KAAK0uC,cAAcV,GACjC/4B,EAAKe,OAAShW,KAAK0uC,cAAcR,GACjCj5B,EAAK05B,OAAS3uC,KAAK0uC,cAAcN,GACjCn5B,EAAKM,OAASvV,KAAK0uC,cAAcJ,GACjCr5B,EAAKk2B,OAASnrC,KAAK0uC,cAAcF,GAEnC,aACE,OAAOxuC,KAAKyC,MAAMlB,KAAK4B,SAASnD,KAAK2E,OAEvC,UACE,OAAO3E,KAAKyC,MAAMmsC,eAAe5uC,KAAK2E,OAExC,cAAckqC,GACZ,OAAO7uC,KAAKyC,MAAM6oB,OAAOujB,GAE3B,eAAexjB,GACb,MAAMpW,EAAOjV,KAAKwrC,YAClB,OAAOngB,IAAUpW,EAAKM,OAClBN,EAAKk2B,OACLl2B,EAAKM,OAEX,QACEvV,KAAKglC,QAAQ,SAEf,WACE,MAAM/vB,EAAOjV,KAAKwrC,YACdxrC,KAAKktC,OACPh6B,GAAoBlT,KAAKktC,MAAOltC,MAE9BiV,EAAK43B,UACPR,GAAYp3B,GAGhB,aACE,MAAMrR,EAAU5D,KAAK8tC,aACfvsC,EAAOqC,EAAQrC,OAASqC,EAAQrC,KAAO,IACvC2rC,EAAQltC,KAAKktC,MACnB,GAAIzkC,EAASlH,GACXvB,KAAKktC,MAAQ7C,GAAyB9oC,QACjC,GAAI2rC,IAAU3rC,EAAM,CACzB,GAAI2rC,EAAO,CACTh6B,GAAoBg6B,EAAOltC,MAC3B,MAAMiV,EAAOjV,KAAKwrC,YAClBa,GAAYp3B,GACZA,EAAKO,QAAU,GAEbjU,GAAQwC,OAAO+qC,aAAavtC,IAC9B+Q,GAAkB/Q,EAAMvB,MAE1BA,KAAK0tC,UAAY,GACjB1tC,KAAKktC,MAAQ3rC,GAGjB,cACE,MAAM0T,EAAOjV,KAAKwrC,YAClBxrC,KAAK+uC,aACD/uC,KAAKgvC,qBACP/5B,EAAKrR,QAAU,IAAI5D,KAAKgvC,oBAG5B,sBAAsBC,GACpB,MAAMh6B,EAAOjV,KAAKwrC,YACZ5nC,EAAU5D,KAAK8tC,aACrB,IAAIoB,GAAe,EACnBlvC,KAAK+uC,aACL,MAAMI,EAAal6B,EAAK43B,SACxB53B,EAAK43B,SAAWtC,GAAUt1B,EAAKk2B,OAAQl2B,GACnCA,EAAKg1B,QAAUrmC,EAAQqmC,QACzBiF,GAAe,EACf7C,GAAYp3B,GACZA,EAAKg1B,MAAQrmC,EAAQqmC,OAEvBjqC,KAAKovC,gBAAgBH,IACjBC,GAAgBC,IAAel6B,EAAK43B,WACtCvB,GAAatrC,KAAMiV,EAAKO,SAG5B,YACE,MAAM8yB,EAAStoC,KAAKyC,MAAM6lC,OACpB+G,EAAY/G,EAAOgH,iBAAiBtvC,KAAKitC,OACzC1Y,EAAS+T,EAAOiH,gBAAgBvvC,KAAK8tC,aAAcuB,GAAW,GACpErvC,KAAKoE,QAAUkkC,EAAOkH,eAAejb,EAAQv0B,KAAKmH,cAClDnH,KAAKs4B,SAAWt4B,KAAKoE,QAAQ+mB,QAC7BnrB,KAAK+sC,gBAAkB,GAEzB,MAAMh8B,EAAOsE,GACX,MAAOm2B,YAAav2B,EAAMi4B,MAAO3rC,GAAQvB,MACnC,OAACuV,EAAM,SAAEs3B,GAAY53B,EACrBy2B,EAAQn2B,EAAOE,KACrB,IAEI7L,EAAGg5B,EAAKrK,EAFRkX,EAAmB,IAAV1+B,GAAesE,IAAU9T,EAAKkD,QAAgBwQ,EAAKK,QAC5D+lB,EAAOtqB,EAAQ,GAAKkE,EAAKO,QAAQzE,EAAQ,GAE7C,IAAsB,IAAlB/Q,KAAKs4B,SACPrjB,EAAKO,QAAUjU,EACf0T,EAAKK,SAAU,EACfijB,EAASh3B,MACJ,CAEHg3B,EADEnwB,EAAQ7G,EAAKwP,IACN/Q,KAAK0vC,eAAez6B,EAAM1T,EAAMwP,EAAOsE,GACvC5M,EAASlH,EAAKwP,IACd/Q,KAAK2vC,gBAAgB16B,EAAM1T,EAAMwP,EAAOsE,GAExCrV,KAAK4vC,mBAAmB36B,EAAM1T,EAAMwP,EAAOsE,GAEtD,MAAMw6B,EAA6B,IAAqB,OAAfjN,EAAI8I,IAAoBrQ,GAAQuH,EAAI8I,GAASrQ,EAAKqQ,GAC3F,IAAK9hC,EAAI,EAAGA,EAAIyL,IAASzL,EACvBqL,EAAKO,QAAQ5L,EAAImH,GAAS6xB,EAAMrK,EAAO3uB,GACnC6lC,IACEI,MACFJ,GAAS,GAEXpU,EAAOuH,GAGX3tB,EAAKK,QAAUm6B,EAEb5C,GACFvB,GAAatrC,KAAMu4B,GAGvB,mBAAmBtjB,EAAM1T,EAAMwP,EAAOsE,GACpC,MAAM,OAACE,EAAM,OAAE41B,GAAUl2B,EACnBy2B,EAAQn2B,EAAOE,KACfk2B,EAAQR,EAAO11B,KACfvS,EAASqS,EAAOu6B,YAChBC,EAAcx6B,IAAW41B,EACzB5S,EAAS,IAAI1yB,MAAMwP,GACzB,IAAIzL,EAAGK,EAAMtF,EACb,IAAKiF,EAAI,EAAGK,EAAOoL,EAAOzL,EAAIK,IAAQL,EACpCjF,EAAQiF,EAAImH,EACZwnB,EAAO3uB,GAAK,CACV,CAAC8hC,GAAQqE,GAAex6B,EAAOijB,MAAMt1B,EAAOyB,GAAQA,GACpD,CAACgnC,GAAQR,EAAO3S,MAAMj3B,EAAKoD,GAAQA,IAGvC,OAAO4zB,EAET,eAAetjB,EAAM1T,EAAMwP,EAAOsE,GAChC,MAAM,OAACU,EAAM,OAAEC,GAAUf,EACnBsjB,EAAS,IAAI1yB,MAAMwP,GACzB,IAAIzL,EAAGK,EAAMtF,EAAOoI,EACpB,IAAKnD,EAAI,EAAGK,EAAOoL,EAAOzL,EAAIK,IAAQL,EACpCjF,EAAQiF,EAAImH,EACZhE,EAAOxL,EAAKoD,GACZ4zB,EAAO3uB,GAAK,CACV6B,EAAGsK,EAAOyiB,MAAMzrB,EAAK,GAAIpI,GACzBgH,EAAGqK,EAAOwiB,MAAMzrB,EAAK,GAAIpI,IAG7B,OAAO4zB,EAET,gBAAgBtjB,EAAM1T,EAAMwP,EAAOsE,GACjC,MAAM,OAACU,EAAM,OAAEC,GAAUf,GACnB,SAAC+6B,EAAW,IAAG,SAAEC,EAAW,KAAOjwC,KAAKs4B,SACxCC,EAAS,IAAI1yB,MAAMwP,GACzB,IAAIzL,EAAGK,EAAMtF,EAAOoI,EACpB,IAAKnD,EAAI,EAAGK,EAAOoL,EAAOzL,EAAIK,IAAQL,EACpCjF,EAAQiF,EAAImH,EACZhE,EAAOxL,EAAKoD,GACZ4zB,EAAO3uB,GAAK,CACV6B,EAAGsK,EAAOyiB,MAAM5sB,EAAiBmB,EAAMijC,GAAWrrC,GAClDgH,EAAGqK,EAAOwiB,MAAM5sB,EAAiBmB,EAAMkjC,GAAWtrC,IAGtD,OAAO4zB,EAET,UAAU5zB,GACR,OAAO3E,KAAKwrC,YAAYh2B,QAAQ7Q,GAElC,eAAeA,GACb,OAAO3E,KAAKwrC,YAAYjqC,KAAKoD,GAE/B,WAAW0mB,EAAOkN,EAAQ1N,GACxB,MAAMpoB,EAAQzC,KAAKyC,MACbwS,EAAOjV,KAAKwrC,YACZhrC,EAAQ+3B,EAAOlN,EAAM5V,MACrBw0B,EAAQ,CACZ5iC,KAAMuiC,GAAwBnnC,GAAO,GACrC2P,OAAQmmB,EAAOkT,QAAQpgB,EAAM5V,OAE/B,OAAOu0B,GAAWC,EAAOzpC,EAAOyU,EAAKtQ,MAAO,CAACkmB,SAE/C,sBAAsB7c,EAAOqd,EAAOkN,EAAQ0R,GAC1C,MAAMiG,EAAc3X,EAAOlN,EAAM5V,MACjC,IAAIjV,EAAwB,OAAhB0vC,EAAuBC,IAAMD,EACzC,MAAM99B,EAAS63B,GAAS1R,EAAOkT,QAAQpgB,EAAM5V,MACzCw0B,GAAS73B,IACX63B,EAAM73B,OAASA,EACf5R,EAAQwpC,GAAWC,EAAOiG,EAAalwC,KAAKwrC,YAAY7mC,QAE1DqJ,EAAMwB,IAAMpC,KAAKoC,IAAIxB,EAAMwB,IAAKhP,GAChCwN,EAAMyB,IAAMrC,KAAKqC,IAAIzB,EAAMyB,IAAKjP,GAElC,UAAU6qB,EAAOshB,GACf,MAAM13B,EAAOjV,KAAKwrC,YACZh2B,EAAUP,EAAKO,QACfi6B,EAASx6B,EAAKK,SAAW+V,IAAUpW,EAAKM,OACxCtL,EAAOuL,EAAQ/Q,OACf2rC,EAAapwC,KAAKqwC,eAAehlB,GACjC4e,EAAQyC,GAAYC,EAAU13B,EAAMjV,KAAKyC,OACzCuL,EAAQ,CAACwB,IAAKhK,OAAOgI,kBAAmBiC,IAAKjK,OAAOolC,oBACnDp7B,IAAK8gC,EAAU7gC,IAAK8gC,GAAY36B,GAAcw6B,GACrD,IAAIxmC,EAAG2uB,EACP,SAASiY,IACPjY,EAAS/iB,EAAQ5L,GACjB,MAAMwgC,EAAa7R,EAAO6X,EAAW36B,MACrC,OAAQ/M,EAAe6vB,EAAOlN,EAAM5V,QAAU66B,EAAWlG,GAAcmG,EAAWnG,EAEpF,IAAKxgC,EAAI,EAAGA,EAAIK,IAAQL,EACtB,IAAI4mC,MAGJxwC,KAAKywC,sBAAsBziC,EAAOqd,EAAOkN,EAAQ0R,GAC7CwF,GACF,MAGJ,GAAIA,EACF,IAAK7lC,EAAIK,EAAO,EAAGL,GAAK,IAAKA,EAC3B,IAAI4mC,IAAJ,CAGAxwC,KAAKywC,sBAAsBziC,EAAOqd,EAAOkN,EAAQ0R,GACjD,MAGJ,OAAOj8B,EAET,mBAAmBqd,GACjB,MAAMkN,EAASv4B,KAAKwrC,YAAYh2B,QAC1BpD,EAAS,GACf,IAAIxI,EAAGK,EAAMzJ,EACb,IAAKoJ,EAAI,EAAGK,EAAOsuB,EAAO9zB,OAAQmF,EAAIK,IAAQL,EAC5CpJ,EAAQ+3B,EAAO3uB,GAAGyhB,EAAM5V,MACpB/M,EAAelI,IACjB4R,EAAOtO,KAAKtD,GAGhB,OAAO4R,EAET,iBACE,OAAO,EAET,iBAAiBzN,GACf,MAAMsQ,EAAOjV,KAAKwrC,YACZj2B,EAASN,EAAKM,OACd41B,EAASl2B,EAAKk2B,OACd5S,EAASv4B,KAAK0wC,UAAU/rC,GAC9B,MAAO,CACLJ,MAAOgR,EAAS,GAAKA,EAAOo7B,iBAAiBpY,EAAOhjB,EAAOE,OAAS,GACpEjV,MAAO2qC,EAAS,GAAKA,EAAOwF,iBAAiBpY,EAAO4S,EAAO11B,OAAS,IAGxE,QAAQoV,GACN,MAAM5V,EAAOjV,KAAKwrC,YAClBxrC,KAAK0C,OAAOmoB,GAAQ,WACpB5V,EAAK27B,MAAQlH,GAAO5gC,EAAe9I,KAAKoE,QAAQwrB,KAAM6Z,GAAYx0B,EAAKc,OAAQd,EAAKe,OAAQhW,KAAK6wC,oBAEnG,OAAOhmB,IACP,OACE,MAAML,EAAMxqB,KAAK8sC,KACXrqC,EAAQzC,KAAKyC,MACbwS,EAAOjV,KAAKwrC,YACZvhB,EAAWhV,EAAK1T,MAAQ,GACxBguB,EAAO9sB,EAAMquC,UACb9I,EAAS,GACTj3B,EAAQ/Q,KAAKqtC,YAAc,EAC3Bh4B,EAAQrV,KAAKstC,YAAerjB,EAASxlB,OAASsM,EAC9Cya,EAA0BxrB,KAAKoE,QAAQonB,wBAC7C,IAAI5hB,EAIJ,IAHIqL,EAAKrR,SACPqR,EAAKrR,QAAQ0hC,KAAK9a,EAAK+E,EAAMxe,EAAOsE,GAEjCzL,EAAImH,EAAOnH,EAAImH,EAAQsE,IAASzL,EAAG,CACtC,MAAMsyB,EAAUjS,EAASrgB,GACrBsyB,EAAQ0Q,SAGR1Q,EAAQ8L,QAAUxc,EACpBwc,EAAOlkC,KAAKo4B,GAEZA,EAAQoJ,KAAK9a,EAAK+E,IAGtB,IAAK3lB,EAAI,EAAGA,EAAIo+B,EAAOvjC,SAAUmF,EAC/Bo+B,EAAOp+B,GAAG07B,KAAK9a,EAAK+E,GAGxB,SAAS5qB,EAAOqjC,GACd,MAAMnd,EAAOmd,EAAS,SAAW,UACjC,YAAiB3lC,IAAVsC,GAAuB3E,KAAKwrC,YAAY5nC,QAC3C5D,KAAK+wC,6BAA6BlmB,GAClC7qB,KAAKgxC,0BAA0BrsC,GAAS,EAAGkmB,GAEjD,WAAWlmB,EAAOqjC,EAAQnd,GACxB,MAAMjnB,EAAU5D,KAAK8tC,aACrB,IAAI1rC,EACJ,GAAIuC,GAAS,GAAKA,EAAQ3E,KAAKwrC,YAAYjqC,KAAKkD,OAAQ,CACtD,MAAMy3B,EAAUl8B,KAAKwrC,YAAYjqC,KAAKoD,GACtCvC,EAAU85B,EAAQuR,WACfvR,EAAQuR,SAAWvB,GAAkBlsC,KAAKmH,aAAcxC,EAAOu3B,IAClE95B,EAAQm2B,OAASv4B,KAAK0wC,UAAU/rC,GAChCvC,EAAQgqC,IAAMxoC,EAAQrC,KAAKoD,GAC3BvC,EAAQuC,MAAQvC,EAAQ+pC,UAAYxnC,OAEpCvC,EAAUpC,KAAKytC,WACZztC,KAAKytC,SAAWxB,GAAqBjsC,KAAKyC,MAAM0E,aAAcnH,KAAK2E,QACtEvC,EAAQwB,QAAUA,EAClBxB,EAAQuC,MAAQvC,EAAQgI,aAAepK,KAAK2E,MAI9C,OAFAvC,EAAQ4lC,SAAWA,EACnB5lC,EAAQyoB,KAAOA,EACRzoB,EAET,6BAA6ByoB,GAC3B,OAAO7qB,KAAKixC,uBAAuBjxC,KAAKgvC,mBAAmBnnC,GAAIgjB,GAEjE,0BAA0BlmB,EAAOkmB,GAC/B,OAAO7qB,KAAKixC,uBAAuBjxC,KAAKkxC,gBAAgBrpC,GAAIgjB,EAAMlmB,GAEpE,uBAAuBwsC,EAAatmB,EAAO,UAAWlmB,GACpD,MAAMqjC,EAAkB,WAATnd,EACTmC,EAAQhtB,KAAK+sC,gBACbjN,EAAWqR,EAAc,IAAMtmB,EAC/B2hB,EAASxf,EAAM8S,GACfsR,EAAUpxC,KAAKutC,qBAAuB9gC,EAAQ9H,GACpD,GAAI6nC,EACF,OAAOD,GAAiBC,EAAQ4E,GAElC,MAAM9I,EAAStoC,KAAKyC,MAAM6lC,OACpB+G,EAAY/G,EAAO+I,wBAAwBrxC,KAAKitC,MAAOkE,GACvD3c,EAAWwT,EAAS,CAAImJ,EAAH,QAAuB,QAASA,EAAa,IAAM,CAACA,EAAa,IACtF5c,EAAS+T,EAAOiH,gBAAgBvvC,KAAK8tC,aAAcuB,GACnDiC,EAAQvtC,OAAOsD,KAAK6kB,GAASjC,SAASknB,IACtC/uC,EAAU,IAAMpC,KAAKmH,WAAWxC,EAAOqjC,GACvC51B,EAASk2B,EAAOiJ,oBAAoBhd,EAAQ+c,EAAOlvC,EAASoyB,GAKlE,OAJIpiB,EAAO22B,UACT32B,EAAO22B,QAAUqI,EACjBpkB,EAAM8S,GAAY/7B,OAAOytC,OAAOjF,GAAiBn6B,EAAQg/B,KAEpDh/B,EAET,mBAAmBzN,EAAO8sC,EAAYzJ,GACpC,MAAMvlC,EAAQzC,KAAKyC,MACbuqB,EAAQhtB,KAAK+sC,gBACbjN,EAAW,aAAa2R,EACxBjF,EAASxf,EAAM8S,GACrB,GAAI0M,EACF,OAAOA,EAET,IAAIpoC,EACJ,IAAgC,IAA5B3B,EAAM2B,QAAQulB,UAAqB,CACrC,MAAM2e,EAAStoC,KAAKyC,MAAM6lC,OACpB+G,EAAY/G,EAAOoJ,0BAA0B1xC,KAAKitC,MAAOwE,GACzDld,EAAS+T,EAAOiH,gBAAgBvvC,KAAK8tC,aAAcuB,GACzDjrC,EAAUkkC,EAAOkH,eAAejb,EAAQv0B,KAAKmH,WAAWxC,EAAOqjC,EAAQyJ,IAEzE,MAAMtJ,EAAa,IAAI,GAAW1lC,EAAO2B,GAAWA,EAAQ+jC,YAI5D,OAHI/jC,GAAWA,EAAQ0wB,aACrB9H,EAAM8S,GAAY/7B,OAAOytC,OAAOrJ,IAE3BA,EAET,iBAAiB/jC,GACf,GAAKA,EAAQ2kC,QAGb,OAAO/oC,KAAKotC,iBAAmBptC,KAAKotC,eAAiBrpC,OAAOC,OAAO,GAAII,IAEzE,eAAeymB,EAAM8mB,GACnB,OAAQA,GAAiBrF,GAAmBzhB,IAAS7qB,KAAKyC,MAAMmvC,oBAElE,kBAAkB7gC,EAAO8Z,GACvB,MAAMgnB,EAAY7xC,KAAKgxC,0BAA0BjgC,EAAO8Z,GAClDinB,EAA0B9xC,KAAKotC,eAC/BuE,EAAgB3xC,KAAK+xC,iBAAiBF,GACtCG,EAAiBhyC,KAAKgyC,eAAennB,EAAM8mB,IAAmBA,IAAkBG,EAEtF,OADA9xC,KAAKiyC,oBAAoBN,EAAe9mB,EAAMgnB,GACvC,CAACF,gBAAeK,kBAEzB,cAAc9V,EAASv3B,EAAOojC,EAAYld,GACpCyhB,GAAmBzhB,GACrB9mB,OAAOC,OAAOk4B,EAAS6L,GAEvB/nC,KAAKkyC,mBAAmBvtC,EAAOkmB,GAAMnoB,OAAOw5B,EAAS6L,GAGzD,oBAAoB4J,EAAe9mB,EAAM+d,GACnC+I,IAAkBrF,GAAmBzhB,IACvC7qB,KAAKkyC,wBAAmB7vC,EAAWwoB,GAAMnoB,OAAOivC,EAAe/I,GAGnE,UAAU1M,EAASv3B,EAAOkmB,EAAMmd,GAC9B9L,EAAQ8L,OAASA,EACjB,MAAM5jC,EAAUpE,KAAKm8B,SAASx3B,EAAOqjC,GACrChoC,KAAKkyC,mBAAmBvtC,EAAOkmB,EAAMmd,GAAQtlC,OAAOw5B,EAAS,CAC3D93B,SAAW4jC,GAAUhoC,KAAK+xC,iBAAiB3tC,IAAaA,IAG5D,iBAAiB83B,EAAS9xB,EAAczF,GACtC3E,KAAKmyC,UAAUjW,EAASv3B,EAAO,UAAU,GAE3C,cAAcu3B,EAAS9xB,EAAczF,GACnC3E,KAAKmyC,UAAUjW,EAASv3B,EAAO,UAAU,GAE3C,2BACE,MAAMu3B,EAAUl8B,KAAKwrC,YAAY5nC,QAC7Bs4B,GACFl8B,KAAKmyC,UAAUjW,OAAS75B,EAAW,UAAU,GAGjD,wBACE,MAAM65B,EAAUl8B,KAAKwrC,YAAY5nC,QAC7Bs4B,GACFl8B,KAAKmyC,UAAUjW,OAAS75B,EAAW,UAAU,GAGjD,gBAAgB4sC,GACd,MAAM1tC,EAAOvB,KAAKktC,MACZjjB,EAAWjqB,KAAKwrC,YAAYjqC,KAClC,IAAK,MAAOuR,EAAQs/B,EAAMC,KAASryC,KAAK0tC,UACtC1tC,KAAK8S,GAAQs/B,EAAMC,GAErBryC,KAAK0tC,UAAY,GACjB,MAAM4E,EAAUroB,EAASxlB,OACnB8tC,EAAUhxC,EAAKkD,OACf4Q,EAAQjI,KAAKoC,IAAI+iC,EAASD,GAC5Bj9B,GACFrV,KAAKw4B,MAAM,EAAGnjB,GAEZk9B,EAAUD,EACZtyC,KAAKwyC,gBAAgBF,EAASC,EAAUD,EAASrD,GACxCsD,EAAUD,GACnBtyC,KAAKyyC,gBAAgBF,EAASD,EAAUC,GAG5C,gBAAgBxhC,EAAOsE,EAAO45B,GAAmB,GAC/C,MAAMh6B,EAAOjV,KAAKwrC,YACZjqC,EAAO0T,EAAK1T,KACZyP,EAAMD,EAAQsE,EACpB,IAAIzL,EACJ,MAAM8oC,EAAQjb,IAEZ,IADAA,EAAIhzB,QAAU4Q,EACTzL,EAAI6tB,EAAIhzB,OAAS,EAAGmF,GAAKoH,EAAKpH,IACjC6tB,EAAI7tB,GAAK6tB,EAAI7tB,EAAIyL,IAIrB,IADAq9B,EAAKnxC,GACAqI,EAAImH,EAAOnH,EAAIoH,IAAOpH,EACzBrI,EAAKqI,GAAK,IAAI5J,KAAKkxC,gBAEjBlxC,KAAKs4B,UACPoa,EAAKz9B,EAAKO,SAEZxV,KAAKw4B,MAAMznB,EAAOsE,GACd45B,GACFjvC,KAAK2yC,eAAepxC,EAAMwP,EAAOsE,EAAO,SAG5C,eAAe6mB,EAASnrB,EAAOsE,EAAOwV,IACtC,gBAAgB9Z,EAAOsE,GACrB,MAAMJ,EAAOjV,KAAKwrC,YAClB,GAAIxrC,KAAKs4B,SAAU,CACjB,MAAMsa,EAAU39B,EAAKO,QAAQpC,OAAOrC,EAAOsE,GACvCJ,EAAK43B,UACPR,GAAYp3B,EAAM29B,GAGtB39B,EAAK1T,KAAK6R,OAAOrC,EAAOsE,GAE1B,MAAM/L,GACJ,GAAItJ,KAAKs4B,SACPt4B,KAAK0tC,UAAU5pC,KAAKwF,OACf,CACL,MAAOwJ,EAAQs/B,EAAMC,GAAQ/oC,EAC7BtJ,KAAK8S,GAAQs/B,EAAMC,GAErBryC,KAAKyC,MAAMowC,aAAa/uC,KAAK,CAAC9D,KAAK2E,SAAU2E,IAE/C,cACE,MAAM+L,EAAQy9B,UAAUruC,OACxBzE,KAAK+yC,MAAM,CAAC,kBAAmB/yC,KAAK8tC,aAAavsC,KAAKkD,OAAS4Q,EAAOA,IAExE,aACErV,KAAK+yC,MAAM,CAAC,kBAAmB/yC,KAAKwrC,YAAYjqC,KAAKkD,OAAS,EAAG,IAEnE,eACEzE,KAAK+yC,MAAM,CAAC,kBAAmB,EAAG,IAEpC,cAAchiC,EAAOsE,GACfA,GACFrV,KAAK+yC,MAAM,CAAC,kBAAmBhiC,EAAOsE,IAExC,MAAM29B,EAAWF,UAAUruC,OAAS,EAChCuuC,GACFhzC,KAAK+yC,MAAM,CAAC,kBAAmBhiC,EAAOiiC,IAG1C,iBACEhzC,KAAK+yC,MAAM,CAAC,kBAAmB,EAAGD,UAAUruC,UAOhD,SAASwuC,GAAkB5nB,EAAOlmB,GAChC,IAAKkmB,EAAM6nB,OAAOC,KAAM,CACtB,MAAMC,EAAe/nB,EAAMggB,wBAAwBlmC,GACnD,IAAIiN,EAAS,GACb,IAAK,IAAIxI,EAAI,EAAGK,EAAOmpC,EAAa3uC,OAAQmF,EAAIK,EAAML,IACpDwI,EAASA,EAAOihC,OAAOD,EAAaxpC,GAAG2hC,WAAW+H,mBAAmBjoB,IAEvEA,EAAM6nB,OAAOC,KAAO9/B,GAAajB,EAAOxD,KAAK,CAAChC,EAAGC,IAAMD,EAAIC,IAE7D,OAAOwe,EAAM6nB,OAAOC,KAEtB,SAASI,GAAqBt+B,GAC5B,MAAMoW,EAAQpW,EAAKM,OACbnD,EAAS6gC,GAAkB5nB,EAAOpW,EAAK9P,MAC7C,IACIyE,EAAGK,EAAMupC,EAAMnY,EADf7rB,EAAM6b,EAAMooB,QAEhB,MAAMC,EAAmB,KACV,QAATF,IAA4B,QAAVA,IAGlB/mC,EAAQ4uB,KACV7rB,EAAMpC,KAAKoC,IAAIA,EAAKpC,KAAK8B,IAAIskC,EAAOnY,IAAS7rB,IAE/C6rB,EAAOmY,IAET,IAAK5pC,EAAI,EAAGK,EAAOmI,EAAO3N,OAAQmF,EAAIK,IAAQL,EAC5C4pC,EAAOnoB,EAAMxV,iBAAiBzD,EAAOxI,IACrC8pC,IAGF,IADArY,OAAOh5B,EACFuH,EAAI,EAAGK,EAAOohB,EAAMsoB,MAAMlvC,OAAQmF,EAAIK,IAAQL,EACjD4pC,EAAOnoB,EAAMuoB,gBAAgBhqC,GAC7B8pC,IAEF,OAAOlkC,EAET,SAASqkC,GAAyBlvC,EAAOmvC,EAAO1vC,EAAS2vC,GACvD,MAAMC,EAAY5vC,EAAQ6vC,aAC1B,IAAInnC,EAAMib,EAQV,OAPI5f,EAAc6rC,IAChBlnC,EAAOgnC,EAAMtkC,IAAMpL,EAAQ8vC,mBAC3BnsB,EAAQ3jB,EAAQ+vC,gBAEhBrnC,EAAOknC,EAAYD,EACnBhsB,EAAQ,GAEH,CACLqsB,MAAOtnC,EAAOinC,EACdhsB,QACAhX,MAAO+iC,EAAMO,OAAO1vC,GAAUmI,EAAO,GAGzC,SAASwnC,GAA0B3vC,EAAOmvC,EAAO1vC,EAAS2vC,GACxD,MAAMM,EAASP,EAAMO,OACfb,EAAOa,EAAO1vC,GACpB,IAAI02B,EAAO12B,EAAQ,EAAI0vC,EAAO1vC,EAAQ,GAAK,KACvCs0B,EAAOt0B,EAAQ0vC,EAAO5vC,OAAS,EAAI4vC,EAAO1vC,EAAQ,GAAK,KAC3D,MAAM4vC,EAAUnwC,EAAQ8vC,mBACX,OAAT7Y,IACFA,EAAOmY,GAAiB,OAATva,EAAgB6a,EAAM9iC,IAAM8iC,EAAM/iC,MAAQkoB,EAAOua,IAErD,OAATva,IACFA,EAAOua,EAAOA,EAAOnY,GAEvB,MAAMtqB,EAAQyiC,GAAQA,EAAOpmC,KAAKoC,IAAI6rB,EAAMpC,IAAS,EAAIsb,EACnDznC,EAAOM,KAAK8B,IAAI+pB,EAAOoC,GAAQ,EAAIkZ,EACzC,MAAO,CACLH,MAAOtnC,EAAOinC,EACdhsB,MAAO3jB,EAAQ+vC,cACfpjC,SAGJ,SAASyjC,GAAcC,EAAO1nC,EAAMo+B,EAAQvhC,GAC1C,MAAM8qC,EAAavJ,EAAO3S,MAAMic,EAAM,GAAI7qC,GACpC+qC,EAAWxJ,EAAO3S,MAAMic,EAAM,GAAI7qC,GAClC4F,EAAMpC,KAAKoC,IAAIklC,EAAYC,GAC3BllC,EAAMrC,KAAKqC,IAAIilC,EAAYC,GACjC,IAAIC,EAAWplC,EACXqlC,EAASplC,EACTrC,KAAK8B,IAAIM,GAAOpC,KAAK8B,IAAIO,KAC3BmlC,EAAWnlC,EACXolC,EAASrlC,GAEXzC,EAAKo+B,EAAO11B,MAAQo/B,EACpB9nC,EAAK+nC,QAAU,CACbF,WACAC,SACA9jC,MAAO2jC,EACP1jC,IAAK2jC,EACLnlC,MACAC,OAGJ,SAASslC,GAAWN,EAAO1nC,EAAMo+B,EAAQvhC,GAMvC,OALIxB,EAAQqsC,GACVD,GAAcC,EAAO1nC,EAAMo+B,EAAQvhC,GAEnCmD,EAAKo+B,EAAO11B,MAAQ01B,EAAO3S,MAAMic,EAAO7qC,GAEnCmD,EAET,SAASioC,GAAsB//B,EAAM1T,EAAMwP,EAAOsE,GAChD,MAAME,EAASN,EAAKM,OACd41B,EAASl2B,EAAKk2B,OACdjoC,EAASqS,EAAOu6B,YAChBC,EAAcx6B,IAAW41B,EACzB5S,EAAS,GACf,IAAI3uB,EAAGK,EAAM8C,EAAM0nC,EACnB,IAAK7qC,EAAImH,EAAO9G,EAAO8G,EAAQsE,EAAOzL,EAAIK,IAAQL,EAChD6qC,EAAQlzC,EAAKqI,GACbmD,EAAO,GACPA,EAAKwI,EAAOE,MAAQs6B,GAAex6B,EAAOijB,MAAMt1B,EAAO0G,GAAIA,GAC3D2uB,EAAOz0B,KAAKixC,GAAWN,EAAO1nC,EAAMo+B,EAAQvhC,IAE9C,OAAO2uB,EAET,SAAS0c,GAAWC,GAClB,OAAOA,QAA8B7yC,IAApB6yC,EAAON,eAA4CvyC,IAAlB6yC,EAAOL,OAE3D,SAASM,GAAQroC,EAAMq+B,EAAQiK,GAC7B,OAAa,IAATtoC,EACKgB,EAAKhB,IAENq+B,EAAOkK,eAAiB,GAAK,IAAMlK,EAAO37B,KAAO4lC,EAAa,GAAK,GAE7E,SAASE,GAAYvN,GACnB,IAAIp+B,EAASoH,EAAOC,EAAKye,EAAKC,EAiB9B,OAhBIqY,EAAWwN,YACb5rC,EAAUo+B,EAAWh1B,KAAOg1B,EAAWt8B,EACvCsF,EAAQ,OACRC,EAAM,UAENrH,EAAUo+B,EAAWh1B,KAAOg1B,EAAWp8B,EACvCoF,EAAQ,SACRC,EAAM,OAEJrH,GACF8lB,EAAM,MACNC,EAAS,UAETD,EAAM,QACNC,EAAS,OAEJ,CAAC3e,QAAOC,MAAKrH,UAAS8lB,MAAKC,UAEpC,SAAS8lB,GAAiBzN,EAAY3jC,EAAS6lC,EAAOtlC,GACpD,IAAI8wC,EAAOrxC,EAAQsxC,cACnB,MAAM1iC,EAAM,GACZ,IAAKyiC,EAEH,YADA1N,EAAW2N,cAAgB1iC,GAG7B,IAAa,IAATyiC,EAEF,YADA1N,EAAW2N,cAAgB,CAACjmB,KAAK,EAAM5a,OAAO,EAAM6a,QAAQ,EAAM9a,MAAM,IAG1E,MAAM,MAAC7D,EAAK,IAAEC,EAAG,QAAErH,EAAO,IAAE8lB,EAAG,OAAEC,GAAU4lB,GAAYvN,GAC1C,WAAT0N,GAAqBxL,IACvBlC,EAAW4N,oBAAqB,GAC3B1L,EAAM4B,MAAQ,KAAOlnC,EACxB8wC,EAAOhmB,GACGwa,EAAM6B,SAAW,KAAOnnC,EAClC8wC,EAAO/lB,GAEP1c,EAAI4iC,GAAUlmB,EAAQ3e,EAAOC,EAAKrH,KAAY,EAC9C8rC,EAAOhmB,IAGXzc,EAAI4iC,GAAUH,EAAM1kC,EAAOC,EAAKrH,KAAY,EAC5Co+B,EAAW2N,cAAgB1iC,EAE7B,SAAS4iC,GAAUH,EAAM7oC,EAAGC,EAAGlD,GAO7B,OANIA,GACF8rC,EAAOI,GAAKJ,EAAM7oC,EAAGC,GACrB4oC,EAAOK,GAASL,EAAM5oC,EAAGD,IAEzB6oC,EAAOK,GAASL,EAAM7oC,EAAGC,GAEpB4oC,EAET,SAASI,GAAKE,EAAM5rC,EAAI6rC,GACtB,OAAOD,IAAS5rC,EAAK6rC,EAAKD,IAASC,EAAK7rC,EAAK4rC,EAE/C,SAASD,GAAStqC,EAAGuF,EAAOC,GAC1B,MAAa,UAANxF,EAAgBuF,EAAc,QAANvF,EAAcwF,EAAMxF,EAErD,SAASyqC,GAAiBlO,GAAY,cAACmO,GAAgBnuB,GACrDggB,EAAWmO,cAAkC,SAAlBA,EACb,IAAVnuB,EAAc,IAAO,EACrBmuB,EAjMN,GAAkBhqB,SAAW,GAC7B,GAAkB7jB,UAAU2mC,mBAAqB,KACjD,GAAkB3mC,UAAU6oC,gBAAkB,KAiM9C,MAAM,WAAsB,GAC1B,mBAAmBj8B,EAAM1T,EAAMwP,EAAOsE,GACpC,OAAO2/B,GAAsB//B,EAAM1T,EAAMwP,EAAOsE,GAElD,eAAeJ,EAAM1T,EAAMwP,EAAOsE,GAChC,OAAO2/B,GAAsB//B,EAAM1T,EAAMwP,EAAOsE,GAElD,gBAAgBJ,EAAM1T,EAAMwP,EAAOsE,GACjC,MAAM,OAACE,EAAM,OAAE41B,GAAUl2B,GACnB,SAAC+6B,EAAW,IAAG,SAAEC,EAAW,KAAOjwC,KAAKs4B,SACxC6d,EAA2B,MAAhB5gC,EAAOE,KAAeu6B,EAAWC,EAC5CmG,EAA2B,MAAhBjL,EAAO11B,KAAeu6B,EAAWC,EAC5C1X,EAAS,GACf,IAAI3uB,EAAGK,EAAM8C,EAAMlB,EACnB,IAAKjC,EAAImH,EAAO9G,EAAO8G,EAAQsE,EAAOzL,EAAIK,IAAQL,EAChDiC,EAAMtK,EAAKqI,GACXmD,EAAO,GACPA,EAAKwI,EAAOE,MAAQF,EAAOijB,MAAM5sB,EAAiBC,EAAKsqC,GAAWvsC,GAClE2uB,EAAOz0B,KAAKixC,GAAWnpC,EAAiBC,EAAKuqC,GAAWrpC,EAAMo+B,EAAQvhC,IAExE,OAAO2uB,EAET,sBAAsBvqB,EAAOqd,EAAOkN,EAAQ0R,GAC1CoM,MAAM5F,sBAAsBziC,EAAOqd,EAAOkN,EAAQ0R,GAClD,MAAMiL,EAAS3c,EAAOuc,QAClBI,GAAU7pB,IAAUrrB,KAAKwrC,YAAYL,SACvCn9B,EAAMwB,IAAMpC,KAAKoC,IAAIxB,EAAMwB,IAAK0lC,EAAO1lC,KACvCxB,EAAMyB,IAAMrC,KAAKqC,IAAIzB,EAAMyB,IAAKylC,EAAOzlC,MAG3C,iBACE,OAAO,EAET,iBAAiB9K,GACf,MAAMsQ,EAAOjV,KAAKwrC,aACZ,OAACj2B,EAAM,OAAE41B,GAAUl2B,EACnBsjB,EAASv4B,KAAK0wC,UAAU/rC,GACxBuwC,EAAS3c,EAAOuc,QAChBt0C,EAAQy0C,GAAWC,GACrB,IAAMA,EAAOnkC,MAAQ,KAAOmkC,EAAOlkC,IAAM,IACzC,GAAKm6B,EAAOwF,iBAAiBpY,EAAO4S,EAAO11B,OAC/C,MAAO,CACLlR,MAAO,GAAKgR,EAAOo7B,iBAAiBpY,EAAOhjB,EAAOE,OAClDjV,SAGJ,aACER,KAAKutC,qBAAsB,EAC3B8I,MAAM1I,aACN,MAAM14B,EAAOjV,KAAKwrC,YAClBv2B,EAAKg1B,MAAQjqC,KAAK8tC,aAAa7D,MAEjC,OAAOpf,GACL,MAAM5V,EAAOjV,KAAKwrC,YAClBxrC,KAAK2yC,eAAe19B,EAAK1T,KAAM,EAAG0T,EAAK1T,KAAKkD,OAAQomB,GAEtD,eAAeyrB,EAAMvlC,EAAOsE,EAAOwV,GACjC,MAAM0rB,EAAiB,UAAT1rB,GACR,MAAClmB,EAAO6mC,aAAa,OAACL,IAAWnrC,KACjC+S,EAAOo4B,EAAOqL,eACdjB,EAAapK,EAAOkK,eACpBvB,EAAQ9zC,KAAKy2C,aACb,cAAC9E,EAAa,eAAEK,GAAkBhyC,KAAK02C,kBAAkB3lC,EAAO8Z,GACtE,IAAK,IAAIjhB,EAAImH,EAAOnH,EAAImH,EAAQsE,EAAOzL,IAAK,CAC1C,MAAM2uB,EAASv4B,KAAK0wC,UAAU9mC,GACxB+sC,EAAUJ,GAASpuC,EAAcowB,EAAO4S,EAAO11B,OAAS,CAAC1C,OAAM6jC,KAAM7jC,GAAQ/S,KAAK62C,yBAAyBjtC,GAC3GktC,EAAU92C,KAAK+2C,yBAAyBntC,EAAGkqC,GAC3C7J,GAAS1R,EAAOkT,SAAW,IAAIN,EAAO11B,MACtCsyB,EAAa,CACjBwN,aACAxiC,KAAM4jC,EAAQ5jC,KACd4iC,oBAAqB1L,GAASgL,GAAW1c,EAAOuc,UAAanwC,IAAUslC,EAAM4B,MAAQlnC,IAAUslC,EAAM6B,QACrGrgC,EAAG8pC,EAAaoB,EAAQC,KAAOE,EAAQE,OACvCrrC,EAAG4pC,EAAauB,EAAQE,OAASL,EAAQC,KACzCnxC,OAAQ8vC,EAAauB,EAAQhqC,KAAOM,KAAK8B,IAAIynC,EAAQ7pC,MACrDvH,MAAOgwC,EAAanoC,KAAK8B,IAAIynC,EAAQ7pC,MAAQgqC,EAAQhqC,MAEnDklC,IACFjK,EAAW3jC,QAAUutC,GAAiB3xC,KAAKgxC,0BAA0BpnC,EAAG0sC,EAAK1sC,GAAGo+B,OAAS,SAAWnd,IAEtG,MAAMzmB,EAAU2jC,EAAW3jC,SAAWkyC,EAAK1sC,GAAGxF,QAC9CoxC,GAAiBzN,EAAY3jC,EAAS6lC,EAAOtlC,GAC7CsxC,GAAiBlO,EAAY3jC,EAAS0vC,EAAM/rB,OAC5C/nB,KAAKi3C,cAAcX,EAAK1sC,GAAIA,EAAGm+B,EAAYld,IAG/C,WAAW5Y,EAAMk6B,GACf,MAAM,OAAC52B,GAAUvV,KAAKwrC,YAChB1B,EAAWv0B,EAAO81B,wBAAwBrrC,KAAKitC,OAClDvV,OAAOziB,GAAQA,EAAKs2B,WAAWnnC,QAAQ8yC,SACpC1M,EAAUj1B,EAAOnR,QAAQomC,QACzBM,EAAS,GACTqM,EAAYliC,IAChB,MAAMsjB,EAAStjB,EAAKs2B,WAAWmF,UAAUvE,GACnCrjB,EAAMyP,GAAUA,EAAOtjB,EAAKk2B,OAAO11B,MACzC,GAAItN,EAAc2gB,IAAQ9Z,MAAM8Z,GAC9B,OAAO,GAGX,IAAK,MAAM7T,KAAQ60B,EACjB,SAAkBznC,IAAd8pC,IAA2BgL,EAASliC,QAGxB,IAAZu1B,IAAqD,IAAhCM,EAAOjgC,QAAQoK,EAAKg1B,aAClC5nC,IAAZmoC,QAAwCnoC,IAAf4S,EAAKg1B,QAC3Ba,EAAOhnC,KAAKmR,EAAKg1B,OAEfh1B,EAAKtQ,QAAUsN,GACjB,MAMJ,OAHK64B,EAAOrmC,QACVqmC,EAAOhnC,UAAKzB,GAEPyoC,EAET,eAAenmC,GACb,OAAO3E,KAAKo3C,gBAAW/0C,EAAWsC,GAAOF,OAE3C,eAAe2F,EAAc9J,EAAM6rC,GACjC,MAAMrB,EAAS9qC,KAAKo3C,WAAWhtC,EAAc+hC,GACvCxnC,OAAkBtC,IAAT/B,EACXwqC,EAAOjgC,QAAQvK,IACd,EACL,OAAmB,IAAXqE,EACJmmC,EAAOrmC,OAAS,EAChBE,EAEN,YACE,MAAM+rB,EAAO1wB,KAAKoE,QACZ6Q,EAAOjV,KAAKwrC,YACZj2B,EAASN,EAAKM,OACd8+B,EAAS,GACf,IAAIzqC,EAAGK,EACP,IAAKL,EAAI,EAAGK,EAAOgL,EAAK1T,KAAKkD,OAAQmF,EAAIK,IAAQL,EAC/CyqC,EAAOvwC,KAAKyR,EAAOM,iBAAiB7V,KAAK0wC,UAAU9mC,GAAG2L,EAAOE,MAAO7L,IAEtE,MAAMqqC,EAAevjB,EAAKujB,aACpBzkC,EAAMykC,GAAgBV,GAAqBt+B,GACjD,MAAO,CACLzF,MACA6kC,SACAtjC,MAAOwE,EAAO8hC,YACdrmC,IAAKuE,EAAO+hC,UACZvD,WAAY/zC,KAAKu3C,iBACjBlsB,MAAO9V,EACP2hC,QAASxmB,EAAKwmB,QACdnvB,MAAOksB,EAAe,EAAIvjB,EAAKwjB,mBAAqBxjB,EAAKyjB,eAG7D,yBAAyBxvC,GACvB,MAAO6mC,aAAa,OAACL,EAAM,SAAE0B,GAAWzoC,SAAU2O,KAAMykC,EAAS,aAAEC,IAAiBz3C,KAC9Eo1C,EAAaoC,GAAa,EAC1Bjf,EAASv4B,KAAK0wC,UAAU/rC,GACxBuwC,EAAS3c,EAAOuc,QAChB4C,EAAWzC,GAAWC,GAC5B,IAGI0B,EAAM9pC,EAHNtM,EAAQ+3B,EAAO4S,EAAO11B,MACtB1E,EAAQ,EACRtM,EAASooC,EAAW7sC,KAAKgqC,WAAWmB,EAAQ5S,EAAQsU,GAAYrsC,EAEhEiE,IAAWjE,IACbuQ,EAAQtM,EAASjE,EACjBiE,EAASjE,GAEPk3C,IACFl3C,EAAQ00C,EAAON,SACfnwC,EAASywC,EAAOL,OAASK,EAAON,SAClB,IAAVp0C,GAAesN,EAAKtN,KAAWsN,EAAKonC,EAAOL,UAC7C9jC,EAAQ,GAEVA,GAASvQ,GAEX,MAAMk0C,EAAcvsC,EAAcqvC,IAAeE,EAAuB3mC,EAAZymC,EAC5D,IAAIzkC,EAAOo4B,EAAOt1B,iBAAiB6+B,GAOnC,GALEkC,EADE52C,KAAKyC,MAAMk1C,kBAAkBhzC,GACxBwmC,EAAOt1B,iBAAiB9E,EAAQtM,GAEhCsO,EAETjG,EAAO8pC,EAAO7jC,EACV3F,KAAK8B,IAAIpC,GAAQ2qC,EAAc,CACjC3qC,EAAOqoC,GAAQroC,EAAMq+B,EAAQiK,GAAcqC,EACvCj3C,IAAU40C,IACZriC,GAAQjG,EAAO,GAEjB,MAAM8qC,EAAazM,EAAO0M,mBAAmB,GACvCC,EAAW3M,EAAO0M,mBAAmB,GACrCroC,EAAMpC,KAAKoC,IAAIooC,EAAYE,GAC3BroC,EAAMrC,KAAKqC,IAAImoC,EAAYE,GACjC/kC,EAAO3F,KAAKqC,IAAIrC,KAAKoC,IAAIuD,EAAMtD,GAAMD,GACrConC,EAAO7jC,EAAOjG,EAEhB,GAAIiG,IAASo4B,EAAOt1B,iBAAiBu/B,GAAa,CAChD,MAAM2C,EAAWjqC,EAAKhB,GAAQq+B,EAAO6M,qBAAqB5C,GAAc,EACxEriC,GAAQglC,EACRjrC,GAAQirC,EAEV,MAAO,CACLjrC,OACAiG,OACA6jC,OACAI,OAAQJ,EAAO9pC,EAAO,GAG1B,yBAAyBnI,EAAOmvC,GAC9B,MAAMzoB,EAAQyoB,EAAMzoB,MACdjnB,EAAUpE,KAAKoE,QACf+yC,EAAW/yC,EAAQ+yC,SACnBc,EAAkBnvC,EAAe1E,EAAQ6zC,gBAAiBC,KAChE,IAAIlB,EAAQlqC,EACZ,GAAIgnC,EAAMoD,QAAS,CACjB,MAAMnD,EAAaoD,EAAWn3C,KAAKu3C,eAAe5yC,GAASmvC,EAAMC,WAC3D/lC,EAAiC,SAAzB5J,EAAQ6vC,aAClBK,GAA0B3vC,EAAOmvC,EAAO1vC,EAAS2vC,GACjDF,GAAyBlvC,EAAOmvC,EAAO1vC,EAAS2vC,GAC9CoE,EAAan4C,KAAKo4C,eAAep4C,KAAK2E,MAAO3E,KAAKwrC,YAAYvB,MAAOkN,EAAWxyC,OAAQtC,GAC9F20C,EAAShpC,EAAM+C,MAAS/C,EAAMomC,MAAQ+D,EAAenqC,EAAMomC,MAAQ,EACnEtnC,EAAOM,KAAKoC,IAAIyoC,EAAiBjqC,EAAMomC,MAAQpmC,EAAM+Z,YAErDivB,EAAS3rB,EAAMxV,iBAAiB7V,KAAK0wC,UAAU/rC,GAAO0mB,EAAM5V,MAAO9Q,GACnEmI,EAAOM,KAAKoC,IAAIyoC,EAAiBnE,EAAMtkC,IAAMskC,EAAM/rB,OAErD,MAAO,CACLhV,KAAMikC,EAASlqC,EAAO,EACtB8pC,KAAMI,EAASlqC,EAAO,EACtBkqC,SACAlqC,QAGJ,OACE,MAAMmI,EAAOjV,KAAKwrC,YACZL,EAASl2B,EAAKk2B,OACdkN,EAAQpjC,EAAK1T,KACb0I,EAAOouC,EAAM5zC,OACnB,IAAImF,EAAI,EACR,KAAOA,EAAIK,IAAQL,EACsB,OAAnC5J,KAAK0wC,UAAU9mC,GAAGuhC,EAAO11B,OAC3B4iC,EAAMzuC,GAAG07B,KAAKtlC,KAAK8sC,OAK3B,GAAcjlC,GAAK,MACnB,GAAcqkB,SAAW,CACvB8iB,oBAAoB,EACpBkC,gBAAiB,MACjBgD,mBAAoB,GACpBC,cAAe,GACf+C,SAAS,EACT/O,WAAY,CACVN,QAAS,CACP1iC,KAAM,SACN4iC,WAAY,CAAC,IAAK,IAAK,OAAQ,QAAS,aAI9C,GAAc3e,UAAY,CACxBkC,OAAQ,CACNgtB,QAAS,CACPnzC,KAAM,WACNozC,QAAQ,EACRC,KAAM,CACJD,QAAQ,IAGZE,QAAS,CACPtzC,KAAM,SACN8uB,aAAa,KAKnB,MAAM,WAAyB,GAC7B,aACEj0B,KAAKutC,qBAAsB,EAC3B8I,MAAM1I,aAER,mBAAmB14B,EAAM1T,EAAMwP,EAAOsE,GACpC,MAAMkjB,EAAS8d,MAAMzG,mBAAmB36B,EAAM1T,EAAMwP,EAAOsE,GAC3D,IAAK,IAAIzL,EAAI,EAAGA,EAAI2uB,EAAO9zB,OAAQmF,IACjC2uB,EAAO3uB,GAAGkrC,QAAU90C,KAAKgxC,0BAA0BpnC,EAAImH,GAAOud,OAEhE,OAAOiK,EAET,eAAetjB,EAAM1T,EAAMwP,EAAOsE,GAChC,MAAMkjB,EAAS8d,MAAM3G,eAAez6B,EAAM1T,EAAMwP,EAAOsE,GACvD,IAAK,IAAIzL,EAAI,EAAGA,EAAI2uB,EAAO9zB,OAAQmF,IAAK,CACtC,MAAMmD,EAAOxL,EAAKwP,EAAQnH,GAC1B2uB,EAAO3uB,GAAGkrC,QAAUhsC,EAAeiE,EAAK,GAAI/M,KAAKgxC,0BAA0BpnC,EAAImH,GAAOud,QAExF,OAAOiK,EAET,gBAAgBtjB,EAAM1T,EAAMwP,EAAOsE,GACjC,MAAMkjB,EAAS8d,MAAM1G,gBAAgB16B,EAAM1T,EAAMwP,EAAOsE,GACxD,IAAK,IAAIzL,EAAI,EAAGA,EAAI2uB,EAAO9zB,OAAQmF,IAAK,CACtC,MAAMmD,EAAOxL,EAAKwP,EAAQnH,GAC1B2uB,EAAO3uB,GAAGkrC,QAAUhsC,EAAeiE,GAAQA,EAAK4N,IAAM5N,EAAK4N,EAAG3a,KAAKgxC,0BAA0BpnC,EAAImH,GAAOud,QAE1G,OAAOiK,EAET,iBACE,MAAMh3B,EAAOvB,KAAKwrC,YAAYjqC,KAC9B,IAAIkO,EAAM,EACV,IAAK,IAAI7F,EAAIrI,EAAKkD,OAAS,EAAGmF,GAAK,IAAKA,EACtC6F,EAAMrC,KAAKqC,IAAIA,EAAKlO,EAAKqI,GAAGkD,KAAK9M,KAAKgxC,0BAA0BpnC,IAAM,GAExE,OAAO6F,EAAM,GAAKA,EAEpB,iBAAiB9K,GACf,MAAMsQ,EAAOjV,KAAKwrC,aACZ,OAACz1B,EAAM,OAAEC,GAAUf,EACnBsjB,EAASv4B,KAAK0wC,UAAU/rC,GACxB8G,EAAIsK,EAAO46B,iBAAiBpY,EAAO9sB,GACnCE,EAAIqK,EAAO26B,iBAAiBpY,EAAO5sB,GACnCgP,EAAI4d,EAAOuc,QACjB,MAAO,CACLvwC,MAAO0Q,EAAK1Q,MACZ/D,MAAO,IAAMiL,EAAI,KAAOE,GAAKgP,EAAI,KAAOA,EAAI,IAAM,KAGtD,OAAOkQ,GACL,MAAM3V,EAASlV,KAAKwrC,YAAYjqC,KAChCvB,KAAK2yC,eAAez9B,EAAQ,EAAGA,EAAOzQ,OAAQomB,GAEhD,eAAe3V,EAAQnE,EAAOsE,EAAOwV,GACnC,MAAM0rB,EAAiB,UAAT1rB,GACR,OAACtV,EAAM,OAAE41B,GAAUnrC,KAAKwrC,aACxB,cAACmG,EAAa,eAAEK,GAAkBhyC,KAAK02C,kBAAkB3lC,EAAO8Z,GAChE6gB,EAAQn2B,EAAOE,KACfk2B,EAAQR,EAAO11B,KACrB,IAAK,IAAI7L,EAAImH,EAAOnH,EAAImH,EAAQsE,EAAOzL,IAAK,CAC1C,MAAM0lB,EAAQpa,EAAOtL,GACf2uB,GAAUge,GAASv2C,KAAK0wC,UAAU9mC,GAClCm+B,EAAa,GACbzN,EAASyN,EAAW2D,GAAS6K,EAAQhhC,EAAOsiC,mBAAmB,IAAOtiC,EAAOM,iBAAiB0iB,EAAOmT,IACrGnR,EAASwN,EAAW4D,GAAS4K,EAAQpL,EAAOqL,eAAiBrL,EAAOt1B,iBAAiB0iB,EAAOoT,IAClG5D,EAAWpP,KAAO3pB,MAAMsrB,IAAWtrB,MAAMurB,GACrCyX,IACFjK,EAAW3jC,QAAUutC,GAAiB3xC,KAAKgxC,0BAA0BpnC,EAAG0lB,EAAM0Y,OAAS,SAAWnd,GAC9F0rB,IACFxO,EAAW3jC,QAAQkqB,OAAS,IAGhCtuB,KAAKi3C,cAAc3nB,EAAO1lB,EAAGm+B,EAAYld,IAG7C,0BAA0BlmB,EAAOkmB,GAC/B,MAAM0N,EAASv4B,KAAK0wC,UAAU/rC,GAC9B,IAAIyN,EAASikC,MAAMrF,0BAA0BrsC,EAAOkmB,GAChDzY,EAAO22B,UACT32B,EAASrO,OAAOC,OAAO,GAAIoO,EAAQ,CAAC22B,SAAS,KAE/C,MAAMza,EAASlc,EAAOkc,OAKtB,MAJa,WAATzD,IACFzY,EAAOkc,OAAS,GAElBlc,EAAOkc,QAAUxlB,EAAeyvB,GAAUA,EAAOuc,QAASxmB,GACnDlc,GAkCX,SAASsmC,GAAkBrqB,EAAUsqB,EAAeC,GAClD,IAAIC,EAAS,EACTC,EAAS,EACThc,EAAU,EACVC,EAAU,EACd,GAAI4b,EAAgBtrC,EAAK,CACvB,MAAM0rC,EAAa1qB,EACb2qB,EAAWD,EAAaJ,EACxBM,EAAS7rC,KAAKwK,IAAImhC,GAClBG,EAAS9rC,KAAKuJ,IAAIoiC,GAClBI,EAAO/rC,KAAKwK,IAAIohC,GAChBI,EAAOhsC,KAAKuJ,IAAIqiC,GAChBK,EAAU,CAAC/oC,EAAO1D,EAAGC,IAAMiE,GAAcR,EAAOyoC,EAAYC,GAAU,GAAQ,EAAI5rC,KAAKqC,IAAI7C,EAAGA,EAAIgsC,EAAQ/rC,EAAGA,EAAI+rC,GACjHU,EAAU,CAAChpC,EAAO1D,EAAGC,IAAMiE,GAAcR,EAAOyoC,EAAYC,GAAU,IAAS,EAAI5rC,KAAKoC,IAAI5C,EAAGA,EAAIgsC,EAAQ/rC,EAAGA,EAAI+rC,GAClHW,EAAOF,EAAQ,EAAGJ,EAAQE,GAC1BK,EAAOH,EAAQ3rC,EAASwrC,EAAQE,GAChCK,EAAOH,EAAQnsC,EAAI8rC,EAAQE,GAC3BO,EAAOJ,EAAQnsC,EAAKO,EAASwrC,EAAQE,GAC3CP,GAAUU,EAAOE,GAAQ,EACzBX,GAAUU,EAAOE,GAAQ,EACzB5c,IAAYyc,EAAOE,GAAQ,EAC3B1c,IAAYyc,EAAOE,GAAQ,EAE7B,MAAO,CAACb,SAAQC,SAAQhc,UAASC,WAtDnC,GAAiBl1B,GAAK,SACtB,GAAiBqkB,SAAW,CAC1B8iB,oBAAoB,EACpBkC,gBAAiB,QACjB/I,WAAY,CACVN,QAAS,CACP1iC,KAAM,SACN4iC,WAAY,CAAC,IAAK,IAAK,cAAe,aAI5C,GAAiB3e,UAAY,CAC3BkC,OAAQ,CACN7f,EAAG,CACDtG,KAAM,UAERwG,EAAG,CACDxG,KAAM,WAGVS,QAAS,CACP+zC,QAAS,CACPhV,UAAW,CACT,QACE,MAAO,QAgCjB,MAAM,WAA2B,GAC/B,YAAYliC,EAAO2H,GACjBisC,MAAM5zC,EAAO2H,GACbpK,KAAKutC,qBAAsB,EAC3BvtC,KAAK45C,iBAAcv3C,EACnBrC,KAAK65C,iBAAcx3C,EACnBrC,KAAK88B,aAAUz6B,EACfrC,KAAK+8B,aAAU16B,EAEjB,cACA,MAAM0O,EAAOsE,GACX,MAAM9T,EAAOvB,KAAK8tC,aAAavsC,KACzB0T,EAAOjV,KAAKwrC,YAClB,IAAsB,IAAlBxrC,KAAKs4B,SACPrjB,EAAKO,QAAUjU,MACV,CACL,IAKIqI,EAAGK,EALH6vC,EAAUlwC,IAAOrI,EAAKqI,GAC1B,GAAInB,EAASlH,EAAKwP,IAAS,CACzB,MAAM,IAACnG,EAAM,SAAW5K,KAAKs4B,SAC7BwhB,EAAUlwC,IAAOgC,EAAiBrK,EAAKqI,GAAIgB,GAG7C,IAAKhB,EAAImH,EAAO9G,EAAO8G,EAAQsE,EAAOzL,EAAIK,IAAQL,EAChDqL,EAAKO,QAAQ5L,GAAKkwC,EAAOlwC,IAI/B,eACE,OAAO8F,EAAU1P,KAAKoE,QAAQiqB,SAAW,IAE3C,oBACE,OAAO3e,EAAU1P,KAAKoE,QAAQu0C,eAEhC,sBACE,IAAInpC,EAAMnC,EACNoC,GAAOpC,EACX,IAAK,IAAIzD,EAAI,EAAGA,EAAI5J,KAAKyC,MAAMlB,KAAK4B,SAASsB,SAAUmF,EACrD,GAAI5J,KAAKyC,MAAMs3C,iBAAiBnwC,GAAI,CAClC,MAAM2hC,EAAavrC,KAAKyC,MAAMmsC,eAAehlC,GAAG2hC,WAC1Cld,EAAWkd,EAAWyO,eACtBrB,EAAgBpN,EAAW0O,oBACjCzqC,EAAMpC,KAAKoC,IAAIA,EAAK6e,GACpB5e,EAAMrC,KAAKqC,IAAIA,EAAK4e,EAAWsqB,GAGnC,MAAO,CACLtqB,SAAU7e,EACVmpC,cAAelpC,EAAMD,GAGzB,OAAOqb,GACL,MAAMpoB,EAAQzC,KAAKyC,OACb,UAACquC,GAAaruC,EACdwS,EAAOjV,KAAKwrC,YACZ0O,EAAOjlC,EAAK1T,KACZ44C,EAAUn6C,KAAKo6C,oBAAsBp6C,KAAKq6C,aAAaH,GAAQl6C,KAAKoE,QAAQ+1C,QAC5EG,EAAUltC,KAAKqC,KAAKrC,KAAKoC,IAAIshC,EAAUvrC,MAAOurC,EAAUrrC,QAAU00C,GAAW,EAAG,GAChFvB,EAASxrC,KAAKoC,IAAIzG,EAAa/I,KAAKoE,QAAQw0C,OAAQ0B,GAAU,GAC9DC,EAAcv6C,KAAKw6C,eAAex6C,KAAK2E,QACvC,cAACg0C,EAAa,SAAEtqB,GAAYruB,KAAKy6C,uBACjC,OAAC5B,EAAM,OAAEC,EAAM,QAAEhc,EAAO,QAAEC,GAAW2b,GAAkBrqB,EAAUsqB,EAAeC,GAChFznB,GAAY2f,EAAUvrC,MAAQ40C,GAAWtB,EACzClb,GAAamT,EAAUrrC,OAAS00C,GAAWrB,EAC3C4B,EAAYttC,KAAKqC,IAAIrC,KAAKoC,IAAI2hB,EAAUwM,GAAa,EAAG,GACxDkc,EAAc1wC,EAAYnJ,KAAKoE,QAAQkqB,OAAQosB,GAC/Cd,EAAcxsC,KAAKqC,IAAIoqC,EAAcjB,EAAQ,GAC7C+B,GAAgBd,EAAcD,GAAe55C,KAAK46C,gCACxD56C,KAAK88B,QAAUA,EAAU+c,EACzB75C,KAAK+8B,QAAUA,EAAU8c,EACzB5kC,EAAK4lC,MAAQ76C,KAAK86C,iBAClB96C,KAAK65C,YAAcA,EAAcc,EAAe36C,KAAK+6C,qBAAqB/6C,KAAK2E,OAC/E3E,KAAK45C,YAAcxsC,KAAKqC,IAAIzP,KAAK65C,YAAcc,EAAeJ,EAAa,GAC3Ev6C,KAAK2yC,eAAeuH,EAAM,EAAGA,EAAKz1C,OAAQomB,GAE5C,eAAejhB,EAAG2sC,GAChB,MAAM7lB,EAAO1wB,KAAKoE,QACZ6Q,EAAOjV,KAAKwrC,YACZmN,EAAgB34C,KAAKi6C,oBAC3B,OAAK1D,GAAS7lB,EAAK/G,UAAUqxB,gBAAmBh7C,KAAKyC,MAAMk1C,kBAAkB/tC,IAA0B,OAApBqL,EAAKO,QAAQ5L,IAAeqL,EAAK1T,KAAKqI,GAAGgjC,OACnH,EAEF5sC,KAAKi7C,uBAAuBhmC,EAAKO,QAAQ5L,GAAK+uC,EAAgBtrC,GAEvE,eAAe6sC,EAAMnpC,EAAOsE,EAAOwV,GACjC,MAAM0rB,EAAiB,UAAT1rB,EACRpoB,EAAQzC,KAAKyC,MACbquC,EAAYruC,EAAMquC,UAClBpgB,EAAOjuB,EAAM2B,QACb82C,EAAgBxqB,EAAK/G,UACrBwxB,GAAWrK,EAAUl8B,KAAOk8B,EAAUj8B,OAAS,EAC/CumC,GAAWtK,EAAUrhB,IAAMqhB,EAAUphB,QAAU,EAC/C2rB,EAAe9E,GAAS2E,EAAcG,aACtCzB,EAAcyB,EAAe,EAAIr7C,KAAK45C,YACtCC,EAAcwB,EAAe,EAAIr7C,KAAK65C,aACtC,cAAClI,EAAa,eAAEK,GAAkBhyC,KAAK02C,kBAAkB3lC,EAAO8Z,GACtE,IACIjhB,EADAmvC,EAAa/4C,KAAKg6C,eAEtB,IAAKpwC,EAAI,EAAGA,EAAImH,IAASnH,EACvBmvC,GAAc/4C,KAAKs7C,eAAe1xC,EAAG2sC,GAEvC,IAAK3sC,EAAImH,EAAOnH,EAAImH,EAAQsE,IAASzL,EAAG,CACtC,MAAM+uC,EAAgB34C,KAAKs7C,eAAe1xC,EAAG2sC,GACvC3nB,EAAMsrB,EAAKtwC,GACXm+B,EAAa,CACjBt8B,EAAG0vC,EAAUn7C,KAAK88B,QAClBnxB,EAAGyvC,EAAUp7C,KAAK+8B,QAClBgc,aACAC,SAAUD,EAAaJ,EACvBA,gBACAkB,cACAD,eAEE5H,IACFjK,EAAW3jC,QAAUutC,GAAiB3xC,KAAKgxC,0BAA0BpnC,EAAGglB,EAAIoZ,OAAS,SAAWnd,IAElGkuB,GAAcJ,EACd34C,KAAKi3C,cAAcroB,EAAKhlB,EAAGm+B,EAAYld,IAG3C,iBACE,MAAM5V,EAAOjV,KAAKwrC,YACZ+P,EAAWtmC,EAAK1T,KACtB,IACIqI,EADAixC,EAAQ,EAEZ,IAAKjxC,EAAI,EAAGA,EAAI2xC,EAAS92C,OAAQmF,IAAK,CACpC,MAAMpJ,EAAQyU,EAAKO,QAAQ5L,GACb,OAAVpJ,GAAmBwO,MAAMxO,KAAUR,KAAKyC,MAAMk1C,kBAAkB/tC,IAAO2xC,EAAS3xC,GAAGgjC,SACrFiO,GAASztC,KAAK8B,IAAI1O,IAGtB,OAAOq6C,EAET,uBAAuBr6C,GACrB,MAAMq6C,EAAQ76C,KAAKwrC,YAAYqP,MAC/B,OAAIA,EAAQ,IAAM7rC,MAAMxO,GACf6M,GAAOD,KAAK8B,IAAI1O,GAASq6C,GAE3B,EAET,iBAAiBl2C,GACf,MAAMsQ,EAAOjV,KAAKwrC,YACZ/oC,EAAQzC,KAAKyC,MACbS,EAAST,EAAMlB,KAAK2B,QAAU,GAC9B1C,EAAQ6/B,GAAaprB,EAAKO,QAAQ7Q,GAAQlC,EAAM2B,QAAQy7B,QAC9D,MAAO,CACLt7B,MAAOrB,EAAOyB,IAAU,GACxBnE,SAGJ,kBAAkB05C,GAChB,IAAIzqC,EAAM,EACV,MAAMhN,EAAQzC,KAAKyC,MACnB,IAAImH,EAAGK,EAAMgL,EAAMs2B,EAAYnnC,EAC/B,IAAK81C,EACH,IAAKtwC,EAAI,EAAGK,EAAOxH,EAAMlB,KAAK4B,SAASsB,OAAQmF,EAAIK,IAAQL,EACzD,GAAInH,EAAMs3C,iBAAiBnwC,GAAI,CAC7BqL,EAAOxS,EAAMmsC,eAAehlC,GAC5BswC,EAAOjlC,EAAK1T,KACZgqC,EAAat2B,EAAKs2B,WAClB,MAIN,IAAK2O,EACH,OAAO,EAET,IAAKtwC,EAAI,EAAGK,EAAOiwC,EAAKz1C,OAAQmF,EAAIK,IAAQL,EAC1CxF,EAAUmnC,EAAWyF,0BAA0BpnC,GACnB,UAAxBxF,EAAQo3C,cACV/rC,EAAMrC,KAAKqC,IAAIA,EAAKrL,EAAQ+qB,aAAe,EAAG/qB,EAAQq3C,kBAAoB,IAG9E,OAAOhsC,EAET,aAAayqC,GACX,IAAIzqC,EAAM,EACV,IAAK,IAAI7F,EAAI,EAAGK,EAAOiwC,EAAKz1C,OAAQmF,EAAIK,IAAQL,EAAG,CACjD,MAAMxF,EAAUpE,KAAKgxC,0BAA0BpnC,GAC/C6F,EAAMrC,KAAKqC,IAAIA,EAAKrL,EAAQm0C,QAAU,EAAGn0C,EAAQs3C,aAAe,GAElE,OAAOjsC,EAET,qBAAqBrF,GACnB,IAAIuxC,EAAmB,EACvB,IAAK,IAAI/xC,EAAI,EAAGA,EAAIQ,IAAgBR,EAC9B5J,KAAKyC,MAAMs3C,iBAAiBnwC,KAC9B+xC,GAAoB37C,KAAKw6C,eAAe5wC,IAG5C,OAAO+xC,EAET,eAAevxC,GACb,OAAOgD,KAAKqC,IAAI3G,EAAe9I,KAAKyC,MAAMlB,KAAK4B,SAASiH,GAAcqe,OAAQ,GAAI,GAEpF,gCACE,OAAOzoB,KAAK+6C,qBAAqB/6C,KAAKyC,MAAMlB,KAAK4B,SAASsB,SAAW,GAGzE,GAAmBoD,GAAK,WACxB,GAAmBqkB,SAAW,CAC5B8iB,oBAAoB,EACpBkC,gBAAiB,MACjBvnB,UAAW,CACTqxB,eAAe,EACfK,cAAc,GAEhBlT,WAAY,CACVN,QAAS,CACP1iC,KAAM,SACN4iC,WAAY,CAAC,gBAAiB,WAAY,cAAe,cAAe,aAAc,IAAK,IAAK,SAAU,cAAe,aAG7H6Q,OAAQ,MACRvqB,SAAU,EACVsqB,cAAe,IACfrqB,OAAQ,OACR6rB,QAAS,EACTxvB,UAAW,KAEb,GAAmBwM,YAAc,CAC/BhL,YAAc7rB,GAAkB,YAATA,EACvB+rB,WAAa/rB,GAAkB,YAATA,GAExB,GAAmB8oB,UAAY,CAC7BkV,YAAa,EACb14B,QAAS,CACPg2C,OAAQ,CACN14C,OAAQ,CACN,eAAeT,GACb,MAAMlB,EAAOkB,EAAMlB,KACnB,GAAIA,EAAK2B,OAAOuB,QAAUlD,EAAK4B,SAASsB,OAAQ,CAC9C,MAAOvB,QAAQ,WAACkrB,IAAe3rB,EAAMm5C,OAAOx3C,QAC5C,OAAO7C,EAAK2B,OAAOM,IAAI,CAACe,EAAOqF,KAC7B,MAAMqL,EAAOxS,EAAMmsC,eAAe,GAC5BjnC,EAAQsN,EAAKs2B,WAAWpP,SAASvyB,GACvC,MAAO,CACL6mB,KAAMlsB,EACNgtB,UAAW5pB,EAAMiiB,gBACjBoH,YAAarpB,EAAMkiB,YACnBoH,UAAWtpB,EAAMwnB,YACjBf,WAAYA,EACZwe,QAASnqC,EAAMk1C,kBAAkB/tC,GACjCjF,MAAOiF,KAIb,MAAO,KAGX,QAAQsD,EAAG2uC,EAAYD,GACrBA,EAAOn5C,MAAMq5C,qBAAqBD,EAAWl3C,OAC7Ci3C,EAAOn5C,MAAMC,WAGjBi3C,QAAS,CACPhV,UAAW,CACT,QACE,MAAO,IAET,MAAMoX,GACJ,IAAIC,EAAYD,EAAYx3C,MAC5B,MAAM/D,EAAQ,KAAOu7C,EAAYE,eAOjC,OANI7zC,EAAQ4zC,IACVA,EAAYA,EAAUxzC,QACtBwzC,EAAU,IAAMx7C,GAEhBw7C,GAAax7C,EAERw7C,OAOjB,MAAM,WAAuB,GAC3B,aACEh8C,KAAKutC,qBAAsB,EAC3BvtC,KAAKwtC,oBAAqB,EAC1B6I,MAAM1I,aAER,OAAO9iB,GACL,MAAM5V,EAAOjV,KAAKwrC,aACX5nC,QAASktB,EAAMvvB,KAAM2T,EAAS,GAAE,SAAEgnC,GAAYjnC,EAC/CE,EAAqBnV,KAAKyC,MAAMmvC,oBACtC,IAAI,MAAC7gC,EAAK,MAAEsE,GAASL,GAAiCC,EAAMC,EAAQC,GACpEnV,KAAKqtC,WAAat8B,EAClB/Q,KAAKstC,WAAaj4B,EACdS,GAAoBb,KACtBlE,EAAQ,EACRsE,EAAQH,EAAOzQ,QAEjBqsB,EAAKhrB,OAAS9F,KAAKyC,MACnBquB,EAAK0S,cAAgBxjC,KAAK2E,MAC1BmsB,EAAKqrB,aAAeD,EAASC,WAC7BrrB,EAAK5b,OAASA,EACd,MAAM9Q,EAAUpE,KAAK+wC,6BAA6BlmB,GAC7C7qB,KAAKoE,QAAQmnB,WAChBnnB,EAAQ+qB,YAAc,GAExB/qB,EAAQu9B,QAAU3hC,KAAKoE,QAAQu9B,QAC/B3hC,KAAKi3C,cAAcnmB,OAAMzuB,EAAW,CAClC+5C,UAAWjnC,EACX/Q,WACCymB,GACH7qB,KAAK2yC,eAAez9B,EAAQnE,EAAOsE,EAAOwV,GAE5C,eAAe3V,EAAQnE,EAAOsE,EAAOwV,GACnC,MAAM0rB,EAAiB,UAAT1rB,GACR,OAACtV,EAAM,OAAE41B,EAAM,SAAE0B,EAAQ,SAAEqP,GAAYl8C,KAAKwrC,aAC5C,cAACmG,EAAa,eAAEK,GAAkBhyC,KAAK02C,kBAAkB3lC,EAAO8Z,GAChE6gB,EAAQn2B,EAAOE,KACfk2B,EAAQR,EAAO11B,MACf,SAAC0lB,EAAQ,QAAEwG,GAAW3hC,KAAKoE,QAC3Bi4C,EAAevtC,EAASqsB,GAAYA,EAAW31B,OAAOgI,kBACtD8uC,EAAet8C,KAAKyC,MAAMmvC,qBAAuB2E,GAAkB,SAAT1rB,EAChE,IAAI0xB,EAAaxrC,EAAQ,GAAK/Q,KAAK0wC,UAAU3/B,EAAQ,GACrD,IAAK,IAAInH,EAAImH,EAAOnH,EAAImH,EAAQsE,IAASzL,EAAG,CAC1C,MAAM0lB,EAAQpa,EAAOtL,GACf2uB,EAASv4B,KAAK0wC,UAAU9mC,GACxBm+B,EAAauU,EAAehtB,EAAQ,GACpCktB,EAAWr0C,EAAcowB,EAAOoT,IAChCrR,EAASyN,EAAW2D,GAASn2B,EAAOM,iBAAiB0iB,EAAOmT,GAAQ9hC,GACpE2wB,EAASwN,EAAW4D,GAAS4K,GAASiG,EAAWrR,EAAOqL,eAAiBrL,EAAOt1B,iBAAiBg3B,EAAW7sC,KAAKgqC,WAAWmB,EAAQ5S,EAAQsU,GAAYtU,EAAOoT,GAAQ/hC,GAC7Km+B,EAAWpP,KAAO3pB,MAAMsrB,IAAWtrB,MAAMurB,IAAWiiB,EACpDzU,EAAWlF,KAAOj5B,EAAI,GAAMwD,KAAK8B,IAAIqpB,EAAOmT,GAAS6Q,EAAW7Q,IAAW2Q,EACvE1a,IACFoG,EAAWxP,OAASA,EACpBwP,EAAWqE,IAAM8P,EAAS36C,KAAKqI,IAE7BooC,IACFjK,EAAW3jC,QAAUutC,GAAiB3xC,KAAKgxC,0BAA0BpnC,EAAG0lB,EAAM0Y,OAAS,SAAWnd,IAE/FyxB,GACHt8C,KAAKi3C,cAAc3nB,EAAO1lB,EAAGm+B,EAAYld,GAE3C0xB,EAAahkB,GAGjB,iBACE,MAAMtjB,EAAOjV,KAAKwrC,YACZ5nC,EAAUqR,EAAKrR,QACf64C,EAAS74C,EAAQQ,SAAWR,EAAQQ,QAAQ+qB,aAAe,EAC3D5tB,EAAO0T,EAAK1T,MAAQ,GAC1B,IAAKA,EAAKkD,OACR,OAAOg4C,EAET,MAAM3jB,EAAav3B,EAAK,GAAGuL,KAAK9M,KAAKgxC,0BAA0B,IACzD0L,EAAYn7C,EAAKA,EAAKkD,OAAS,GAAGqI,KAAK9M,KAAKgxC,0BAA0BzvC,EAAKkD,OAAS,IAC1F,OAAO2I,KAAKqC,IAAIgtC,EAAQ3jB,EAAY4jB,GAAa,EAEnD,OACE,MAAMznC,EAAOjV,KAAKwrC,YAClBv2B,EAAKrR,QAAQ+4C,oBAAoB38C,KAAKyC,MAAMquC,UAAW77B,EAAKM,OAAOE,MACnE4gC,MAAM/Q,QAGV,GAAez9B,GAAK,OACpB,GAAeqkB,SAAW,CACxB8iB,mBAAoB,OACpBkC,gBAAiB,QACjB3lB,UAAU,EACV4P,UAAU,GAEZ,GAAe/R,UAAY,CACzBkC,OAAQ,CACNgtB,QAAS,CACPnzC,KAAM,YAERszC,QAAS,CACPtzC,KAAM,YAKZ,MAAM,WAA4B,GAChC,YAAY1C,EAAO2H,GACjBisC,MAAM5zC,EAAO2H,GACbpK,KAAK45C,iBAAcv3C,EACnBrC,KAAK65C,iBAAcx3C,EAErB,iBAAiBsC,GACf,MAAMsQ,EAAOjV,KAAKwrC,YACZ/oC,EAAQzC,KAAKyC,MACbS,EAAST,EAAMlB,KAAK2B,QAAU,GAC9B1C,EAAQ6/B,GAAaprB,EAAKO,QAAQ7Q,GAAOgW,EAAGlY,EAAM2B,QAAQy7B,QAChE,MAAO,CACLt7B,MAAOrB,EAAOyB,IAAU,GACxBnE,SAGJ,gBAAgByU,EAAM1T,EAAMwP,EAAOsE,GACjC,OAAOgjB,GAA4BukB,KAAK58C,KAAjCq4B,CAAuCpjB,EAAM1T,EAAMwP,EAAOsE,GAEnE,OAAOwV,GACL,MAAMqvB,EAAOl6C,KAAKwrC,YAAYjqC,KAC9BvB,KAAK68C,gBACL78C,KAAK2yC,eAAeuH,EAAM,EAAGA,EAAKz1C,OAAQomB,GAE5C,YACE,MAAM5V,EAAOjV,KAAKwrC,YACZx9B,EAAQ,CAACwB,IAAKhK,OAAOgI,kBAAmBiC,IAAKjK,OAAOolC,mBAY1D,OAXA31B,EAAK1T,KAAKsR,QAAQ,CAACqpB,EAASv3B,KAC1B,MAAM4zB,EAASv4B,KAAK0wC,UAAU/rC,GAAOgW,GAChC3L,MAAMupB,IAAWv4B,KAAKyC,MAAMk1C,kBAAkBhzC,KAC7C4zB,EAASvqB,EAAMwB,MACjBxB,EAAMwB,IAAM+oB,GAEVA,EAASvqB,EAAMyB,MACjBzB,EAAMyB,IAAM8oB,MAIXvqB,EAET,gBACE,MAAMvL,EAAQzC,KAAKyC,MACbquC,EAAYruC,EAAMquC,UAClBpgB,EAAOjuB,EAAM2B,QACb04C,EAAU1vC,KAAKoC,IAAIshC,EAAUj8B,MAAQi8B,EAAUl8B,KAAMk8B,EAAUphB,OAASohB,EAAUrhB,KAClFoqB,EAAczsC,KAAKqC,IAAIqtC,EAAU,EAAG,GACpClD,EAAcxsC,KAAKqC,IAAIihB,EAAKqsB,iBAAoBlD,EAAc,IAAQnpB,EAAqB,iBAAI,EAAG,GAClGiqB,GAAgBd,EAAcD,GAAen3C,EAAMu6C,yBACzDh9C,KAAK65C,YAAcA,EAAec,EAAe36C,KAAK2E,MACtD3E,KAAK45C,YAAc55C,KAAK65C,YAAcc,EAExC,eAAeT,EAAMnpC,EAAOsE,EAAOwV,GACjC,MAAM0rB,EAAiB,UAAT1rB,EACRpoB,EAAQzC,KAAKyC,MACbiuB,EAAOjuB,EAAM2B,QACb82C,EAAgBxqB,EAAK/G,UACrB0B,EAAQrrB,KAAKwrC,YAAYmD,OACzBwM,EAAU9vB,EAAM4xB,QAChB7B,EAAU/vB,EAAM6xB,QAChBC,EAAoB9xB,EAAM+xB,cAAc,GAAK,GAAMjwC,EACzD,IACIvD,EADA0G,EAAQ6sC,EAEZ,MAAME,EAAe,IAAMr9C,KAAKs9C,uBAChC,IAAK1zC,EAAI,EAAGA,EAAImH,IAASnH,EACvB0G,GAAStQ,KAAKu9C,cAAc3zC,EAAGihB,EAAMwyB,GAEvC,IAAKzzC,EAAImH,EAAOnH,EAAImH,EAAQsE,EAAOzL,IAAK,CACtC,MAAMglB,EAAMsrB,EAAKtwC,GACjB,IAAImvC,EAAazoC,EACb0oC,EAAW1oC,EAAQtQ,KAAKu9C,cAAc3zC,EAAGihB,EAAMwyB,GAC/CxD,EAAcp3C,EAAMk1C,kBAAkB/tC,GAAKyhB,EAAMmyB,8BAA8Bx9C,KAAK0wC,UAAU9mC,GAAG+Q,GAAK,EAC1GrK,EAAQ0oC,EACJzC,IACE2E,EAAcG,eAChBxB,EAAc,GAEZqB,EAAcF,gBAChBjC,EAAaC,EAAWmE,IAG5B,MAAMpV,EAAa,CACjBt8B,EAAG0vC,EACHxvC,EAAGyvC,EACHxB,YAAa,EACbC,cACAd,aACAC,WACA50C,QAASpE,KAAKgxC,0BAA0BpnC,EAAGglB,EAAIoZ,OAAS,SAAWnd,IAErE7qB,KAAKi3C,cAAcroB,EAAKhlB,EAAGm+B,EAAYld,IAG3C,uBACE,MAAM5V,EAAOjV,KAAKwrC,YAClB,IAAIn2B,EAAQ,EAMZ,OALAJ,EAAK1T,KAAKsR,QAAQ,CAACqpB,EAASv3B,MACrBqK,MAAMhP,KAAK0wC,UAAU/rC,GAAOgW,IAAM3a,KAAKyC,MAAMk1C,kBAAkBhzC,IAClE0Q,MAGGA,EAET,cAAc1Q,EAAOkmB,EAAMwyB,GACzB,OAAOr9C,KAAKyC,MAAMk1C,kBAAkBhzC,GAChC+K,EAAU1P,KAAKgxC,0BAA0BrsC,EAAOkmB,GAAMva,OAAS+sC,GAC/D,GAGR,GAAoBx1C,GAAK,YACzB,GAAoBqkB,SAAW,CAC7BglB,gBAAiB,MACjBvnB,UAAW,CACTqxB,eAAe,EACfK,cAAc,GAEhBlT,WAAY,CACVN,QAAS,CACP1iC,KAAM,SACN4iC,WAAY,CAAC,IAAK,IAAK,aAAc,WAAY,cAAe,iBAGpEpd,UAAW,IACXouB,WAAY,GAEd,GAAoB3vB,UAAY,CAC9BkV,YAAa,EACb14B,QAAS,CACPg2C,OAAQ,CACN14C,OAAQ,CACN,eAAeT,GACb,MAAMlB,EAAOkB,EAAMlB,KACnB,GAAIA,EAAK2B,OAAOuB,QAAUlD,EAAK4B,SAASsB,OAAQ,CAC9C,MAAOvB,QAAQ,WAACkrB,IAAe3rB,EAAMm5C,OAAOx3C,QAC5C,OAAO7C,EAAK2B,OAAOM,IAAI,CAACe,EAAOqF,KAC7B,MAAMqL,EAAOxS,EAAMmsC,eAAe,GAC5BjnC,EAAQsN,EAAKs2B,WAAWpP,SAASvyB,GACvC,MAAO,CACL6mB,KAAMlsB,EACNgtB,UAAW5pB,EAAMiiB,gBACjBoH,YAAarpB,EAAMkiB,YACnBoH,UAAWtpB,EAAMwnB,YACjBf,WAAYA,EACZwe,QAASnqC,EAAMk1C,kBAAkB/tC,GACjCjF,MAAOiF,KAIb,MAAO,KAGX,QAAQsD,EAAG2uC,EAAYD,GACrBA,EAAOn5C,MAAMq5C,qBAAqBD,EAAWl3C,OAC7Ci3C,EAAOn5C,MAAMC,WAGjBi3C,QAAS,CACPhV,UAAW,CACT,QACE,MAAO,IAET,MAAMviC,GACJ,OAAOA,EAAQK,MAAMlB,KAAK2B,OAAOd,EAAQ+pC,WAAa,KAAO/pC,EAAQ65C,mBAK7E3wB,OAAQ,CACN3Q,EAAG,CACDxV,KAAM,eACNs4C,WAAY,CACVC,SAAS,GAEXzpB,aAAa,EACbukB,KAAM,CACJmF,UAAU,GAEZC,YAAa,CACXF,SAAS,GAEX3E,WAAY,KAKlB,MAAM8E,WAAsB,IAE5BA,GAAch2C,GAAK,MACnBg2C,GAAc3xB,SAAW,CACvB0sB,OAAQ,EACRvqB,SAAU,EACVsqB,cAAe,IACfrqB,OAAQ,QAGV,MAAM,WAAwB,GAC5B,iBAAiB3pB,GACf,MAAMwmC,EAASnrC,KAAKwrC,YAAYL,OAC1B5S,EAASv4B,KAAK0wC,UAAU/rC,GAC9B,MAAO,CACLJ,MAAO4mC,EAAO2E,YAAYnrC,GAC1BnE,MAAO,GAAK2qC,EAAOwF,iBAAiBpY,EAAO4S,EAAO11B,QAGtD,gBAAgBR,EAAM1T,EAAMwP,EAAOsE,GACjC,OAAOgjB,GAA4BukB,KAAK58C,KAAjCq4B,CAAuCpjB,EAAM1T,EAAMwP,EAAOsE,GAEnE,OAAOwV,GACL,MAAM5V,EAAOjV,KAAKwrC,YACZ1a,EAAO7b,EAAKrR,QACZsR,EAASD,EAAK1T,MAAQ,GACtB2B,EAAS+R,EAAKM,OAAOu6B,YAE3B,GADAhf,EAAK5b,OAASA,EACD,WAAT2V,EAAmB,CACrB,MAAMzmB,EAAUpE,KAAK+wC,6BAA6BlmB,GAC7C7qB,KAAKoE,QAAQmnB,WAChBnnB,EAAQ+qB,YAAc,GAExB,MAAM4Y,EAAa,CACjB/E,OAAO,EACPG,UAAWjgC,EAAOuB,SAAWyQ,EAAOzQ,OACpCL,WAEFpE,KAAKi3C,cAAcnmB,OAAMzuB,EAAW0lC,EAAYld,GAElD7qB,KAAK2yC,eAAez9B,EAAQ,EAAGA,EAAOzQ,OAAQomB,GAEhD,eAAe3V,EAAQnE,EAAOsE,EAAOwV,GACnC,MAAMQ,EAAQrrB,KAAKwrC,YAAYmD,OACzB4H,EAAiB,UAAT1rB,EACd,IAAK,IAAIjhB,EAAImH,EAAOnH,EAAImH,EAAQsE,EAAOzL,IAAK,CAC1C,MAAM0lB,EAAQpa,EAAOtL,GACfxF,EAAUpE,KAAKgxC,0BAA0BpnC,EAAG0lB,EAAM0Y,OAAS,SAAWnd,GACtEizB,EAAgBzyB,EAAM0yB,yBAAyBn0C,EAAG5J,KAAK0wC,UAAU9mC,GAAG+Q,GACpElP,EAAI8qC,EAAQlrB,EAAM4xB,QAAUa,EAAcryC,EAC1CE,EAAI4qC,EAAQlrB,EAAM6xB,QAAUY,EAAcnyC,EAC1Co8B,EAAa,CACjBt8B,IACAE,IACA2E,MAAOwtC,EAAcxtC,MACrBqoB,KAAM3pB,MAAMvD,IAAMuD,MAAMrD,GACxBvH,WAEFpE,KAAKi3C,cAAc3nB,EAAO1lB,EAAGm+B,EAAYld,KAI/C,GAAgBhjB,GAAK,QACrB,GAAgBqkB,SAAW,CACzB8iB,mBAAoB,OACpBkC,gBAAiB,QACjBvmB,UAAW,IACXY,UAAU,EACVtB,SAAU,CACR6G,KAAM,CACJ5B,KAAM,WAIZ,GAAgB9F,UAAY,CAC1BkV,YAAa,EACbhT,OAAQ,CACN3Q,EAAG,CACDxV,KAAM,kBAKZ,MAAM,GACJ,cACEnF,KAAKyL,OAAIpJ,EACTrC,KAAK2L,OAAItJ,EACTrC,KAAKgoC,QAAS,EACdhoC,KAAKoE,aAAU/B,EACfrC,KAAKipC,iBAAc5mC,EAErB,gBAAgB27C,GACd,MAAM,EAACvyC,EAAC,EAAEE,GAAK3L,KAAKi+C,SAAS,CAAC,IAAK,KAAMD,GACzC,MAAO,CAACvyC,IAAGE,KAEb,WACE,OAAOmD,EAAS9O,KAAKyL,IAAMqD,EAAS9O,KAAK2L,GAE3C,SAASrK,EAAO48C,GACd,MAAMzZ,EAAQzkC,KAAKipC,YACnB,IAAKiV,IAAUzZ,EACb,OAAOzkC,KAET,MAAM8a,EAAM,GAIZ,OAHAxZ,EAAMuR,QAAQqgB,IACZpY,EAAIoY,GAAQuR,EAAMvR,IAASuR,EAAMvR,GAAM8U,SAAWvD,EAAMvR,GAAMmU,IAAMrnC,KAAKkzB,KAEpEpY,GAGX,GAAQoR,SAAW,GACnB,GAAQiyB,mBAAgB97C,EAExB,MAAM+7C,GAAa,CACjB,OAAO59C,GACL,OAAO4H,EAAQ5H,GAASA,EAAQ,GAAKA,GAEvC,QAAQ69C,EAAW15C,EAAOgvC,GACxB,GAAkB,IAAd0K,EACF,MAAO,IAET,MAAMxe,EAAS7/B,KAAKyC,MAAM2B,QAAQy7B,OAClC,IAAIye,EACAlkB,EAAQikB,EACZ,GAAI1K,EAAMlvC,OAAS,EAAG,CACpB,MAAM85C,EAAUnxC,KAAKqC,IAAIrC,KAAK8B,IAAIykC,EAAM,GAAGnzC,OAAQ4M,KAAK8B,IAAIykC,EAAMA,EAAMlvC,OAAS,GAAGjE,SAChF+9C,EAAU,MAAQA,EAAU,QAC9BD,EAAW,cAEblkB,EAAQokB,GAAeH,EAAW1K,GAEpC,MAAM8K,EAAW5wC,EAAMT,KAAK8B,IAAIkrB,IAC1BskB,EAAatxC,KAAKqC,IAAIrC,KAAKoC,KAAK,EAAIpC,KAAKkB,MAAMmwC,GAAW,IAAK,GAC/Dr6C,EAAU,CAACk6C,WAAUK,sBAAuBD,EAAYE,sBAAuBF,GAErF,OADA36C,OAAOC,OAAOI,EAASpE,KAAKoE,QAAQuvC,MAAMpT,QACnCF,GAAage,EAAWxe,EAAQz7B,IAEzC,YAAYi6C,EAAW15C,EAAOgvC,GAC5B,GAAkB,IAAd0K,EACF,MAAO,IAET,MAAM7W,EAAS6W,EAAajxC,KAAKiB,IAAI,GAAIjB,KAAKkB,MAAMT,EAAMwwC,KAC1D,OAAe,IAAX7W,GAA2B,IAAXA,GAA2B,IAAXA,EAC3B4W,GAAWS,QAAQt2C,KAAKvI,KAAMq+C,EAAW15C,EAAOgvC,GAElD,KAGX,SAAS6K,GAAeH,EAAW1K,GACjC,IAAIvZ,EAAQuZ,EAAMlvC,OAAS,EAAIkvC,EAAM,GAAGnzC,MAAQmzC,EAAM,GAAGnzC,MAAQmzC,EAAM,GAAGnzC,MAAQmzC,EAAM,GAAGnzC,MAI3F,OAHI4M,KAAK8B,IAAIkrB,IAAU,GAAKikB,IAAcjxC,KAAKkB,MAAM+vC,KACnDjkB,EAAQikB,EAAYjxC,KAAKkB,MAAM+vC,IAE1BjkB,EAET,IAAI0kB,GAAQ,CAACV,eAqEb,SAASW,GAAS1zB,EAAOsoB,GACvB,MAAMqL,EAAW3zB,EAAMjnB,QAAQuvC,MACzBsL,EAAaD,EAASE,eAAiBC,GAAkB9zB,GACzD+zB,EAAeJ,EAASK,MAAMC,QAAUC,GAAgB5L,GAAS,GACjE6L,EAAkBJ,EAAa36C,OAC/Bg7C,EAAQL,EAAa,GACrBntC,EAAOmtC,EAAaI,EAAkB,GACtCE,EAAW,GACjB,GAAIF,EAAkBP,EAEpB,OADAU,GAAWhM,EAAO+L,EAAUN,EAAcI,EAAkBP,GACrDS,EAET,MAAMvF,EAAUyF,GAAiBR,EAAczL,EAAOsL,GACtD,GAAIO,EAAkB,EAAG,CACvB,IAAI51C,EAAGK,EACP,MAAM41C,EAAkBL,EAAkB,EAAIpyC,KAAKc,OAAO+D,EAAOwtC,IAAUD,EAAkB,IAAM,KAEnG,IADA,GAAK7L,EAAO+L,EAAUvF,EAAShyC,EAAc03C,GAAmB,EAAIJ,EAAQI,EAAiBJ,GACxF71C,EAAI,EAAGK,EAAOu1C,EAAkB,EAAG51C,EAAIK,EAAML,IAChD,GAAK+pC,EAAO+L,EAAUvF,EAASiF,EAAax1C,GAAIw1C,EAAax1C,EAAI,IAGnE,OADA,GAAK+pC,EAAO+L,EAAUvF,EAASloC,EAAM9J,EAAc03C,GAAmBlM,EAAMlvC,OAASwN,EAAO4tC,GACrFH,EAGT,OADA,GAAK/L,EAAO+L,EAAUvF,GACfuF,EAET,SAASP,GAAkB9zB,GACzB,MAAMktB,EAASltB,EAAMjnB,QAAQm0C,OACvBuH,EAAaz0B,EAAM00B,YACnBC,EAAW30B,EAAMooB,QAAUqM,GAAcvH,EAAS,EAAI,GACtD0H,EAAW50B,EAAM60B,WAAaJ,EACpC,OAAO1yC,KAAKkB,MAAMlB,KAAKoC,IAAIwwC,EAAUC,IAEvC,SAASL,GAAiBR,EAAczL,EAAOsL,GAC7C,MAAMkB,EAAmBC,GAAehB,GAClCjF,EAAUxG,EAAMlvC,OAASw6C,EAC/B,IAAKkB,EACH,OAAO/yC,KAAKqC,IAAI0qC,EAAS,GAE3B,MAAMkG,EAAU5xC,EAAW0xC,GAC3B,IAAK,IAAIv2C,EAAI,EAAGK,EAAOo2C,EAAQ57C,OAAS,EAAGmF,EAAIK,EAAML,IAAK,CACxD,MAAM48B,EAAS6Z,EAAQz2C,GACvB,GAAI48B,EAAS2T,EACX,OAAO3T,EAGX,OAAOp5B,KAAKqC,IAAI0qC,EAAS,GAE3B,SAASoF,GAAgB5L,GACvB,MAAMjlC,EAAS,GACf,IAAI9E,EAAGK,EACP,IAAKL,EAAI,EAAGK,EAAO0pC,EAAMlvC,OAAQmF,EAAIK,EAAML,IACrC+pC,EAAM/pC,GAAGy1C,OACX3wC,EAAO5K,KAAK8F,GAGhB,OAAO8E,EAET,SAASixC,GAAWhM,EAAO+L,EAAUN,EAAcjF,GACjD,IAEIvwC,EAFAyL,EAAQ,EACR4jB,EAAOmmB,EAAa,GAGxB,IADAjF,EAAU/sC,KAAKkzC,KAAKnG,GACfvwC,EAAI,EAAGA,EAAI+pC,EAAMlvC,OAAQmF,IACxBA,IAAMqvB,IACRymB,EAAS57C,KAAK6vC,EAAM/pC,IACpByL,IACA4jB,EAAOmmB,EAAa/pC,EAAQ8kC,IAIlC,SAAS,GAAKxG,EAAO+L,EAAUvF,EAASoG,EAAYC,GAClD,MAAMzvC,EAAQjI,EAAey3C,EAAY,GACnCvvC,EAAM5D,KAAKoC,IAAI1G,EAAe03C,EAAU7M,EAAMlvC,QAASkvC,EAAMlvC,QACnE,IACIA,EAAQmF,EAAGqvB,EADX5jB,EAAQ,EAEZ8kC,EAAU/sC,KAAKkzC,KAAKnG,GAChBqG,IACF/7C,EAAS+7C,EAAWD,EACpBpG,EAAU11C,EAAS2I,KAAKkB,MAAM7J,EAAS01C,IAEzClhB,EAAOloB,EACP,MAAOkoB,EAAO,EACZ5jB,IACA4jB,EAAO7rB,KAAKc,MAAM6C,EAAQsE,EAAQ8kC,GAEpC,IAAKvwC,EAAIwD,KAAKqC,IAAIsB,EAAO,GAAInH,EAAIoH,EAAKpH,IAChCA,IAAMqvB,IACRymB,EAAS57C,KAAK6vC,EAAM/pC,IACpByL,IACA4jB,EAAO7rB,KAAKc,MAAM6C,EAAQsE,EAAQ8kC,IAIxC,SAASiG,GAAe3oB,GACtB,MAAM5tB,EAAM4tB,EAAIhzB,OAChB,IAAImF,EAAG62C,EACP,GAAI52C,EAAM,EACR,OAAO,EAET,IAAK42C,EAAOhpB,EAAI,GAAI7tB,EAAI,EAAGA,EAAIC,IAAOD,EACpC,GAAI6tB,EAAI7tB,GAAK6tB,EAAI7tB,EAAI,KAAO62C,EAC1B,OAAO,EAGX,OAAOA,EA5KTv0B,GAAS3Y,IAAI,QAAS,CACpBmqC,SAAS,EACTnF,QAAQ,EACR5uC,SAAS,EACTsqB,aAAa,EACb2N,OAAQ,QACR5N,MAAO,EACPwkB,KAAM,CACJkF,SAAS,EACTzsB,UAAW,EACXyvB,YAAY,EACZC,iBAAiB,EACjBC,WAAW,EACXd,WAAY,EACZe,UAAW,CAAC/T,EAAM1oC,IAAYA,EAAQ6sB,UACtC6vB,UAAW,CAAChU,EAAM1oC,IAAYA,EAAQokB,MACtC+vB,QAAQ,EACRrU,WAAY,GACZC,iBAAkB,EAClBhV,YAAa,GAEfluB,MAAO,CACLy8C,SAAS,EACTjtB,KAAM,GACNswB,QAAS,CACPtxB,IAAK,EACLC,OAAQ,IAGZikB,MAAO,CACLqN,YAAa,EACbC,YAAa,GACbC,QAAQ,EACRC,gBAAiB,EACjBC,gBAAiB,GACjBL,QAAS,EACTrD,SAAS,EACTqB,UAAU,EACVsC,gBAAiB,EACjBC,YAAa,EACbl4C,SAAU01C,GAAMV,WAAWhsC,OAC3BmvC,MAAO,GACPlC,MAAO,GACP5qC,MAAO,SACP+sC,WAAY,OACZC,mBAAmB,EACnBC,cAAe,4BACfC,gBAAiB,KAGrBz1B,GAAS01B,MAAM,cAAe,QAAS,GAAI,SAC3C11B,GAAS01B,MAAM,aAAc,QAAS,GAAI,eAC1C11B,GAAS01B,MAAM,aAAc,cAAe,GAAI,eAChD11B,GAAS01B,MAAM,cAAe,QAAS,GAAI,SAC3C11B,GAAST,SAAS,QAAS,CACzBa,WAAW,EACXH,YAAc7rB,IAAUA,EAAK8rB,WAAW,YAAc9rB,EAAK8rB,WAAW,UAAqB,aAAT9rB,GAAgC,WAATA,EACzG+rB,WAAa/rB,GAAkB,eAATA,GAAkC,mBAATA,IAEjD4rB,GAAST,SAAS,SAAU,CAC1Ba,UAAW,UAEbJ,GAAST,SAAS,cAAe,CAC/BU,YAAc7rB,GAAkB,oBAATA,GAAuC,aAATA,EACrD+rB,WAAa/rB,GAAkB,oBAATA,IA+GxB,MAAMuhD,GAAgBptC,GAAoB,SAAVA,EAAmB,QAAoB,UAAVA,EAAoB,OAASA,EACpFqtC,GAAiB,CAACz2B,EAAOoqB,EAAM8C,IAAoB,QAAT9C,GAA2B,SAATA,EAAkBpqB,EAAMoqB,GAAQ8C,EAASltB,EAAMoqB,GAAQ8C,EACzH,SAASwJ,GAAOtqB,EAAKuqB,GACnB,MAAMtzC,EAAS,GACTuzC,EAAYxqB,EAAIhzB,OAASu9C,EACzBn4C,EAAM4tB,EAAIhzB,OAChB,IAAImF,EAAI,EACR,KAAOA,EAAIC,EAAKD,GAAKq4C,EACnBvzC,EAAO5K,KAAK2zB,EAAIrqB,KAAKkB,MAAM1E,KAE7B,OAAO8E,EAET,SAASwzC,GAAoB72B,EAAO1mB,EAAOw9C,GACzC,MAAM19C,EAAS4mB,EAAMsoB,MAAMlvC,OACrB29C,EAAah1C,KAAKoC,IAAI7K,EAAOF,EAAS,GACtCsM,EAAQsa,EAAMgsB,YACdrmC,EAAMqa,EAAMisB,UACZroC,EAAU,KAChB,IACIspC,EADA8J,EAAYh3B,EAAMuoB,gBAAgBwO,GAEtC,KAAID,IAEA5J,EADa,IAAX9zC,EACO2I,KAAKqC,IAAI4yC,EAAYtxC,EAAOC,EAAMqxC,GACxB,IAAV19C,GACC0mB,EAAMuoB,gBAAgB,GAAKyO,GAAa,GAExCA,EAAYh3B,EAAMuoB,gBAAgBwO,EAAa,IAAM,EAEjEC,GAAaD,EAAaz9C,EAAQ4zC,GAAUA,EACxC8J,EAAYtxC,EAAQ9B,GAAWozC,EAAYrxC,EAAM/B,IAIvD,OAAOozC,EAET,SAASp1B,GAAeq1B,EAAQ79C,GAC9BgF,EAAK64C,EAASt1B,IACZ,MAAMP,EAAKO,EAAMP,GACXc,EAAQd,EAAGhoB,OAAS,EAC1B,IAAImF,EACJ,GAAI2jB,EAAQ9oB,EAAQ,CAClB,IAAKmF,EAAI,EAAGA,EAAI2jB,IAAS3jB,SAChBojB,EAAMzrB,KAAKkrB,EAAG7iB,IAEvB6iB,EAAGrZ,OAAO,EAAGma,MAInB,SAASg1B,GAAkBn+C,GACzB,OAAOA,EAAQw8C,UAAYx8C,EAAQ07C,WAAa,EAElD,SAAS0C,GAAep+C,EAASmvB,GAC/B,IAAKnvB,EAAQs5C,QACX,OAAO,EAET,MAAMvzB,EAAOmJ,GAAOlvB,EAAQ+lB,KAAMoJ,GAC5BwtB,EAAU1tB,GAAUjvB,EAAQ28C,SAC5BpwB,EAAQvoB,EAAQhE,EAAQqsB,MAAQrsB,EAAQqsB,KAAKhsB,OAAS,EAC5D,OAAQksB,EAAQxG,EAAKE,WAAc02B,EAAQt7C,OAE7C,SAASg9C,GAAmB5qB,EAAQxM,GAClC,OAAO+I,GAAcyD,EAAQ,CAC3BxM,QACAlmB,KAAM,UAGV,SAASu9C,GAAkB7qB,EAAQlzB,EAAO8gC,GACxC,OAAOrR,GAAcyD,EAAQ,CAC3B4N,OACA9gC,QACAQ,KAAM,SAGV,SAASw9C,GAAWluC,EAAOmuC,EAAUj5C,GACnC,IAAImR,EAAMtG,GAAmBC,GAI7B,OAHK9K,GAAwB,UAAbi5C,IAA2Bj5C,GAAwB,UAAbi5C,KACpD9nC,EAAM+mC,GAAa/mC,IAEdA,EAET,SAAS+nC,GAAUx3B,EAAOktB,EAAQqK,EAAUnuC,GAC1C,MAAM,IAACgb,EAAG,KAAE7a,EAAI,OAAE8a,EAAM,MAAE7a,EAAK,MAAEpS,GAAS4oB,GACpC,UAACylB,EAAS,OAAExlB,GAAU7oB,EAC5B,IACI0uB,EAAU2xB,EAAQC,EADlB10B,EAAW,EAEf,MAAM5oB,EAASiqB,EAASD,EAClBlqB,EAAQsP,EAAQD,EACtB,GAAIyW,EAAMgqB,eAAgB,CAExB,GADAyN,EAASpuC,GAAeD,EAAOG,EAAMC,GACjCpM,EAASm6C,GAAW,CACtB,MAAMI,EAAiBj/C,OAAOsD,KAAKu7C,GAAU,GACvCpiD,EAAQoiD,EAASI,GACvBD,EAASz3B,EAAO03B,GAAgBntC,iBAAiBrV,GAASiF,EAAS8yC,OAEnEwK,EADsB,WAAbH,GACC9R,EAAUphB,OAASohB,EAAUrhB,KAAO,EAAIhqB,EAAS8yC,EAElDuJ,GAAez2B,EAAOu3B,EAAUrK,GAE3CpnB,EAAWtc,EAAQD,MACd,CACL,GAAInM,EAASm6C,GAAW,CACtB,MAAMI,EAAiBj/C,OAAOsD,KAAKu7C,GAAU,GACvCpiD,EAAQoiD,EAASI,GACvBF,EAASx3B,EAAO03B,GAAgBntC,iBAAiBrV,GAAS+E,EAAQgzC,OAElEuK,EADsB,WAAbF,GACC9R,EAAUl8B,KAAOk8B,EAAUj8B,OAAS,EAAItP,EAAQgzC,EAEjDuJ,GAAez2B,EAAOu3B,EAAUrK,GAE3CwK,EAASruC,GAAeD,EAAOib,EAAQD,GACvCpB,EAAwB,SAAbu0B,GAAuBl1C,EAAUA,EAE9C,MAAO,CAACo1C,SAAQC,SAAQ5xB,WAAU9C,YAEpC,MAAM,WAAc,GAClB,YAAYuY,GACVyP,QACAr2C,KAAK6H,GAAK++B,EAAI/+B,GACd7H,KAAKmF,KAAOyhC,EAAIzhC,KAChBnF,KAAKoE,aAAU/B,EACfrC,KAAKwqB,IAAMoc,EAAIpc,IACfxqB,KAAKyC,MAAQmkC,EAAInkC,MACjBzC,KAAKyvB,SAAMptB,EACXrC,KAAK0vB,YAASrtB,EACdrC,KAAK4U,UAAOvS,EACZrC,KAAK6U,WAAQxS,EACbrC,KAAKuF,WAAQlD,EACbrC,KAAKyF,YAASpD,EACdrC,KAAKijD,SAAW,CACdruC,KAAM,EACNC,MAAO,EACP4a,IAAK,EACLC,OAAQ,GAEV1vB,KAAKmxB,cAAW9uB,EAChBrC,KAAK29B,eAAYt7B,EACjBrC,KAAKkjD,gBAAa7gD,EAClBrC,KAAKmjD,mBAAgB9gD,EACrBrC,KAAKojD,iBAAc/gD,EACnBrC,KAAKqjD,kBAAehhD,EACpBrC,KAAKyV,UAAOpT,EACZrC,KAAKsjD,mBAAgBjhD,EACrBrC,KAAKwP,SAAMnN,EACXrC,KAAKyP,SAAMpN,EACXrC,KAAKujD,YAASlhD,EACdrC,KAAK2zC,MAAQ,GACb3zC,KAAKwjD,eAAiB,KACtBxjD,KAAKyjD,YAAc,KACnBzjD,KAAK0jD,YAAc,KACnB1jD,KAAKyzC,QAAU,EACfzzC,KAAKkgD,WAAa,EAClBlgD,KAAK2jD,kBAAoB,GACzB3jD,KAAKq3C,iBAAch1C,EACnBrC,KAAKs3C,eAAYj1C,EACjBrC,KAAK4jD,gBAAiB,EACtB5jD,KAAK6jD,cAAWxhD,EAChBrC,KAAK8jD,cAAWzhD,EAChBrC,KAAK+jD,mBAAgB1hD,EACrBrC,KAAKgkD,mBAAgB3hD,EACrBrC,KAAKikD,aAAe,EACpBjkD,KAAKkkD,aAAe,EACpBlkD,KAAKkzC,OAAS,GACdlzC,KAAKmkD,mBAAoB,EACzBnkD,KAAKytC,cAAWprC,EAElB,KAAK+B,GACHpE,KAAKoE,QAAUA,EAAQiyB,WAAWr2B,KAAKmH,cACvCnH,KAAKyV,KAAOrR,EAAQqR,KACpBzV,KAAK8jD,SAAW9jD,KAAKw4B,MAAMp0B,EAAQoL,KACnCxP,KAAK6jD,SAAW7jD,KAAKw4B,MAAMp0B,EAAQqL,KACnCzP,KAAKgkD,cAAgBhkD,KAAKw4B,MAAMp0B,EAAQggD,cACxCpkD,KAAK+jD,cAAgB/jD,KAAKw4B,MAAMp0B,EAAQigD,cAE1C,MAAMjY,EAAKznC,GACT,OAAOynC,EAET,gBACE,IAAI,SAAC0X,EAAQ,SAAED,EAAQ,cAAEG,EAAa,cAAED,GAAiB/jD,KAKzD,OAJA8jD,EAAWl7C,EAAgBk7C,EAAUt+C,OAAOgI,mBAC5Cq2C,EAAWj7C,EAAgBi7C,EAAUr+C,OAAOolC,mBAC5CoZ,EAAgBp7C,EAAgBo7C,EAAex+C,OAAOgI,mBACtDu2C,EAAgBn7C,EAAgBm7C,EAAev+C,OAAOolC,mBAC/C,CACLp7B,IAAK5G,EAAgBk7C,EAAUE,GAC/Bv0C,IAAK7G,EAAgBi7C,EAAUE,GAC/BruC,WAAYhN,EAAeo7C,GAC3BnuC,WAAYjN,EAAem7C,IAG/B,UAAUlX,GACR,IACI3+B,GADA,IAACwB,EAAG,IAAEC,EAAG,WAAEiG,EAAU,WAAEC,GAAc3V,KAAK4V,gBAE9C,GAAIF,GAAcC,EAChB,MAAO,CAACnG,MAAKC,OAEf,MAAM60C,EAAQtkD,KAAKqrC,0BACnB,IAAK,IAAIzhC,EAAI,EAAGK,EAAOq6C,EAAM7/C,OAAQmF,EAAIK,IAAQL,EAC/CoE,EAAQs2C,EAAM16C,GAAG2hC,WAAWgZ,UAAUvkD,KAAM2sC,GACvCj3B,IACHlG,EAAMpC,KAAKoC,IAAIA,EAAKxB,EAAMwB,MAEvBmG,IACHlG,EAAMrC,KAAKqC,IAAIA,EAAKzB,EAAMyB,MAK9B,OAFAD,EAAMmG,GAAcnG,EAAMC,EAAMA,EAAMD,EACtCC,EAAMiG,GAAclG,EAAMC,EAAMD,EAAMC,EAC/B,CACLD,IAAK5G,EAAgB4G,EAAK5G,EAAgB6G,EAAKD,IAC/CC,IAAK7G,EAAgB6G,EAAK7G,EAAgB4G,EAAKC,KAGnD,aACE,MAAO,CACLmF,KAAM5U,KAAKojD,aAAe,EAC1B3zB,IAAKzvB,KAAKkjD,YAAc,EACxBruC,MAAO7U,KAAKqjD,cAAgB,EAC5B3zB,OAAQ1vB,KAAKmjD,eAAiB,GAGlC,WACE,OAAOnjD,KAAK2zC,MAEd,YACE,MAAMpyC,EAAOvB,KAAKyC,MAAMlB,KACxB,OAAOvB,KAAKoE,QAAQlB,SAAWlD,KAAKq1C,eAAiB9zC,EAAKijD,QAAUjjD,EAAKkjD,UAAYljD,EAAK2B,QAAU,GAEtG,eACElD,KAAKkzC,OAAS,GACdlzC,KAAKmkD,mBAAoB,EAE3B,eACE/6C,EAASpJ,KAAKoE,QAAQsgD,aAAc,CAAC1kD,OAEvC,OAAOmxB,EAAUwM,EAAWY,GAC1B,MAAM,YAACtK,EAAW,MAAED,EAAO2f,MAAOqL,GAAYh/C,KAAKoE,QAC7CugD,EAAa3F,EAAS2F,WAC5B3kD,KAAK0kD,eACL1kD,KAAKmxB,SAAWA,EAChBnxB,KAAK29B,UAAYA,EACjB39B,KAAKijD,SAAW1kB,EAAUx6B,OAAOC,OAAO,CACtC4Q,KAAM,EACNC,MAAO,EACP4a,IAAK,EACLC,OAAQ,GACP6O,GACHv+B,KAAK2zC,MAAQ,KACb3zC,KAAK0jD,YAAc,KACnB1jD,KAAKwjD,eAAiB,KACtBxjD,KAAKyjD,YAAc,KACnBzjD,KAAK4kD,sBACL5kD,KAAK6kD,gBACL7kD,KAAK8kD,qBACL9kD,KAAKkgD,WAAalgD,KAAKq1C,eACnBr1C,KAAKuF,MAAQg5B,EAAQ3pB,KAAO2pB,EAAQ1pB,MACpC7U,KAAKyF,OAAS84B,EAAQ9O,IAAM8O,EAAQ7O,OACnC1vB,KAAKmkD,oBACRnkD,KAAK+kD,mBACL/kD,KAAKglD,sBACLhlD,KAAKilD,kBACLjlD,KAAKujD,OAASzvB,GAAU9zB,KAAMg0B,EAAOC,GACrCj0B,KAAKmkD,mBAAoB,GAE3BnkD,KAAKklD,mBACLllD,KAAK2zC,MAAQ3zC,KAAKmlD,cAAgB,GAClCnlD,KAAKolD,kBACL,MAAMC,EAAkBV,EAAa3kD,KAAK2zC,MAAMlvC,OAChDzE,KAAKslD,sBAAsBD,EAAkBtD,GAAO/hD,KAAK2zC,MAAOgR,GAAc3kD,KAAK2zC,OACnF3zC,KAAKwoC,YACLxoC,KAAKulD,+BACLvlD,KAAKwlD,yBACLxlD,KAAKylD,8BACDzG,EAAStB,UAAYsB,EAASD,UAAgC,SAApBC,EAAS10C,UACrDtK,KAAK2zC,MAAQoL,GAAS/+C,KAAMA,KAAK2zC,OACjC3zC,KAAK0jD,YAAc,KACnB1jD,KAAK0lD,iBAEHL,GACFrlD,KAAKslD,sBAAsBtlD,KAAK2zC,OAElC3zC,KAAK2lD,YACL3lD,KAAK4lD,MACL5lD,KAAK6lD,WACL7lD,KAAK8lD,cAEP,YACE,IACIlO,EAAYE,EADZiO,EAAgB/lD,KAAKoE,QAAQuF,QAE7B3J,KAAKq1C,gBACPuC,EAAa53C,KAAK4U,KAClBkjC,EAAW93C,KAAK6U,QAEhB+iC,EAAa53C,KAAKyvB,IAClBqoB,EAAW93C,KAAK0vB,OAChBq2B,GAAiBA,GAEnB/lD,KAAKq3C,YAAcO,EACnB53C,KAAKs3C,UAAYQ,EACjB93C,KAAK4jD,eAAiBmC,EACtB/lD,KAAKyzC,QAAUqE,EAAWF,EAC1B53C,KAAKgmD,eAAiBhmD,KAAKoE,QAAQ6hD,cAErC,cACE78C,EAASpJ,KAAKoE,QAAQ0hD,YAAa,CAAC9lD,OAEtC,sBACEoJ,EAASpJ,KAAKoE,QAAQwgD,oBAAqB,CAAC5kD,OAE9C,gBACMA,KAAKq1C,gBACPr1C,KAAKuF,MAAQvF,KAAKmxB,SAClBnxB,KAAK4U,KAAO,EACZ5U,KAAK6U,MAAQ7U,KAAKuF,QAElBvF,KAAKyF,OAASzF,KAAK29B,UACnB39B,KAAKyvB,IAAM,EACXzvB,KAAK0vB,OAAS1vB,KAAKyF,QAErBzF,KAAKojD,YAAc,EACnBpjD,KAAKkjD,WAAa,EAClBljD,KAAKqjD,aAAe,EACpBrjD,KAAKmjD,cAAgB,EAEvB,qBACE/5C,EAASpJ,KAAKoE,QAAQ0gD,mBAAoB,CAAC9kD,OAE7C,WAAWM,GACTN,KAAKyC,MAAMyjD,cAAc5lD,EAAMN,KAAKmH,cACpCiC,EAASpJ,KAAKoE,QAAQ9D,GAAO,CAACN,OAEhC,mBACEA,KAAKmmD,WAAW,oBAElB,uBACA,kBACEnmD,KAAKmmD,WAAW,mBAElB,mBACEnmD,KAAKmmD,WAAW,oBAElB,aACE,MAAO,GAET,kBACEnmD,KAAKmmD,WAAW,mBAElB,8BACE/8C,EAASpJ,KAAKoE,QAAQgiD,4BAA6B,CAACpmD,OAEtD,mBAAmB2zC,GACjB,MAAMqL,EAAWh/C,KAAKoE,QAAQuvC,MAC9B,IAAI/pC,EAAGK,EAAMw7B,EACb,IAAK77B,EAAI,EAAGK,EAAO0pC,EAAMlvC,OAAQmF,EAAIK,EAAML,IACzC67B,EAAOkO,EAAM/pC,GACb67B,EAAKlhC,MAAQ6E,EAAS41C,EAAS51C,SAAU,CAACq8B,EAAKjlC,MAAOoJ,EAAG+pC,GAAQ3zC,MAGrE,6BACEoJ,EAASpJ,KAAKoE,QAAQiiD,2BAA4B,CAACrmD,OAErD,+BACEoJ,EAASpJ,KAAKoE,QAAQmhD,6BAA8B,CAACvlD,OAEvD,yBACE,MAAMoE,EAAUpE,KAAKoE,QACf46C,EAAW56C,EAAQuvC,MACnB2S,EAAWtmD,KAAK2zC,MAAMlvC,OACtBu8C,EAAchC,EAASgC,aAAe,EACtCC,EAAcjC,EAASiC,YAC7B,IACIJ,EAAWljB,EAAW4oB,EADtBjD,EAAgBtC,EAEpB,IAAKhhD,KAAKwmD,eAAiBxH,EAAStB,SAAWsD,GAAeC,GAAeqF,GAAY,IAAMtmD,KAAKq1C,eAElG,YADAr1C,KAAKsjD,cAAgBtC,GAGvB,MAAMyF,EAAazmD,KAAK0mD,iBAClBC,EAAgBF,EAAWG,OAAOrhD,MAClCshD,EAAiBJ,EAAWK,QAAQrhD,OACpC0rB,EAAW5f,GAAYvR,KAAKyC,MAAM8C,MAAQohD,EAAe,EAAG3mD,KAAKmxB,UACvE0vB,EAAYz8C,EAAQm0C,OAASv4C,KAAKmxB,SAAWm1B,EAAWn1B,GAAYm1B,EAAW,GAC3EK,EAAgB,EAAI9F,IACtBA,EAAY1vB,GAAYm1B,GAAYliD,EAAQm0C,OAAS,GAAM,IAC3D5a,EAAY39B,KAAK29B,UAAY4kB,GAAkBn+C,EAAQo0C,MACvDwG,EAAS+B,QAAUyB,GAAep+C,EAAQnD,MAAOjB,KAAKyC,MAAM2B,QAAQ+lB,MACpEo8B,EAAmBn5C,KAAKuB,KAAKg4C,EAAgBA,EAAgBE,EAAiBA,GAC9EvD,EAAgB1zC,EAAUxC,KAAKoC,IAC7BpC,KAAK25C,KAAKx1C,IAAak1C,EAAWK,QAAQrhD,OAAS,GAAKo7C,GAAY,EAAG,IACvEzzC,KAAK25C,KAAKx1C,GAAYosB,EAAY4oB,GAAmB,EAAG,IAAMn5C,KAAK25C,KAAKx1C,GAAYs1C,EAAiBN,GAAmB,EAAG,MAE7HjD,EAAgBl2C,KAAKqC,IAAIuxC,EAAa5zC,KAAKoC,IAAIyxC,EAAaqC,KAE9DtjD,KAAKsjD,cAAgBA,EAEvB,8BACEl6C,EAASpJ,KAAKoE,QAAQqhD,4BAA6B,CAACzlD,OAEtD,iBACA,YACEoJ,EAASpJ,KAAKoE,QAAQuhD,UAAW,CAAC3lD,OAEpC,MACE,MAAM88C,EAAU,CACdv3C,MAAO,EACPE,OAAQ,IAEJ,MAAChD,EAAO2B,SAAUuvC,MAAOqL,EAAU/9C,MAAO+lD,EAAWxO,KAAMyO,IAAajnD,KACxE09C,EAAU19C,KAAKwmD,aACfnR,EAAer1C,KAAKq1C,eAC1B,GAAIqI,EAAS,CACX,MAAMwJ,EAAc1E,GAAewE,EAAWvkD,EAAM2B,QAAQ+lB,MAQ5D,GAPIkrB,GACFyH,EAAQv3C,MAAQvF,KAAKmxB,SACrB2rB,EAAQr3C,OAAS88C,GAAkB0E,GAAYC,IAE/CpK,EAAQr3C,OAASzF,KAAK29B,UACtBmf,EAAQv3C,MAAQg9C,GAAkB0E,GAAYC,GAE5ClI,EAAStB,SAAW19C,KAAK2zC,MAAMlvC,OAAQ,CACzC,MAAM,MAACg7C,EAAK,KAAExtC,EAAI,OAAE20C,EAAM,QAAEE,GAAW9mD,KAAK0mD,iBACtCS,EAAiC,EAAnBnI,EAAS+B,QACvBqG,EAAe13C,EAAU1P,KAAKsjD,eAC9B1rC,EAAMxK,KAAKwK,IAAIwvC,GACfzwC,EAAMvJ,KAAKuJ,IAAIywC,GACrB,GAAI/R,EAAc,CAChB,MAAMgS,EAAcrI,EAASkC,OAAS,EAAIvqC,EAAMiwC,EAAOrhD,MAAQqS,EAAMkvC,EAAQrhD,OAC7Eq3C,EAAQr3C,OAAS2H,KAAKoC,IAAIxP,KAAK29B,UAAWmf,EAAQr3C,OAAS4hD,EAAcF,OACpE,CACL,MAAMG,EAAatI,EAASkC,OAAS,EAAItpC,EAAMgvC,EAAOrhD,MAAQoR,EAAMmwC,EAAQrhD,OAC5Eq3C,EAAQv3C,MAAQ6H,KAAKoC,IAAIxP,KAAKmxB,SAAU2rB,EAAQv3C,MAAQ+hD,EAAaH,GAEvEnnD,KAAKunD,kBAAkB9H,EAAOxtC,EAAM0E,EAAKiB,IAG7C5X,KAAKwnD,iBACDnS,GACFr1C,KAAKuF,MAAQvF,KAAKyzC,QAAUhxC,EAAM8C,MAAQvF,KAAKijD,SAASruC,KAAO5U,KAAKijD,SAASpuC,MAC7E7U,KAAKyF,OAASq3C,EAAQr3C,SAEtBzF,KAAKuF,MAAQu3C,EAAQv3C,MACrBvF,KAAKyF,OAASzF,KAAKyzC,QAAUhxC,EAAMgD,OAASzF,KAAKijD,SAASxzB,IAAMzvB,KAAKijD,SAASvzB,QAGlF,kBAAkB+vB,EAAOxtC,EAAM0E,EAAKiB,GAClC,MAAO+7B,OAAO,MAACl/B,EAAK,QAAEssC,GAAQ,SAAE6B,GAAY5iD,KAAKoE,QAC3CqjD,EAAmC,IAAvBznD,KAAKsjD,cACjBoE,EAAgC,QAAb9E,GAAoC,MAAd5iD,KAAKyV,KACpD,GAAIzV,KAAKq1C,eAAgB,CACvB,MAAMsS,EAAa3nD,KAAK4zC,gBAAgB,GAAK5zC,KAAK4U,KAC5CgzC,EAAc5nD,KAAK6U,MAAQ7U,KAAK4zC,gBAAgB5zC,KAAK2zC,MAAMlvC,OAAS,GAC1E,IAAI2+C,EAAc,EACdC,EAAe,EACfoE,EACEC,GACFtE,EAAcxrC,EAAM6nC,EAAMl6C,MAC1B89C,EAAe1sC,EAAM1E,EAAKxM,SAE1B29C,EAAczsC,EAAM8oC,EAAMh6C,OAC1B49C,EAAezrC,EAAM3F,EAAK1M,OAET,UAAVkP,EACT4uC,EAAepxC,EAAK1M,MACD,QAAVkP,EACT2uC,EAAc3D,EAAMl6C,MACD,UAAVkP,IACT2uC,EAAc3D,EAAMl6C,MAAQ,EAC5B89C,EAAepxC,EAAK1M,MAAQ,GAE9BvF,KAAKojD,YAAch2C,KAAKqC,KAAK2zC,EAAcuE,EAAa5G,GAAW/gD,KAAKuF,OAASvF,KAAKuF,MAAQoiD,GAAa,GAC3G3nD,KAAKqjD,aAAej2C,KAAKqC,KAAK4zC,EAAeuE,EAAc7G,GAAW/gD,KAAKuF,OAASvF,KAAKuF,MAAQqiD,GAAc,OAC1G,CACL,IAAI1E,EAAajxC,EAAKxM,OAAS,EAC3B09C,EAAgB1D,EAAMh6C,OAAS,EACrB,UAAVgP,GACFyuC,EAAa,EACbC,EAAgB1D,EAAMh6C,QACH,QAAVgP,IACTyuC,EAAajxC,EAAKxM,OAClB09C,EAAgB,GAElBnjD,KAAKkjD,WAAaA,EAAanC,EAC/B/gD,KAAKmjD,cAAgBA,EAAgBpC,GAGzC,iBACM/gD,KAAKijD,WACPjjD,KAAKijD,SAASruC,KAAOxH,KAAKqC,IAAIzP,KAAKojD,YAAapjD,KAAKijD,SAASruC,MAC9D5U,KAAKijD,SAASxzB,IAAMriB,KAAKqC,IAAIzP,KAAKkjD,WAAYljD,KAAKijD,SAASxzB,KAC5DzvB,KAAKijD,SAASpuC,MAAQzH,KAAKqC,IAAIzP,KAAKqjD,aAAcrjD,KAAKijD,SAASpuC,OAChE7U,KAAKijD,SAASvzB,OAAStiB,KAAKqC,IAAIzP,KAAKmjD,cAAenjD,KAAKijD,SAASvzB,SAGtE,WACEtmB,EAASpJ,KAAKoE,QAAQyhD,SAAU,CAAC7lD,OAEnC,eACE,MAAM,KAACyV,EAAI,SAAEmtC,GAAY5iD,KAAKoE,QAC9B,MAAoB,QAAbw+C,GAAmC,WAAbA,GAAkC,MAATntC,EAExD,aACE,OAAOzV,KAAKoE,QAAQyjD,SAEtB,sBAAsBlU,GAGpB,IAAI/pC,EAAGK,EACP,IAHAjK,KAAKomD,8BACLpmD,KAAK8nD,mBAAmBnU,GAEnB/pC,EAAI,EAAGK,EAAO0pC,EAAMlvC,OAAQmF,EAAIK,EAAML,IACrCzB,EAAcwrC,EAAM/pC,GAAGrF,SACzBovC,EAAMvgC,OAAOxJ,EAAG,GAChBK,IACAL,KAGJ5J,KAAKqmD,6BAEP,iBACE,IAAII,EAAazmD,KAAK0jD,YACtB,IAAK+C,EAAY,CACf,MAAM9B,EAAa3kD,KAAKoE,QAAQuvC,MAAMgR,WACtC,IAAIhR,EAAQ3zC,KAAK2zC,MACbgR,EAAahR,EAAMlvC,SACrBkvC,EAAQoO,GAAOpO,EAAOgR,IAExB3kD,KAAK0jD,YAAc+C,EAAazmD,KAAK+nD,mBAAmBpU,EAAOA,EAAMlvC,QAEvE,OAAOgiD,EAET,mBAAmB9S,EAAOlvC,GACxB,MAAM,IAAC+lB,EAAKm5B,kBAAmBrB,GAAUtiD,KACnCgoD,EAAS,GACTC,EAAU,GAChB,IAEIr+C,EAAGod,EAAGmG,EAAM5oB,EAAO2jD,EAAUC,EAAYn7B,EAAO3C,EAAY9kB,EAAOE,EAAQ2iD,EAF3EC,EAAkB,EAClBC,EAAmB,EAEvB,IAAK1+C,EAAI,EAAGA,EAAInF,IAAUmF,EAAG,CAO3B,GANArF,EAAQovC,EAAM/pC,GAAGrF,MACjB2jD,EAAWloD,KAAKuoD,wBAAwB3+C,GACxC4gB,EAAIL,KAAOg+B,EAAaD,EAASv7B,OACjCK,EAAQs1B,EAAO6F,GAAc7F,EAAO6F,IAAe,CAAC5mD,KAAM,GAAIkrB,GAAI,IAClEpC,EAAa69B,EAAS79B,WACtB9kB,EAAQE,EAAS,EACZ0C,EAAc5D,IAAW6D,EAAQ7D,IAG/B,GAAI6D,EAAQ7D,GACjB,IAAKyiB,EAAI,EAAGmG,EAAO5oB,EAAME,OAAQuiB,EAAImG,IAAQnG,EAC3CohC,EAAc7jD,EAAMyiB,GACf7e,EAAcigD,IAAiBhgD,EAAQggD,KAC1C7iD,EAAQinB,GAAahC,EAAKwC,EAAMzrB,KAAMyrB,EAAMP,GAAIlnB,EAAO6iD,GACvD3iD,GAAU4kB,QAPd9kB,EAAQinB,GAAahC,EAAKwC,EAAMzrB,KAAMyrB,EAAMP,GAAIlnB,EAAOhB,GACvDkB,EAAS4kB,EAUX29B,EAAOlkD,KAAKyB,GACZ0iD,EAAQnkD,KAAK2B,GACb4iD,EAAkBj7C,KAAKqC,IAAIlK,EAAO8iD,GAClCC,EAAmBl7C,KAAKqC,IAAIhK,EAAQ6iD,GAEtCr7B,GAAeq1B,EAAQ79C,GACvB,MAAMmiD,EAASoB,EAAOn9C,QAAQw9C,GACxBvB,EAAUmB,EAAQp9C,QAAQy9C,GAC1BE,EAAWC,IAAQ,CAAEljD,MAAOyiD,EAAOS,IAAQ,EAAGhjD,OAAQwiD,EAAQQ,IAAQ,IAC5E,MAAO,CACLhJ,MAAO+I,EAAQ,GACfv2C,KAAMu2C,EAAQ/jD,EAAS,GACvBmiD,OAAQ4B,EAAQ5B,GAChBE,QAAS0B,EAAQ1B,GACjBkB,SACAC,WAGJ,iBAAiBznD,GACf,OAAOA,EAET,iBAAiBA,EAAOmE,GACtB,OAAOwrC,IAET,iBAAiB1iB,IACjB,gBAAgB9oB,GACd,MAAMgvC,EAAQ3zC,KAAK2zC,MACnB,OAAIhvC,EAAQ,GAAKA,EAAQgvC,EAAMlvC,OAAS,EAC/B,KAEFzE,KAAK6V,iBAAiB89B,EAAMhvC,GAAOnE,OAE5C,mBAAmBkoD,GACb1oD,KAAK4jD,iBACP8E,EAAU,EAAIA,GAEhB,MAAMj7B,EAAQztB,KAAKq3C,YAAcqR,EAAU1oD,KAAKyzC,QAChD,OAAOjiC,GAAYxR,KAAKgmD,eAAiBx4B,GAAYxtB,KAAKyC,MAAOgrB,EAAO,GAAKA,GAE/E,mBAAmBA,GACjB,MAAMi7B,GAAWj7B,EAAQztB,KAAKq3C,aAAer3C,KAAKyzC,QAClD,OAAOzzC,KAAK4jD,eAAiB,EAAI8E,EAAUA,EAE7C,eACE,OAAO1oD,KAAK6V,iBAAiB7V,KAAK2oD,gBAEpC,eACE,MAAM,IAACn5C,EAAG,IAAEC,GAAOzP,KACnB,OAAOwP,EAAM,GAAKC,EAAM,EAAIA,EAC1BD,EAAM,GAAKC,EAAM,EAAID,EACrB,EAEJ,WAAW7K,GACT,MAAMgvC,EAAQ3zC,KAAK2zC,OAAS,GAC5B,GAAIhvC,GAAS,GAAKA,EAAQgvC,EAAMlvC,OAAQ,CACtC,MAAMghC,EAAOkO,EAAMhvC,GACnB,OAAO8gC,EAAKgI,WACbhI,EAAKgI,SAAWiV,GAAkB1iD,KAAKmH,aAAcxC,EAAO8gC,IAE7D,OAAOzlC,KAAKytC,WACZztC,KAAKytC,SAAWgV,GAAmBziD,KAAKyC,MAAM0E,aAAcnH,OAE9D,YACE,MAAM4oD,EAAc5oD,KAAKoE,QAAQuvC,MAC3BkV,EAAMn5C,EAAU1P,KAAKsjD,eACrB1rC,EAAMxK,KAAK8B,IAAI9B,KAAKwK,IAAIixC,IACxBlyC,EAAMvJ,KAAK8B,IAAI9B,KAAKuJ,IAAIkyC,IACxBpC,EAAazmD,KAAK0mD,iBAClB3F,EAAU6H,EAAYvH,iBAAmB,EACzCjmC,EAAIqrC,EAAaA,EAAWG,OAAOrhD,MAAQw7C,EAAU,EACrDjoC,EAAI2tC,EAAaA,EAAWK,QAAQrhD,OAASs7C,EAAU,EAC7D,OAAO/gD,KAAKq1C,eACRv8B,EAAIlB,EAAMwD,EAAIzE,EAAMyE,EAAIxD,EAAMkB,EAAInC,EAClCmC,EAAInC,EAAMyE,EAAIxD,EAAMkB,EAAIlB,EAAMwD,EAAIzE,EAExC,aACE,MAAM+mC,EAAU19C,KAAKoE,QAAQs5C,QAC7B,MAAgB,SAAZA,IACOA,EAEJ19C,KAAKqrC,0BAA0B5mC,OAAS,EAEjD,sBAAsBqsC,GACpB,MAAMr7B,EAAOzV,KAAKyV,KACZhT,EAAQzC,KAAKyC,MACb2B,EAAUpE,KAAKoE,SACf,KAACo0C,EAAI,SAAEoK,GAAYx+C,EACnBm0C,EAASC,EAAKD,OACdlD,EAAer1C,KAAKq1C,eACpB1B,EAAQ3zC,KAAK2zC,MACbmV,EAAcnV,EAAMlvC,QAAU8zC,EAAS,EAAI,GAC3CwQ,EAAKxG,GAAkB/J,GACvBllC,EAAQ,GACR01C,EAAaxQ,EAAKniB,WAAWr2B,KAAKmH,cAClC8hD,EAAYD,EAAWtI,WAAasI,EAAW75B,YAAc,EAC7D+5B,EAAgBD,EAAY,EAC5BE,EAAmB,SAAS17B,GAChC,OAAOD,GAAY/qB,EAAOgrB,EAAOw7B,IAEnC,IAAIG,EAAax/C,EAAGy4C,EAAWgH,EAC3BC,EAAKC,EAAKC,EAAKC,EAAKC,EAAIC,EAAIC,EAAIC,EACpC,GAAiB,QAAbjH,EACFwG,EAAcD,EAAiBnpD,KAAK0vB,QACpC65B,EAAMvpD,KAAK0vB,OAASq5B,EACpBU,EAAML,EAAcF,EACpBS,EAAKR,EAAiBrY,EAAUrhB,KAAOy5B,EACvCW,EAAK/Y,EAAUphB,YACV,GAAiB,WAAbkzB,EACTwG,EAAcD,EAAiBnpD,KAAKyvB,KACpCk6B,EAAK7Y,EAAUrhB,IACfo6B,EAAKV,EAAiBrY,EAAUphB,QAAUw5B,EAC1CK,EAAMH,EAAcF,EACpBO,EAAMzpD,KAAKyvB,IAAMs5B,OACZ,GAAiB,SAAbnG,EACTwG,EAAcD,EAAiBnpD,KAAK6U,OACpCy0C,EAAMtpD,KAAK6U,MAAQk0C,EACnBS,EAAMJ,EAAcF,EACpBQ,EAAKP,EAAiBrY,EAAUl8B,MAAQs0C,EACxCU,EAAK9Y,EAAUj8B,WACV,GAAiB,UAAb+tC,EACTwG,EAAcD,EAAiBnpD,KAAK4U,MACpC80C,EAAK5Y,EAAUl8B,KACfg1C,EAAKT,EAAiBrY,EAAUj8B,OAASq0C,EACzCI,EAAMF,EAAcF,EACpBM,EAAMxpD,KAAK4U,KAAOm0C,OACb,GAAa,MAATtzC,EAAc,CACvB,GAAiB,WAAbmtC,EACFwG,EAAcD,GAAkBrY,EAAUrhB,IAAMqhB,EAAUphB,QAAU,EAAI,SACnE,GAAIjnB,EAASm6C,GAAW,CAC7B,MAAMI,EAAiBj/C,OAAOsD,KAAKu7C,GAAU,GACvCpiD,EAAQoiD,EAASI,GACvBoG,EAAcD,EAAiBnpD,KAAKyC,MAAM6oB,OAAO03B,GAAgBntC,iBAAiBrV,IAEpFmpD,EAAK7Y,EAAUrhB,IACfo6B,EAAK/Y,EAAUphB,OACf65B,EAAMH,EAAcF,EACpBO,EAAMF,EAAMR,OACP,GAAa,MAATtzC,EAAc,CACvB,GAAiB,WAAbmtC,EACFwG,EAAcD,GAAkBrY,EAAUl8B,KAAOk8B,EAAUj8B,OAAS,QAC/D,GAAIpM,EAASm6C,GAAW,CAC7B,MAAMI,EAAiBj/C,OAAOsD,KAAKu7C,GAAU,GACvCpiD,EAAQoiD,EAASI,GACvBoG,EAAcD,EAAiBnpD,KAAKyC,MAAM6oB,OAAO03B,GAAgBntC,iBAAiBrV,IAEpF8oD,EAAMF,EAAcF,EACpBM,EAAMF,EAAMP,EACZW,EAAK5Y,EAAUl8B,KACfg1C,EAAK9Y,EAAUj8B,MAEjB,MAAMi1C,EAAQhhD,EAAe1E,EAAQuvC,MAAMuL,cAAe4J,GACpDiB,EAAO38C,KAAKqC,IAAI,EAAGrC,KAAKkzC,KAAKwI,EAAcgB,IACjD,IAAKlgD,EAAI,EAAGA,EAAIk/C,EAAal/C,GAAKmgD,EAAM,CACtC,MAAMC,EAAcxR,EAAKniB,WAAWr2B,KAAKmH,WAAWyC,IAC9CqnB,EAAY+4B,EAAY/4B,UACxBg5B,EAAYD,EAAYxhC,MACxB0b,EAAa8lB,EAAY9lB,YAAc,GACvCC,EAAmB6lB,EAAY7lB,iBAC/B0c,EAAYmJ,EAAYnJ,UACxBC,EAAYkJ,EAAYlJ,UACxBoJ,EAAiBF,EAAYE,gBAAkB,GAC/CC,EAAuBH,EAAYG,qBACzC9H,EAAYH,GAAoBliD,KAAM4J,EAAG2uC,QACvBl2C,IAAdggD,IAGJgH,EAAmB77B,GAAY/qB,EAAO4/C,EAAWpxB,GAC7CokB,EACFiU,EAAME,EAAME,EAAKE,EAAKP,EAEtBE,EAAME,EAAME,EAAKE,EAAKR,EAExB/1C,EAAMxP,KAAK,CACTwlD,MACAC,MACAC,MACAC,MACAC,KACAC,KACAC,KACAC,KACAtkD,MAAO0rB,EACPzI,MAAOyhC,EACP/lB,aACAC,mBACA0c,YACAC,YACAoJ,iBACAC,0BAKJ,OAFAnqD,KAAKikD,aAAe6E,EACpB9oD,KAAKkkD,aAAekF,EACb91C,EAET,mBAAmBw9B,GACjB,MAAMr7B,EAAOzV,KAAKyV,KACZrR,EAAUpE,KAAKoE,SACf,SAACw+C,EAAUjP,MAAOiV,GAAexkD,EACjCixC,EAAer1C,KAAKq1C,eACpB1B,EAAQ3zC,KAAK2zC,OACb,MAACl/B,EAAK,WAAE+sC,EAAU,QAAET,EAAO,OAAEG,GAAU0H,EACvCG,EAAKxG,GAAkBn+C,EAAQo0C,MAC/B4R,EAAiBrB,EAAKhI,EACtBsJ,EAAkBnJ,GAAUH,EAAUqJ,EACtC/7B,GAAY3e,EAAU1P,KAAKsjD,eAC3BhwC,EAAQ,GACd,IAAI1J,EAAGK,EAAMw7B,EAAMlhC,EAAOkH,EAAGE,EAAG6lB,EAAW/D,EAAOtD,EAAME,EAAYigC,EAAWC,EAC3E94B,EAAe,SACnB,GAAiB,QAAbmxB,EACFj3C,EAAI3L,KAAK0vB,OAAS26B,EAClB74B,EAAYxxB,KAAKwqD,+BACZ,GAAiB,WAAb5H,EACTj3C,EAAI3L,KAAKyvB,IAAM46B,EACf74B,EAAYxxB,KAAKwqD,+BACZ,GAAiB,SAAb5H,EAAqB,CAC9B,MAAM9nC,EAAM9a,KAAKyqD,wBAAwB1B,GACzCv3B,EAAY1W,EAAI0W,UAChB/lB,EAAIqP,EAAIrP,OACH,GAAiB,UAAbm3C,EAAsB,CAC/B,MAAM9nC,EAAM9a,KAAKyqD,wBAAwB1B,GACzCv3B,EAAY1W,EAAI0W,UAChB/lB,EAAIqP,EAAIrP,OACH,GAAa,MAATgK,EAAc,CACvB,GAAiB,WAAbmtC,EACFj3C,GAAMmlC,EAAUrhB,IAAMqhB,EAAUphB,QAAU,EAAK06B,OAC1C,GAAI3hD,EAASm6C,GAAW,CAC7B,MAAMI,EAAiBj/C,OAAOsD,KAAKu7C,GAAU,GACvCpiD,EAAQoiD,EAASI,GACvBr3C,EAAI3L,KAAKyC,MAAM6oB,OAAO03B,GAAgBntC,iBAAiBrV,GAAS4pD,EAElE54B,EAAYxxB,KAAKwqD,+BACZ,GAAa,MAAT/0C,EAAc,CACvB,GAAiB,WAAbmtC,EACFn3C,GAAMqlC,EAAUl8B,KAAOk8B,EAAUj8B,OAAS,EAAKu1C,OAC1C,GAAI3hD,EAASm6C,GAAW,CAC7B,MAAMI,EAAiBj/C,OAAOsD,KAAKu7C,GAAU,GACvCpiD,EAAQoiD,EAASI,GACvBv3C,EAAIzL,KAAKyC,MAAM6oB,OAAO03B,GAAgBntC,iBAAiBrV,GAEzDgxB,EAAYxxB,KAAKyqD,wBAAwB1B,GAAIv3B,UAElC,MAAT/b,IACY,UAAVhB,EACFgd,EAAe,MACI,QAAVhd,IACTgd,EAAe,WAGnB,MAAMg1B,EAAazmD,KAAK0mD,iBACxB,IAAK98C,EAAI,EAAGK,EAAO0pC,EAAMlvC,OAAQmF,EAAIK,IAAQL,EAAG,CAC9C67B,EAAOkO,EAAM/pC,GACbrF,EAAQkhC,EAAKlhC,MACb,MAAMylD,EAAcpB,EAAYvyB,WAAWr2B,KAAKmH,WAAWyC,IAC3D6jB,EAAQztB,KAAK4zC,gBAAgBhqC,GAAKg/C,EAAYtH,YAC9Cn3B,EAAOnqB,KAAKuoD,wBAAwB3+C,GACpCygB,EAAaF,EAAKE,WAClBigC,EAAYliD,EAAQ7D,GAASA,EAAME,OAAS,EAC5C,MAAMimD,EAAYJ,EAAY,EACxB9hC,EAAQwhC,EAAYxhC,MACpBqI,EAAcm5B,EAAY5I,gBAC1BxwB,EAAco5B,EAAY7I,gBAChC,IAoCIwJ,EApCAC,EAAgBp5B,EAqCpB,GApCI6jB,GACF5pC,EAAIgiB,EACc,UAAd+D,IAEAo5B,EADEhhD,IAAMK,EAAO,EACEjK,KAAKoE,QAAQuF,QAAoB,OAAV,QACzB,IAANC,EACQ5J,KAAKoE,QAAQuF,QAAmB,QAAT,OAExB,UAKhB4gD,EAFa,QAAb3H,EACiB,SAAfpB,GAAsC,IAAbnzB,GACbi8B,EAAYjgC,EAAaA,EAAa,EAC5B,WAAfm3B,GACKiF,EAAWK,QAAQrhD,OAAS,EAAIilD,EAAYrgC,EAAaA,GAEzDo8B,EAAWK,QAAQrhD,OAAS4kB,EAAa,EAGtC,SAAfm3B,GAAsC,IAAbnzB,EACdhE,EAAa,EACF,WAAfm3B,EACIiF,EAAWK,QAAQrhD,OAAS,EAAIilD,EAAYrgC,EAE5Co8B,EAAWK,QAAQrhD,OAAS6kD,EAAYjgC,EAGrD62B,IACFqJ,IAAe,KAGjB5+C,EAAI8hB,EACJ88B,GAAc,EAAID,GAAajgC,EAAa,GAG1C2/B,EAAYvI,kBAAmB,CACjC,MAAMoJ,EAAex3B,GAAU22B,EAAYrI,iBACrCl8C,EAASghD,EAAWwB,QAAQr+C,GAC5BrE,EAAQkhD,EAAWuB,OAAOp+C,GAChC,IAAI6lB,EAAM9jB,EAAI4+C,EAAaM,EAAap7B,IACpC7a,EAAOnJ,EAAIo/C,EAAaj2C,KAC5B,OAAQ6c,GACR,IAAK,SACHhC,GAAOhqB,EAAS,EAChB,MACF,IAAK,SACHgqB,GAAOhqB,EACP,MAEF,OAAQ+rB,GACR,IAAK,SACH5c,GAAQrP,EAAQ,EAChB,MACF,IAAK,QACHqP,GAAQrP,EACR,MAEFolD,EAAW,CACT/1C,OACA6a,MACAlqB,MAAOA,EAAQslD,EAAatlD,MAC5BE,OAAQA,EAASolD,EAAaplD,OAC9B+iB,MAAOwhC,EAAYtI,eAGvBpuC,EAAMxP,KAAK,CACTuqB,WACA9pB,QACA4lB,OACA3B,QACAqI,cACAD,cACA25B,aACA/4B,UAAWo5B,EACXn5B,eACAH,YAAa,CAAC7lB,EAAGE,GACjBg/C,aAGJ,OAAOr3C,EAET,0BACE,MAAM,SAACsvC,EAAQ,MAAEjP,GAAS3zC,KAAKoE,QACzBiqB,GAAY3e,EAAU1P,KAAKsjD,eACjC,GAAIj1B,EACF,MAAoB,QAAbu0B,EAAqB,OAAS,QAEvC,IAAInuC,EAAQ,SAQZ,MAPoB,UAAhBk/B,EAAMl/B,MACRA,EAAQ,OACiB,QAAhBk/B,EAAMl/B,MACfA,EAAQ,QACiB,UAAhBk/B,EAAMl/B,QACfA,EAAQ,SAEHA,EAET,wBAAwBs0C,GACtB,MAAM,SAACnG,EAAUjP,OAAO,WAAC6N,EAAU,OAAEN,EAAM,QAAEH,IAAY/gD,KAAKoE,QACxDqiD,EAAazmD,KAAK0mD,iBAClB0D,EAAiBrB,EAAKhI,EACtB6F,EAASH,EAAWG,OAAOrhD,MACjC,IAAIisB,EACA/lB,EAoDJ,MAnDiB,SAAbm3C,EACE1B,GACFz1C,EAAIzL,KAAK6U,MAAQksC,EACE,SAAfS,EACFhwB,EAAY,OACY,WAAfgwB,GACThwB,EAAY,SACZ/lB,GAAMm7C,EAAS,IAEfp1B,EAAY,QACZ/lB,GAAKm7C,KAGPn7C,EAAIzL,KAAK6U,MAAQu1C,EACE,SAAf5I,EACFhwB,EAAY,QACY,WAAfgwB,GACThwB,EAAY,SACZ/lB,GAAMm7C,EAAS,IAEfp1B,EAAY,OACZ/lB,EAAIzL,KAAK4U,OAGS,UAAbguC,EACL1B,GACFz1C,EAAIzL,KAAK4U,KAAOmsC,EACG,SAAfS,EACFhwB,EAAY,QACY,WAAfgwB,GACThwB,EAAY,SACZ/lB,GAAMm7C,EAAS,IAEfp1B,EAAY,OACZ/lB,GAAKm7C,KAGPn7C,EAAIzL,KAAK4U,KAAOw1C,EACG,SAAf5I,EACFhwB,EAAY,OACY,WAAfgwB,GACThwB,EAAY,SACZ/lB,GAAKm7C,EAAS,IAEdp1B,EAAY,QACZ/lB,EAAIzL,KAAK6U,QAIb2c,EAAY,QAEP,CAACA,YAAW/lB,KAErB,oBACE,GAAIzL,KAAKoE,QAAQuvC,MAAMuN,OACrB,OAEF,MAAMz+C,EAAQzC,KAAKyC,MACbmgD,EAAW5iD,KAAKoE,QAAQw+C,SAC9B,MAAiB,SAAbA,GAAoC,UAAbA,EAClB,CAACnzB,IAAK,EAAG7a,KAAM5U,KAAK4U,KAAM8a,OAAQjtB,EAAMgD,OAAQoP,MAAO7U,KAAK6U,OAClD,QAAb+tC,GAAmC,WAAbA,EACnB,CAACnzB,IAAKzvB,KAAKyvB,IAAK7a,KAAM,EAAG8a,OAAQ1vB,KAAK0vB,OAAQ7a,MAAOpS,EAAM8C,YADlE,EAIJ,iBACE,MAAM,IAACilB,EAAKpmB,SAAS,gBAACwlB,GAAgB,KAAEhV,EAAI,IAAE6a,EAAG,MAAElqB,EAAK,OAAEE,GAAUzF,KAChE4pB,IACFY,EAAI0C,OACJ1C,EAAI+G,UAAY3H,EAChBY,EAAIsgC,SAASl2C,EAAM6a,EAAKlqB,EAAOE,GAC/B+kB,EAAI8C,WAGR,qBAAqB9sB,GACnB,MAAMg4C,EAAOx4C,KAAKoE,QAAQo0C,KAC1B,IAAKx4C,KAAKwmD,eAAiBhO,EAAKkF,QAC9B,OAAO,EAET,MAAM/J,EAAQ3zC,KAAK2zC,MACbhvC,EAAQgvC,EAAMoX,UAAUt0C,GAAKA,EAAEjW,QAAUA,GAC/C,GAAImE,GAAS,EAAG,CACd,MAAM+rB,EAAO8nB,EAAKniB,WAAWr2B,KAAKmH,WAAWxC,IAC7C,OAAO+rB,EAAKO,UAEd,OAAO,EAET,SAAS6f,GACP,MAAM0H,EAAOx4C,KAAKoE,QAAQo0C,KACpBhuB,EAAMxqB,KAAKwqB,IACXlX,EAAQtT,KAAKwjD,iBAAmBxjD,KAAKwjD,eAAiBxjD,KAAKgrD,sBAAsBla,IACvF,IAAIlnC,EAAGK,EACP,MAAMghD,EAAW,CAAClvC,EAAIC,EAAIrU,KACnBA,EAAMpC,OAAUoC,EAAM6gB,QAG3BgC,EAAI0C,OACJ1C,EAAIyG,UAAYtpB,EAAMpC,MACtBilB,EAAIwG,YAAcrpB,EAAM6gB,MACxBgC,EAAI0gC,YAAYvjD,EAAMu8B,YAAc,IACpC1Z,EAAI2gC,eAAiBxjD,EAAMw8B,iBAC3B3Z,EAAIkE,YACJlE,EAAIsE,OAAO/S,EAAGtQ,EAAGsQ,EAAGpQ,GACpB6e,EAAIuE,OAAO/S,EAAGvQ,EAAGuQ,EAAGrQ,GACpB6e,EAAI4E,SACJ5E,EAAI8C,YAEN,GAAIkrB,EAAKkF,QACP,IAAK9zC,EAAI,EAAGK,EAAOqJ,EAAM7O,OAAQmF,EAAIK,IAAQL,EAAG,CAC9C,MAAMmD,EAAOuG,EAAM1J,GACf4uC,EAAKmI,iBACPsK,EACE,CAACx/C,EAAGsB,EAAK28C,GAAI/9C,EAAGoB,EAAK48C,IACrB,CAACl+C,EAAGsB,EAAK68C,GAAIj+C,EAAGoB,EAAK88C,IACrB98C,GAGAyrC,EAAKoI,WACPqK,EACE,CAACx/C,EAAGsB,EAAKu8C,IAAK39C,EAAGoB,EAAKw8C,KACtB,CAAC99C,EAAGsB,EAAKy8C,IAAK79C,EAAGoB,EAAK08C,KACtB,CACEjhC,MAAOzb,EAAK+zC,UACZv7C,MAAOwH,EAAK8zC,UACZ3c,WAAYn3B,EAAKm9C,eACjB/lB,iBAAkBp3B,EAAKo9C,wBAOnC,aACE,MAAM,MAAC1nD,EAAK,IAAE+nB,EAAKpmB,SAAS,KAACo0C,IAASx4C,KAChCgpD,EAAaxQ,EAAKniB,WAAWr2B,KAAKmH,cAClC8hD,EAAYzQ,EAAKkI,WAAasI,EAAW75B,YAAc,EAC7D,IAAK85B,EACH,OAEF,MAAMmC,EAAgB5S,EAAKniB,WAAWr2B,KAAKmH,WAAW,IAAI8pB,UACpDm4B,EAAcppD,KAAKkkD,aACzB,IAAIwF,EAAIE,EAAID,EAAIE,EACZ7pD,KAAKq1C,gBACPqU,EAAKl8B,GAAY/qB,EAAOzC,KAAK4U,KAAMq0C,GAAaA,EAAY,EAC5DW,EAAKp8B,GAAY/qB,EAAOzC,KAAK6U,MAAOu2C,GAAiBA,EAAgB,EACrEzB,EAAKE,EAAKT,IAEVO,EAAKn8B,GAAY/qB,EAAOzC,KAAKyvB,IAAKw5B,GAAaA,EAAY,EAC3DY,EAAKr8B,GAAY/qB,EAAOzC,KAAK0vB,OAAQ07B,GAAiBA,EAAgB,EACtE1B,EAAKE,EAAKR,GAEZ5+B,EAAI0C,OACJ1C,EAAIyG,UAAY+3B,EAAW75B,YAC3B3E,EAAIwG,YAAcg4B,EAAWn/B,YAC7BW,EAAIkE,YACJlE,EAAIsE,OAAO46B,EAAIC,GACfn/B,EAAIuE,OAAO66B,EAAIC,GACfr/B,EAAI4E,SACJ5E,EAAI8C,UAEN,WAAWwjB,GACT,MAAM8X,EAAc5oD,KAAKoE,QAAQuvC,MACjC,IAAKiV,EAAYlL,QACf,OAEF,MAAMlzB,EAAMxqB,KAAKwqB,IACX+E,EAAOvvB,KAAKqrD,oBACd97B,GACFI,GAASnF,EAAK+E,GAEhB,MAAMjc,EAAQtT,KAAKyjD,cAAgBzjD,KAAKyjD,YAAczjD,KAAKsrD,mBAAmBxa,IAC9E,IAAIlnC,EAAGK,EACP,IAAKL,EAAI,EAAGK,EAAOqJ,EAAM7O,OAAQmF,EAAIK,IAAQL,EAAG,CAC9C,MAAMmD,EAAOuG,EAAM1J,GACbs+C,EAAWn7C,EAAKod,KAChB5lB,EAAQwI,EAAKxI,MACfwI,EAAK49C,WACPngC,EAAI+G,UAAYxkB,EAAK49C,SAASniC,MAC9BgC,EAAIsgC,SAAS/9C,EAAK49C,SAAS/1C,KAAM7H,EAAK49C,SAASl7B,IAAK1iB,EAAK49C,SAASplD,MAAOwH,EAAK49C,SAASllD,SAEzF,IAAIkG,EAAIoB,EAAKw9C,WACb/5B,GAAWhG,EAAKjmB,EAAO,EAAGoH,EAAGu8C,EAAUn7C,GAErCwiB,GACFM,GAAWrF,GAGf,YACE,MAAM,IAACA,EAAKpmB,SAAS,SAACw+C,EAAQ,MAAE3hD,EAAK,QAAE0I,IAAY3J,KACnD,IAAKiB,EAAMy8C,QACT,OAEF,MAAMvzB,EAAOmJ,GAAOryB,EAAMkpB,MACpB42B,EAAU1tB,GAAUpyB,EAAM8/C,SAC1BtsC,EAAQxT,EAAMwT,MACpB,IAAI8jC,EAASpuB,EAAKE,WAAa,EACd,WAAbu4B,GAAsC,WAAbA,GAAyBn6C,EAASm6C,IAC7DrK,GAAUwI,EAAQrxB,OACdtnB,EAAQnH,EAAMwvB,QAChB8nB,GAAUpuB,EAAKE,YAAcppB,EAAMwvB,KAAKhsB,OAAS,KAGnD8zC,GAAUwI,EAAQtxB,IAEpB,MAAM,OAACqzB,EAAM,OAAEC,EAAM,SAAE5xB,EAAQ,SAAE9C,GAAYw0B,GAAU7iD,KAAMu4C,EAAQqK,EAAUnuC,GAC/E+b,GAAWhG,EAAKvpB,EAAMwvB,KAAM,EAAG,EAAGtG,EAAM,CACtC3B,MAAOvnB,EAAMunB,MACb2I,WACA9C,WACAmD,UAAWmxB,GAAWluC,EAAOmuC,EAAUj5C,GACvC8nB,aAAc,SACdH,YAAa,CAACwxB,EAAQC,KAG1B,KAAKjS,GACE9wC,KAAKwmD,eAGVxmD,KAAKurD,iBACLvrD,KAAKwrD,SAAS1a,GACd9wC,KAAK0gD,aACL1gD,KAAKyrD,YACLzrD,KAAK0rD,WAAW5a,IAElB,UACE,MAAMpgB,EAAO1wB,KAAKoE,QACZunD,EAAKj7B,EAAKijB,OAASjjB,EAAKijB,MAAMiY,GAAK,EACnCC,EAAK/iD,EAAe4nB,EAAK8nB,MAAQ9nB,EAAK8nB,KAAKoT,GAAI,GACrD,OAAK5rD,KAAKwmD,cAAgBxmD,KAAKslC,OAAS,GAAMj9B,UAAUi9B,KAQjD,CAAC,CACNsmB,EAAGC,EACHvmB,KAAOwL,IACL9wC,KAAKurD,iBACLvrD,KAAKwrD,SAAS1a,GACd9wC,KAAKyrD,cAEN,CACDG,EAAGC,EAAK,EACRvmB,KAAM,KACJtlC,KAAK0gD,eAEN,CACDkL,EAAGD,EACHrmB,KAAOwL,IACL9wC,KAAK0rD,WAAW5a,MAtBX,CAAC,CACN8a,EAAGD,EACHrmB,KAAOwL,IACL9wC,KAAKslC,KAAKwL,MAuBlB,wBAAwB3rC,GACtB,MAAMm/C,EAAQtkD,KAAKyC,MAAMqpD,+BACnBC,EAAS/rD,KAAKyV,KAAO,SACrB/G,EAAS,GACf,IAAI9E,EAAGK,EACP,IAAKL,EAAI,EAAGK,EAAOq6C,EAAM7/C,OAAQmF,EAAIK,IAAQL,EAAG,CAC9C,MAAMqL,EAAOqvC,EAAM16C,GACfqL,EAAK82C,KAAY/rD,KAAK6H,IAAQ1C,GAAQ8P,EAAK9P,OAASA,GACtDuJ,EAAO5K,KAAKmR,GAGhB,OAAOvG,EAET,wBAAwB/J,GACtB,MAAM+rB,EAAO1wB,KAAKoE,QAAQuvC,MAAMtd,WAAWr2B,KAAKmH,WAAWxC,IAC3D,OAAO2uB,GAAO5C,EAAKvG,MAErB,aACE,MAAM6hC,EAAWhsD,KAAKuoD,wBAAwB,GAAGl+B,WACjD,OAAQrqB,KAAKq1C,eAAiBr1C,KAAKuF,MAAQvF,KAAKyF,QAAUumD,GAI9D,MAAM,GACJ,YAAY7mD,EAAMqkB,EAAO0L,GACvBl1B,KAAKmF,KAAOA,EACZnF,KAAKwpB,MAAQA,EACbxpB,KAAKk1B,SAAWA,EAChBl1B,KAAKsT,MAAQvP,OAAOyG,OAAO,MAE7B,UAAUrF,GACR,OAAOpB,OAAOsE,UAAU4jD,cAAc1jD,KAAKvI,KAAKmF,KAAKkD,UAAWlD,EAAKkD,WAEvE,SAAS0E,GACP,MAAMkb,EAAQlkB,OAAO0xB,eAAe1oB,GACpC,IAAIm/C,EACAC,GAAkBlkC,KACpBikC,EAAclsD,KAAKmG,SAAS8hB,IAE9B,MAAM3U,EAAQtT,KAAKsT,MACbzL,EAAKkF,EAAKlF,GACV2hB,EAAQxpB,KAAKwpB,MAAQ,IAAM3hB,EACjC,IAAKA,EACH,MAAM,IAAIZ,MAAM,2BAA6B8F,GAE/C,OAAIlF,KAAMyL,IAGVA,EAAMzL,GAAMkF,EACZq/C,GAAiBr/C,EAAMyc,EAAO0iC,GAC1BlsD,KAAKk1B,UACPhJ,GAASgJ,SAASnoB,EAAKlF,GAAIkF,EAAKqc,YALzBI,EASX,IAAI3hB,GACF,OAAO7H,KAAKsT,MAAMzL,GAEpB,WAAWkF,GACT,MAAMuG,EAAQtT,KAAKsT,MACbzL,EAAKkF,EAAKlF,GACV2hB,EAAQxpB,KAAKwpB,MACf3hB,KAAMyL,UACDA,EAAMzL,GAEX2hB,GAAS3hB,KAAMqkB,GAAS1C,YACnB0C,GAAS1C,GAAO3hB,GACnB7H,KAAKk1B,iBACA9L,GAAUvhB,KAKzB,SAASukD,GAAiBr/C,EAAMyc,EAAO0iC,GACrC,MAAMG,EAAephD,EAAMlH,OAAOyG,OAAO,MAAO,CAC9C0hD,EAAchgC,GAASgU,IAAIgsB,GAAe,GAC1ChgC,GAASgU,IAAI1W,GACbzc,EAAKmf,WAEPA,GAAS3Y,IAAIiW,EAAO6iC,GAChBt/C,EAAKoxC,eACPmO,GAAc9iC,EAAOzc,EAAKoxC,eAExBpxC,EAAKoqB,aACPjL,GAAST,SAASjC,EAAOzc,EAAKoqB,aAGlC,SAASm1B,GAAc9iC,EAAO+iC,GAC5BxoD,OAAOsD,KAAKklD,GAAQ15C,QAAQtD,IAC1B,MAAMi9C,EAAgBj9C,EAASrD,MAAM,KAC/BugD,EAAaD,EAAc39C,MAC3B69C,EAAc,CAACljC,GAAO6pB,OAAOmZ,GAAel1B,KAAK,KACjDrrB,EAAQsgD,EAAOh9C,GAAUrD,MAAM,KAC/Byf,EAAa1f,EAAM4C,MACnB6c,EAAczf,EAAMqrB,KAAK,KAC/BpL,GAAS01B,MAAM8K,EAAaD,EAAY/gC,EAAaC,KAGzD,SAASwgC,GAAkBlkC,GACzB,MAAO,OAAQA,GAAS,aAAcA,EAGxC,MAAM,GACJ,cACEjoB,KAAK2sD,YAAc,IAAI,GAAc,GAAmB,YAAY,GACpE3sD,KAAKiqB,SAAW,IAAI,GAAc,GAAS,YAC3CjqB,KAAK4F,QAAU,IAAI,GAAc7B,OAAQ,WACzC/D,KAAKsrB,OAAS,IAAI,GAAc,GAAO,UACvCtrB,KAAK4sD,iBAAmB,CAAC5sD,KAAK2sD,YAAa3sD,KAAKsrB,OAAQtrB,KAAKiqB,UAE/D,OAAO3gB,GACLtJ,KAAK6sD,MAAM,WAAYvjD,GAEzB,UAAUA,GACRtJ,KAAK6sD,MAAM,aAAcvjD,GAE3B,kBAAkBA,GAChBtJ,KAAK6sD,MAAM,WAAYvjD,EAAMtJ,KAAK2sD,aAEpC,eAAerjD,GACbtJ,KAAK6sD,MAAM,WAAYvjD,EAAMtJ,KAAKiqB,UAEpC,cAAc3gB,GACZtJ,KAAK6sD,MAAM,WAAYvjD,EAAMtJ,KAAK4F,SAEpC,aAAa0D,GACXtJ,KAAK6sD,MAAM,WAAYvjD,EAAMtJ,KAAKsrB,QAEpC,cAAczjB,GACZ,OAAO7H,KAAK8sD,KAAKjlD,EAAI7H,KAAK2sD,YAAa,cAEzC,WAAW9kD,GACT,OAAO7H,KAAK8sD,KAAKjlD,EAAI7H,KAAKiqB,SAAU,WAEtC,UAAUpiB,GACR,OAAO7H,KAAK8sD,KAAKjlD,EAAI7H,KAAK4F,QAAS,UAErC,SAASiC,GACP,OAAO7H,KAAK8sD,KAAKjlD,EAAI7H,KAAKsrB,OAAQ,SAEpC,qBAAqBhiB,GACnBtJ,KAAK6sD,MAAM,aAAcvjD,EAAMtJ,KAAK2sD,aAEtC,kBAAkBrjD,GAChBtJ,KAAK6sD,MAAM,aAAcvjD,EAAMtJ,KAAKiqB,UAEtC,iBAAiB3gB,GACftJ,KAAK6sD,MAAM,aAAcvjD,EAAMtJ,KAAK4F,SAEtC,gBAAgB0D,GACdtJ,KAAK6sD,MAAM,aAAcvjD,EAAMtJ,KAAKsrB,QAEtC,MAAMxY,EAAQxJ,EAAMyjD,GAClB,IAAIzjD,GAAMuJ,QAAQm6C,IAChB,MAAMC,EAAMF,GAAiB/sD,KAAKktD,oBAAoBF,GAClDD,GAAiBE,EAAIE,UAAUH,IAASC,IAAQjtD,KAAK4F,SAAWonD,EAAInlD,GACtE7H,KAAKotD,MAAMt6C,EAAQm6C,EAAKD,GAExBvjD,EAAKujD,EAAKjgD,IACR,MAAMsgD,EAAUN,GAAiB/sD,KAAKktD,oBAAoBngD,GAC1D/M,KAAKotD,MAAMt6C,EAAQu6C,EAAStgD,OAKpC,MAAM+F,EAAQw6C,EAAU5rD,GACtB,MAAM6rD,EAAclhD,EAAYyG,GAChC1J,EAAS1H,EAAU,SAAW6rD,GAAc,GAAI7rD,GAChD4rD,EAASx6C,GAAQpR,GACjB0H,EAAS1H,EAAU,QAAU6rD,GAAc,GAAI7rD,GAEjD,oBAAoByD,GAClB,IAAK,IAAIyE,EAAI,EAAGA,EAAI5J,KAAK4sD,iBAAiBnoD,OAAQmF,IAAK,CACrD,MAAMqjD,EAAMjtD,KAAK4sD,iBAAiBhjD,GAClC,GAAIqjD,EAAIE,UAAUhoD,GAChB,OAAO8nD,EAGX,OAAOjtD,KAAK4F,QAEd,KAAKiC,EAAIklD,EAAe5nD,GACtB,MAAM4H,EAAOggD,EAAc7sB,IAAIr4B,GAC/B,QAAaxF,IAAT0K,EACF,MAAM,IAAI9F,MAAM,IAAMY,EAAK,yBAA2B1C,EAAO,KAE/D,OAAO4H,GAGX,IAAI,GAAW,IAAI,GAEnB,MAAM,WAA0B,GAC9B,OAAO8d,GACL,MAAM5V,EAAOjV,KAAKwrC,aACXjqC,KAAM2T,EAAS,IAAMD,EACtBE,EAAqBnV,KAAKyC,MAAMmvC,oBACtC,IAAI,MAAC7gC,EAAK,MAAEsE,GAASL,GAAiCC,EAAMC,EAAQC,GAOpE,GANAnV,KAAKqtC,WAAat8B,EAClB/Q,KAAKstC,WAAaj4B,EACdS,GAAoBb,KACtBlE,EAAQ,EACRsE,EAAQH,EAAOzQ,QAEbzE,KAAKoE,QAAQmnB,SAAU,CACzB,MAAO3nB,QAASktB,EAAI,SAAEorB,GAAYjnC,EAClC6b,EAAKhrB,OAAS9F,KAAKyC,MACnBquB,EAAK0S,cAAgBxjC,KAAK2E,MAC1BmsB,EAAKqrB,aAAeD,EAASC,WAC7BrrB,EAAK5b,OAASA,EACd,MAAM9Q,EAAUpE,KAAK+wC,6BAA6BlmB,GAClDzmB,EAAQu9B,QAAU3hC,KAAKoE,QAAQu9B,QAC/B3hC,KAAKi3C,cAAcnmB,OAAMzuB,EAAW,CAClC+5C,UAAWjnC,EACX/Q,WACCymB,GAEL7qB,KAAK2yC,eAAez9B,EAAQnE,EAAOsE,EAAOwV,GAE5C,cACE,MAAM,SAACU,GAAYvrB,KAAKoE,SACnBpE,KAAKgvC,oBAAsBzjB,IAC9BvrB,KAAKgvC,mBAAqB,GAASwe,WAAW,SAEhDnX,MAAMxI,cAER,eAAe34B,EAAQnE,EAAOsE,EAAOwV,GACnC,MAAM0rB,EAAiB,UAAT1rB,GACR,OAACtV,EAAM,OAAE41B,EAAM,SAAE0B,EAAQ,SAAEqP,GAAYl8C,KAAKwrC,YAC5CqG,EAAY7xC,KAAKgxC,0BAA0BjgC,EAAO8Z,GAClD8mB,EAAgB3xC,KAAK+xC,iBAAiBF,GACtCG,EAAiBhyC,KAAKgyC,eAAennB,EAAM8mB,GAC3CjG,EAAQn2B,EAAOE,KACfk2B,EAAQR,EAAO11B,MACf,SAAC0lB,EAAQ,QAAEwG,GAAW3hC,KAAKoE,QAC3Bi4C,EAAevtC,EAASqsB,GAAYA,EAAW31B,OAAOgI,kBACtD8uC,EAAet8C,KAAKyC,MAAMmvC,qBAAuB2E,GAAkB,SAAT1rB,EAChE,IAAI0xB,EAAaxrC,EAAQ,GAAK/Q,KAAK0wC,UAAU3/B,EAAQ,GACrD,IAAK,IAAInH,EAAImH,EAAOnH,EAAImH,EAAQsE,IAASzL,EAAG,CAC1C,MAAM0lB,EAAQpa,EAAOtL,GACf2uB,EAASv4B,KAAK0wC,UAAU9mC,GACxBm+B,EAAauU,EAAehtB,EAAQ,GACpCktB,EAAWr0C,EAAcowB,EAAOoT,IAChCrR,EAASyN,EAAW2D,GAASn2B,EAAOM,iBAAiB0iB,EAAOmT,GAAQ9hC,GACpE2wB,EAASwN,EAAW4D,GAAS4K,GAASiG,EAAWrR,EAAOqL,eAAiBrL,EAAOt1B,iBAAiBg3B,EAAW7sC,KAAKgqC,WAAWmB,EAAQ5S,EAAQsU,GAAYtU,EAAOoT,GAAQ/hC,GAC7Km+B,EAAWpP,KAAO3pB,MAAMsrB,IAAWtrB,MAAMurB,IAAWiiB,EACpDzU,EAAWlF,KAAOj5B,EAAI,GAAMwD,KAAK8B,IAAIqpB,EAAOmT,GAAS6Q,EAAW7Q,IAAW2Q,EACvE1a,IACFoG,EAAWxP,OAASA,EACpBwP,EAAWqE,IAAM8P,EAAS36C,KAAKqI,IAE7BooC,IACFjK,EAAW3jC,QAAUutC,GAAiB3xC,KAAKgxC,0BAA0BpnC,EAAG0lB,EAAM0Y,OAAS,SAAWnd,IAE/FyxB,GACHt8C,KAAKi3C,cAAc3nB,EAAO1lB,EAAGm+B,EAAYld,GAE3C0xB,EAAahkB,EAEfv4B,KAAKiyC,oBAAoBN,EAAe9mB,EAAMgnB,GAEhD,iBACE,MAAM58B,EAAOjV,KAAKwrC,YACZjqC,EAAO0T,EAAK1T,MAAQ,GAC1B,IAAKvB,KAAKoE,QAAQmnB,SAAU,CAC1B,IAAI9b,EAAM,EACV,IAAK,IAAI7F,EAAIrI,EAAKkD,OAAS,EAAGmF,GAAK,IAAKA,EACtC6F,EAAMrC,KAAKqC,IAAIA,EAAKlO,EAAKqI,GAAGkD,KAAK9M,KAAKgxC,0BAA0BpnC,IAAM,GAExE,OAAO6F,EAAM,GAAKA,EAEpB,MAAM7L,EAAUqR,EAAKrR,QACf64C,EAAS74C,EAAQQ,SAAWR,EAAQQ,QAAQ+qB,aAAe,EACjE,IAAK5tB,EAAKkD,OACR,OAAOg4C,EAET,MAAM3jB,EAAav3B,EAAK,GAAGuL,KAAK9M,KAAKgxC,0BAA0B,IACzD0L,EAAYn7C,EAAKA,EAAKkD,OAAS,GAAGqI,KAAK9M,KAAKgxC,0BAA0BzvC,EAAKkD,OAAS,IAC1F,OAAO2I,KAAKqC,IAAIgtC,EAAQ3jB,EAAY4jB,GAAa,GAGrD,GAAkB70C,GAAK,UACvB,GAAkBqkB,SAAW,CAC3B8iB,oBAAoB,EACpBkC,gBAAiB,QACjB3lB,UAAU,EACV2D,MAAM,GAER,GAAkB9F,UAAY,CAC5BwB,YAAa,CACXC,KAAM,SAERjlB,QAAS,CACP+zC,QAAS,CACPhV,UAAW,CACT,QACE,MAAO,IAET,MAAM53B,GACJ,MAAO,IAAMA,EAAKxI,MAAQ,KAAOwI,EAAKkvC,eAAiB,QAK/D3wB,OAAQ,CACN7f,EAAG,CACDtG,KAAM,UAERwG,EAAG,CACDxG,KAAM,YAiBZ,SAAS,KACP,MAAM,IAAI8B,MAAM,mFAElB,MAAMwmD,GACJ,YAAYrpD,GACVpE,KAAKoE,QAAUA,GAAW,GAE5B,KAAKjC,IACL,UACE,OAAO,KAET,MAAM3B,EAAO+/B,GACX,OAAO,KAET,OAAOmtB,EAAWntB,GAChB,OAAO,KAET,IAAImtB,EAAWC,EAAQC,GACrB,OAAO,KAET,KAAKhhD,EAAGC,EAAG+gD,GACT,OAAO,KAET,QAAQF,EAAWE,EAAMC,GACvB,OAAO,KAET,MAAMH,EAAWE,GACf,OAAO,MAGXH,GAAYv4B,SAAW,SAAS44B,GAC9B/pD,OAAOC,OAAOypD,GAAYplD,UAAWylD,IAEvC,IAAIC,GAAW,CACbC,MAAOP,IAGT,SAASQ,GAAaC,EAASz4C,EAAMjV,EAAOsqB,GAC1C,MAAM,WAACygB,EAAU,KAAEhqC,EAAI,QAAE+T,GAAW44C,EAC9B34C,EAASg2B,EAAWC,YAAYj2B,OACtC,GAAIA,GAAUE,IAASF,EAAOE,MAAiB,MAATA,GAAgBH,GAAW/T,EAAKkD,OAAQ,CAC5E,MAAM0pD,EAAe54C,EAAOquC,eAAiB1xC,GAAgBF,GAC7D,IAAK8Y,EACH,OAAOqjC,EAAa5sD,EAAMkU,EAAMjV,GAC3B,GAAI+qC,EAAW6B,eAAgB,CACpC,MAAMhR,EAAK76B,EAAK,GACVyM,EAA+B,oBAAhBouB,EAAGgyB,UAA2BhyB,EAAGgyB,SAAS34C,GAC/D,GAAIzH,EAAO,CACT,MAAM+C,EAAQo9C,EAAa5sD,EAAMkU,EAAMjV,EAAQwN,GACzCgD,EAAMm9C,EAAa5sD,EAAMkU,EAAMjV,EAAQwN,GAC7C,MAAO,CAAC+D,GAAIhB,EAAMgB,GAAID,GAAId,EAAIc,MAIpC,MAAO,CAACC,GAAI,EAAGD,GAAIvQ,EAAKkD,OAAS,GAEnC,SAAS4pD,GAAyB5rD,EAAOgT,EAAMmtC,EAAUr8C,EAASukB,GAChE,MAAMgf,EAAWrnC,EAAMqpD,+BACjBtrD,EAAQoiD,EAASntC,GACvB,IAAK,IAAI7L,EAAI,EAAGK,EAAO6/B,EAASrlC,OAAQmF,EAAIK,IAAQL,EAAG,CACrD,MAAM,MAACjF,EAAK,KAAEpD,GAAQuoC,EAASlgC,IACzB,GAACmI,EAAE,GAAED,GAAMm8C,GAAankB,EAASlgC,GAAI6L,EAAMjV,EAAOsqB,GACxD,IAAK,IAAI9D,EAAIjV,EAAIiV,GAAKlV,IAAMkV,EAAG,CAC7B,MAAMkV,EAAU36B,EAAKylB,GAChBkV,EAAQvD,MACXpyB,EAAQ21B,EAASv3B,EAAOqiB,KAKhC,SAASsnC,GAAyB74C,GAChC,MAAM84C,GAA8B,IAAvB94C,EAAK5K,QAAQ,KACpB2jD,GAA8B,IAAvB/4C,EAAK5K,QAAQ,KAC1B,OAAO,SAAS6F,EAAKC,GACnB,MAAM89C,EAASF,EAAOnhD,KAAK8B,IAAIwB,EAAIjF,EAAIkF,EAAIlF,GAAK,EAC1CijD,EAASF,EAAOphD,KAAK8B,IAAIwB,EAAI/E,EAAIgF,EAAIhF,GAAK,EAChD,OAAOyB,KAAKuB,KAAKvB,KAAKiB,IAAIogD,EAAQ,GAAKrhD,KAAKiB,IAAIqgD,EAAQ,KAG5D,SAASC,GAAkBlsD,EAAOmgD,EAAUntC,EAAMuoC,EAAkBjzB,GAClE,MAAMzX,EAAQ,GACd,IAAKyX,IAAqBtoB,EAAMmsD,cAAchM,GAC5C,OAAOtvC,EAET,MAAMu7C,EAAiB,SAAS3yB,EAAS9xB,EAAczF,IAChDomB,GAAqBsE,GAAe6M,EAASz5B,EAAMquC,UAAW,KAG/D5U,EAAQ4yB,QAAQlM,EAASn3C,EAAGm3C,EAASj3C,EAAGqyC,IAC1C1qC,EAAMxP,KAAK,CAACo4B,UAAS9xB,eAAczF,WAIvC,OADA0pD,GAAyB5rD,EAAOgT,EAAMmtC,EAAUiM,GAAgB,GACzDv7C,EAET,SAASy7C,GAAsBtsD,EAAOmgD,EAAUntC,EAAMuoC,GACpD,IAAI1qC,EAAQ,GACZ,SAASu7C,EAAe3yB,EAAS9xB,EAAczF,GAC7C,MAAM,WAACo0C,EAAU,SAAEC,GAAY9c,EAAQ+hB,SAAS,CAAC,aAAc,YAAaD,IACtE,MAAC1tC,GAASN,EAAkBksB,EAAS,CAACzwB,EAAGm3C,EAASn3C,EAAGE,EAAGi3C,EAASj3C,IACnEmF,GAAcR,EAAOyoC,EAAYC,IACnC1lC,EAAMxP,KAAK,CAACo4B,UAAS9xB,eAAczF,UAIvC,OADA0pD,GAAyB5rD,EAAOgT,EAAMmtC,EAAUiM,GACzCv7C,EAET,SAAS07C,GAAyBvsD,EAAOmgD,EAAUntC,EAAMqV,EAAWkzB,EAAkBjzB,GACpF,IAAIzX,EAAQ,GACZ,MAAM27C,EAAiBX,GAAyB74C,GAChD,IAAIy5C,EAAc1pD,OAAOgI,kBACzB,SAASqhD,EAAe3yB,EAAS9xB,EAAczF,GAC7C,MAAMmqD,EAAU5yB,EAAQ4yB,QAAQlM,EAASn3C,EAAGm3C,EAASj3C,EAAGqyC,GACxD,GAAIlzB,IAAcgkC,EAChB,OAEF,MAAM9X,EAAS9a,EAAQizB,eAAenR,GAChCoR,IAAgBrkC,GAAoBtoB,EAAMmsD,cAAc5X,GAC9D,IAAKoY,IAAgBN,EACnB,OAEF,MAAMt+C,EAAWy+C,EAAerM,EAAU5L,GACtCxmC,EAAW0+C,GACb57C,EAAQ,CAAC,CAAC4oB,UAAS9xB,eAAczF,UACjCuqD,EAAc1+C,GACLA,IAAa0+C,GACtB57C,EAAMxP,KAAK,CAACo4B,UAAS9xB,eAAczF,UAIvC,OADA0pD,GAAyB5rD,EAAOgT,EAAMmtC,EAAUiM,GACzCv7C,EAET,SAAS+7C,GAAgB5sD,EAAOmgD,EAAUntC,EAAMqV,EAAWkzB,EAAkBjzB,GAC3E,OAAKA,GAAqBtoB,EAAMmsD,cAAchM,GAG9B,MAATntC,GAAiBqV,EAEpBkkC,GAAyBvsD,EAAOmgD,EAAUntC,EAAMqV,EAAWkzB,EAAkBjzB,GAD7EgkC,GAAsBtsD,EAAOmgD,EAAUntC,EAAMuoC,GAHxC,GAMX,SAASsR,GAAa7sD,EAAOmgD,EAAUntC,EAAMqV,EAAWkzB,GACtD,MAAM1qC,EAAQ,GACRi8C,EAAuB,MAAT95C,EAAe,WAAa,WAChD,IAAI+5C,GAAiB,EAOrB,OANAnB,GAAyB5rD,EAAOgT,EAAMmtC,EAAU,CAAC1mB,EAAS9xB,EAAczF,KAClEu3B,EAAQqzB,GAAa3M,EAASntC,GAAOuoC,KACvC1qC,EAAMxP,KAAK,CAACo4B,UAAS9xB,eAAczF,UACnC6qD,EAAiBA,GAAkBtzB,EAAQ4yB,QAAQlM,EAASn3C,EAAGm3C,EAASj3C,EAAGqyC,MAG3ElzB,IAAc0kC,EACT,GAEFl8C,EAET,IAAIm8C,GAAc,CAChBpB,4BACAqB,MAAO,CACL,MAAMjtD,EAAOyK,EAAG9I,EAAS45C,GACvB,MAAM4E,EAAWxlB,GAAoBlwB,EAAGzK,GAClCgT,EAAOrR,EAAQqR,MAAQ,IACvBsV,EAAmB3mB,EAAQ2mB,mBAAoB,EAC/CzX,EAAQlP,EAAQ0mB,UAClB6jC,GAAkBlsD,EAAOmgD,EAAUntC,EAAMuoC,EAAkBjzB,GAC3DskC,GAAgB5sD,EAAOmgD,EAAUntC,GAAM,EAAOuoC,EAAkBjzB,GAC9Dd,EAAW,GACjB,OAAK3W,EAAM7O,QAGXhC,EAAMqpD,+BAA+Bj5C,QAASoC,IAC5C,MAAMtQ,EAAQ2O,EAAM,GAAG3O,MACjBu3B,EAAUjnB,EAAK1T,KAAKoD,GACtBu3B,IAAYA,EAAQvD,MACtB1O,EAASnmB,KAAK,CAACo4B,UAAS9xB,aAAc6K,EAAKtQ,MAAOA,YAG/CslB,GATE,IAWX,QAAQxnB,EAAOyK,EAAG9I,EAAS45C,GACzB,MAAM4E,EAAWxlB,GAAoBlwB,EAAGzK,GAClCgT,EAAOrR,EAAQqR,MAAQ,KACvBsV,EAAmB3mB,EAAQ2mB,mBAAoB,EACrD,IAAIzX,EAAQlP,EAAQ0mB,UAChB6jC,GAAkBlsD,EAAOmgD,EAAUntC,EAAMuoC,EAAkBjzB,GAC7DskC,GAAgB5sD,EAAOmgD,EAAUntC,GAAM,EAAOuoC,EAAkBjzB,GAClE,GAAIzX,EAAM7O,OAAS,EAAG,CACpB,MAAM2F,EAAekJ,EAAM,GAAGlJ,aACxB7I,EAAOkB,EAAMmsC,eAAexkC,GAAc7I,KAChD+R,EAAQ,GACR,IAAK,IAAI1J,EAAI,EAAGA,EAAIrI,EAAKkD,SAAUmF,EACjC0J,EAAMxP,KAAK,CAACo4B,QAAS36B,EAAKqI,GAAIQ,eAAczF,MAAOiF,IAGvD,OAAO0J,GAET,MAAM7Q,EAAOyK,EAAG9I,EAAS45C,GACvB,MAAM4E,EAAWxlB,GAAoBlwB,EAAGzK,GAClCgT,EAAOrR,EAAQqR,MAAQ,KACvBsV,EAAmB3mB,EAAQ2mB,mBAAoB,EACrD,OAAO4jC,GAAkBlsD,EAAOmgD,EAAUntC,EAAMuoC,EAAkBjzB,IAEpE,QAAQtoB,EAAOyK,EAAG9I,EAAS45C,GACzB,MAAM4E,EAAWxlB,GAAoBlwB,EAAGzK,GAClCgT,EAAOrR,EAAQqR,MAAQ,KACvBsV,EAAmB3mB,EAAQ2mB,mBAAoB,EACrD,OAAOskC,GAAgB5sD,EAAOmgD,EAAUntC,EAAMrR,EAAQ0mB,UAAWkzB,EAAkBjzB,IAErF,EAAEtoB,EAAOyK,EAAG9I,EAAS45C,GACnB,MAAM4E,EAAWxlB,GAAoBlwB,EAAGzK,GACxC,OAAO6sD,GAAa7sD,EAAOmgD,EAAU,IAAKx+C,EAAQ0mB,UAAWkzB,IAE/D,EAAEv7C,EAAOyK,EAAG9I,EAAS45C,GACnB,MAAM4E,EAAWxlB,GAAoBlwB,EAAGzK,GACxC,OAAO6sD,GAAa7sD,EAAOmgD,EAAU,IAAKx+C,EAAQ0mB,UAAWkzB,MAKnE,MAAM2R,GAAmB,CAAC,OAAQ,MAAO,QAAS,UAClD,SAASC,GAAiBtgD,EAAOszC,GAC/B,OAAOtzC,EAAMooB,OAAOlsB,GAAKA,EAAEixB,MAAQmmB,GAErC,SAASiN,GAA4BvgD,EAAOmG,GAC1C,OAAOnG,EAAMooB,OAAOlsB,IAA0C,IAArCmkD,GAAiB9kD,QAAQW,EAAEixB,MAAejxB,EAAEwxB,IAAIvnB,OAASA,GAEpF,SAASq6C,GAAaxgD,EAAO3F,GAC3B,OAAO2F,EAAMV,KAAK,CAAChC,EAAGC,KACpB,MAAM3C,EAAKP,EAAUkD,EAAID,EACnBzC,EAAKR,EAAUiD,EAAIC,EACzB,OAAO3C,EAAGue,SAAWte,EAAGse,OACtBve,EAAGvF,MAAQwF,EAAGxF,MACduF,EAAGue,OAASte,EAAGse,SAGrB,SAASsnC,GAAUC,GACjB,MAAMC,EAAc,GACpB,IAAIrmD,EAAGK,EAAM+yB,EAAKP,EAAKwN,EAAOimB,EAC9B,IAAKtmD,EAAI,EAAGK,GAAQ+lD,GAAS,IAAIvrD,OAAQmF,EAAIK,IAAQL,EACnDozB,EAAMgzB,EAAMpmD,KACVg5C,SAAUnmB,EAAKr4B,SAAU6lC,QAAOimB,cAAc,IAAMlzB,GACtDizB,EAAYnsD,KAAK,CACfa,MAAOiF,EACPozB,MACAP,MACA8Y,WAAYvY,EAAIqY,eAChB5sB,OAAQuU,EAAIvU,OACZwhB,MAAOA,GAAUxN,EAAMwN,EACvBimB,gBAGJ,OAAOD,EAET,SAASE,GAAYC,GACnB,MAAMtlB,EAAS,GACf,IAAK,MAAMulB,KAAQD,EAAS,CAC1B,MAAM,MAACnmB,EAAK,IAAExN,EAAG,YAAEyzB,GAAeG,EAClC,IAAKpmB,IAAU0lB,GAAiB9rD,SAAS44B,GACvC,SAEF,MAAMrG,EAAS0U,EAAOb,KAAWa,EAAOb,GAAS,CAAC50B,MAAO,EAAGi7C,OAAQ,EAAG7nC,OAAQ,EAAG3b,KAAM,IACxFspB,EAAO/gB,QACP+gB,EAAO3N,QAAUynC,EAEnB,OAAOplB,EAET,SAASylB,GAAcH,EAASI,GAC9B,MAAM1lB,EAASqlB,GAAYC,IACrB,aAACK,EAAY,cAAEC,GAAiBF,EACtC,IAAI5mD,EAAGK,EAAM0mD,EACb,IAAK/mD,EAAI,EAAGK,EAAOmmD,EAAQ3rD,OAAQmF,EAAIK,IAAQL,EAAG,CAChD+mD,EAASP,EAAQxmD,GACjB,MAAM,SAACi+C,GAAY8I,EAAO3zB,IACpBiN,EAAQa,EAAO6lB,EAAO1mB,OACtBzD,EAASyD,GAAS0mB,EAAOT,YAAcjmB,EAAMxhB,OAC/CkoC,EAAOpb,YACTob,EAAOprD,MAAQihC,EAASA,EAASiqB,EAAe5I,GAAY2I,EAAOI,eACnED,EAAOlrD,OAASirD,IAEhBC,EAAOprD,MAAQkrD,EACfE,EAAOlrD,OAAS+gC,EAASA,EAASkqB,EAAgB7I,GAAY2I,EAAOK,iBAGzE,OAAO/lB,EAET,SAASgmB,GAAiBd,GACxB,MAAMC,EAAcF,GAAUC,GACxBnI,EAAWiI,GAAaG,EAAYv4B,OAAO24B,GAAQA,EAAKrzB,IAAI6qB,WAAW,GACvEjzC,EAAOk7C,GAAaF,GAAiBK,EAAa,SAAS,GAC3Dp7C,EAAQi7C,GAAaF,GAAiBK,EAAa,UACnDxgC,EAAMqgC,GAAaF,GAAiBK,EAAa,QAAQ,GACzDvgC,EAASogC,GAAaF,GAAiBK,EAAa,WACpDc,EAAmBlB,GAA4BI,EAAa,KAC5De,EAAiBnB,GAA4BI,EAAa,KAChE,MAAO,CACLpI,WACAoJ,WAAYr8C,EAAKy+B,OAAO5jB,GACxByhC,eAAgBr8C,EAAMw+B,OAAO2d,GAAgB3d,OAAO3jB,GAAQ2jB,OAAO0d,GACnEjgB,UAAW8e,GAAiBK,EAAa,aACzCkB,SAAUv8C,EAAKy+B,OAAOx+B,GAAOw+B,OAAO2d,GACpCzb,WAAY9lB,EAAI4jB,OAAO3jB,GAAQ2jB,OAAO0d,IAG1C,SAASK,GAAeC,EAAYvgB,EAAWlkC,EAAGC,GAChD,OAAOO,KAAKqC,IAAI4hD,EAAWzkD,GAAIkkC,EAAUlkC,IAAMQ,KAAKqC,IAAI4hD,EAAWxkD,GAAIikC,EAAUjkC,IAEnF,SAASykD,GAAiBD,EAAYE,GACpCF,EAAW5hC,IAAMriB,KAAKqC,IAAI4hD,EAAW5hC,IAAK8hC,EAAW9hC,KACrD4hC,EAAWz8C,KAAOxH,KAAKqC,IAAI4hD,EAAWz8C,KAAM28C,EAAW38C,MACvDy8C,EAAW3hC,OAAStiB,KAAKqC,IAAI4hD,EAAW3hC,OAAQ6hC,EAAW7hC,QAC3D2hC,EAAWx8C,MAAQzH,KAAKqC,IAAI4hD,EAAWx8C,MAAO08C,EAAW18C,OAE3D,SAAS28C,GAAW1gB,EAAW0f,EAAQG,EAAQ7lB,GAC7C,MAAM,IAACrO,EAAG,IAAEO,GAAO2zB,EACbU,EAAavgB,EAAUugB,WAC7B,IAAK5oD,EAASg0B,GAAM,CACdk0B,EAAO7jD,OACTgkC,EAAUrU,IAAQk0B,EAAO7jD,MAE3B,MAAMm9B,EAAQa,EAAO6lB,EAAO1mB,QAAU,CAACn9B,KAAM,EAAGuI,MAAO,GACvD40B,EAAMn9B,KAAOM,KAAKqC,IAAIw6B,EAAMn9B,KAAM6jD,EAAOpb,WAAavY,EAAIv3B,OAASu3B,EAAIz3B,OACvEorD,EAAO7jD,KAAOm9B,EAAMn9B,KAAOm9B,EAAM50B,MACjCy7B,EAAUrU,IAAQk0B,EAAO7jD,KAEvBkwB,EAAIy0B,YACNH,GAAiBD,EAAYr0B,EAAIy0B,cAEnC,MAAMC,EAAWtkD,KAAKqC,IAAI,EAAG+gD,EAAOmB,WAAaP,GAAeC,EAAYvgB,EAAW,OAAQ,UACzF8gB,EAAYxkD,KAAKqC,IAAI,EAAG+gD,EAAOqB,YAAcT,GAAeC,EAAYvgB,EAAW,MAAO,WAC1FghB,EAAeJ,IAAa5gB,EAAU11B,EACtC22C,EAAgBH,IAAc9gB,EAAUh4B,EAG9C,OAFAg4B,EAAU11B,EAAIs2C,EACd5gB,EAAUh4B,EAAI84C,EACPjB,EAAOpb,WACV,CAACyc,KAAMF,EAAcG,MAAOF,GAC5B,CAACC,KAAMD,EAAeE,MAAOH,GAEnC,SAASI,GAAiBphB,GACxB,MAAMugB,EAAavgB,EAAUugB,WAC7B,SAASc,EAAU11B,GACjB,MAAMvI,EAAS9mB,KAAKqC,IAAI4hD,EAAW50B,GAAOqU,EAAUrU,GAAM,GAE1D,OADAqU,EAAUrU,IAAQvI,EACXA,EAET4c,EAAUnlC,GAAKwmD,EAAU,OACzBrhB,EAAUrlC,GAAK0mD,EAAU,QACzBA,EAAU,SACVA,EAAU,UAEZ,SAASC,GAAW7c,EAAYzE,GAC9B,MAAMugB,EAAavgB,EAAUugB,WAC7B,SAASgB,EAAmB/1B,GAC1B,MAAM9M,EAAS,CAAC5a,KAAM,EAAG6a,IAAK,EAAG5a,MAAO,EAAG6a,OAAQ,GAInD,OAHA4M,EAAUzpB,QAAS4pB,IACjBjN,EAAOiN,GAAOrvB,KAAKqC,IAAIqhC,EAAUrU,GAAM40B,EAAW50B,MAE7CjN,EAET,OACI6iC,EADG9c,EACgB,CAAC,OAAQ,SACT,CAAC,MAAO,WAEjC,SAAS+c,GAAStC,EAAOlf,EAAW0f,EAAQ1lB,GAC1C,MAAMynB,EAAa,GACnB,IAAI3oD,EAAGK,EAAM0mD,EAAQ3zB,EAAKw1B,EAAOj8C,EACjC,IAAK3M,EAAI,EAAGK,EAAO+lD,EAAMvrD,OAAQ+tD,EAAQ,EAAG5oD,EAAIK,IAAQL,EAAG,CACzD+mD,EAASX,EAAMpmD,GACfozB,EAAM2zB,EAAO3zB,IACbA,EAAIt6B,OACFiuD,EAAOprD,OAASurC,EAAU11B,EAC1Bu1C,EAAOlrD,QAAUqrC,EAAUh4B,EAC3Bs5C,GAAWzB,EAAOpb,WAAYzE,IAEhC,MAAM,KAACkhB,EAAI,MAAEC,GAAST,GAAW1gB,EAAW0f,EAAQG,EAAQ7lB,GAC5D0nB,GAASR,GAAQO,EAAW9tD,OAC5B8R,EAAUA,GAAW07C,EAChBj1B,EAAI6qB,UACP0K,EAAWzuD,KAAK6sD,GAGpB,OAAO6B,GAASF,GAASC,EAAYzhB,EAAW0f,EAAQ1lB,IAAWv0B,EAErE,SAASk8C,GAAWz1B,EAAKpoB,EAAM6a,EAAKlqB,EAAOE,GACzCu3B,EAAIvN,IAAMA,EACVuN,EAAIpoB,KAAOA,EACXooB,EAAInoB,MAAQD,EAAOrP,EACnBy3B,EAAItN,OAASD,EAAMhqB,EACnBu3B,EAAIz3B,MAAQA,EACZy3B,EAAIv3B,OAASA,EAEf,SAASitD,GAAW1C,EAAOlf,EAAW0f,EAAQ1lB,GAC5C,MAAM6nB,EAAcnC,EAAOzP,QAC3B,IAAI,EAACt1C,EAAC,EAAEE,GAAKmlC,EACb,IAAK,MAAM6f,KAAUX,EAAO,CAC1B,MAAMhzB,EAAM2zB,EAAO3zB,IACbiN,EAAQa,EAAO6lB,EAAO1mB,QAAU,CAAC50B,MAAO,EAAGi7C,OAAQ,EAAG7nC,OAAQ,GAC9DA,EAAUkoC,EAAOT,YAAcjmB,EAAMxhB,QAAW,EACtD,GAAIkoC,EAAOpb,WAAY,CACrB,MAAMhwC,EAAQurC,EAAU11B,EAAIqN,EACtBhjB,EAASwkC,EAAMn9B,MAAQkwB,EAAIv3B,OAC7BgH,EAAQw9B,EAAMl5B,SAChBpF,EAAIs+B,EAAMl5B,OAERisB,EAAI6qB,SACN4K,GAAWz1B,EAAK21B,EAAY/9C,KAAMjJ,EAAG6kD,EAAOmB,WAAagB,EAAY99C,MAAQ89C,EAAY/9C,KAAMnP,GAE/FgtD,GAAWz1B,EAAK8T,EAAUl8B,KAAOq1B,EAAMqmB,OAAQ3kD,EAAGpG,EAAOE,GAE3DwkC,EAAMl5B,MAAQpF,EACds+B,EAAMqmB,QAAU/qD,EAChBoG,EAAIqxB,EAAItN,WACH,CACL,MAAMjqB,EAASqrC,EAAUh4B,EAAI2P,EACvBljB,EAAQ0kC,EAAMn9B,MAAQkwB,EAAIz3B,MAC5BkH,EAAQw9B,EAAMl5B,SAChBtF,EAAIw+B,EAAMl5B,OAERisB,EAAI6qB,SACN4K,GAAWz1B,EAAKvxB,EAAGknD,EAAYljC,IAAKlqB,EAAOirD,EAAOqB,YAAcc,EAAYjjC,OAASijC,EAAYljC,KAEjGgjC,GAAWz1B,EAAKvxB,EAAGqlC,EAAUrhB,IAAMwa,EAAMqmB,OAAQ/qD,EAAOE,GAE1DwkC,EAAMl5B,MAAQtF,EACdw+B,EAAMqmB,QAAU7qD,EAChBgG,EAAIuxB,EAAInoB,OAGZi8B,EAAUrlC,EAAIA,EACdqlC,EAAUnlC,EAAIA,EAEhBugB,GAAS3Y,IAAI,SAAU,CACrBq/C,aAAa,EACb7R,QAAS,CACPtxB,IAAK,EACL5a,MAAO,EACP6a,OAAQ,EACR9a,KAAM,KAGV,IAAIw7C,GAAU,CACZ,OAAO3tD,EAAOsK,GACPtK,EAAMutD,QACTvtD,EAAMutD,MAAQ,IAEhBjjD,EAAK86C,SAAW96C,EAAK86C,WAAY,EACjC96C,EAAK61C,SAAW71C,EAAK61C,UAAY,MACjC71C,EAAK0b,OAAS1b,EAAK0b,QAAU,EAC7B1b,EAAK8lD,QAAU9lD,EAAK8lD,SAAW,WAC7B,MAAO,CAAC,CACNjH,EAAG,EACH,KAAK9a,GACH/jC,EAAKu4B,KAAKwL,OAIhBruC,EAAMutD,MAAMlsD,KAAKiJ,IAEnB,UAAUtK,EAAOqwD,GACf,MAAMnuD,EAAQlC,EAAMutD,MAAQvtD,EAAMutD,MAAMnlD,QAAQioD,IAAe,GAChD,IAAXnuD,GACFlC,EAAMutD,MAAM58C,OAAOzO,EAAO,IAG9B,UAAUlC,EAAOsK,EAAM3I,GACrB2I,EAAK86C,SAAWzjD,EAAQyjD,SACxB96C,EAAK61C,SAAWx+C,EAAQw+C,SACxB71C,EAAK0b,OAASrkB,EAAQqkB,QAExB,OAAOhmB,EAAO8C,EAAOE,EAAQstD,GAC3B,IAAKtwD,EACH,OAEF,MAAMs+C,EAAU1tB,GAAU5wB,EAAM2B,QAAQusD,OAAO5P,SACzC6P,EAAiBxjD,KAAKqC,IAAIlK,EAAQw7C,EAAQx7C,MAAO,GACjDsrD,EAAkBzjD,KAAKqC,IAAIhK,EAASs7C,EAAQt7C,OAAQ,GACpDuqD,EAAQc,GAAiBruD,EAAMutD,OAC/BgD,EAAgBhD,EAAMmB,SACtB8B,EAAkBjD,EAAMza,WAC9B9rC,EAAKhH,EAAMutD,MAAOhzB,IACgB,oBAArBA,EAAIk2B,cACbl2B,EAAIk2B,iBAGR,MAAMC,EAA0BH,EAAc/sB,OAAO,CAAC4U,EAAOwV,IAC3DA,EAAKrzB,IAAI54B,UAAwC,IAA7BisD,EAAKrzB,IAAI54B,QAAQs5C,QAAoB7C,EAAQA,EAAQ,EAAG,IAAM,EAC9E2V,EAASzsD,OAAOytC,OAAO,CAC3BmgB,WAAYpsD,EACZssD,YAAapsD,EACbs7C,UACA6P,iBACAC,kBACAJ,aAAcG,EAAiB,EAAIuC,EACnCzC,cAAeG,EAAkB,IAE7BQ,EAAattD,OAAOC,OAAO,GAAI+8C,GACrCuQ,GAAiBD,EAAYh+B,GAAU0/B,IACvC,MAAMjiB,EAAY/sC,OAAOC,OAAO,CAC9BqtD,aACAj2C,EAAGw1C,EACH93C,EAAG+3C,EACHplD,EAAGs1C,EAAQnsC,KACXjJ,EAAGo1C,EAAQtxB,KACVsxB,GACGjW,EAASylB,GAAcyC,EAAc3f,OAAO4f,GAAkBzC,GACpE8B,GAAStC,EAAMnI,SAAU/W,EAAW0f,EAAQ1lB,GAC5CwnB,GAASU,EAAeliB,EAAW0f,EAAQ1lB,GACvCwnB,GAASW,EAAiBniB,EAAW0f,EAAQ1lB,IAC/CwnB,GAASU,EAAeliB,EAAW0f,EAAQ1lB,GAE7ConB,GAAiBphB,GACjB4hB,GAAW1C,EAAMiB,WAAYngB,EAAW0f,EAAQ1lB,GAChDgG,EAAUrlC,GAAKqlC,EAAU11B,EACzB01B,EAAUnlC,GAAKmlC,EAAUh4B,EACzB45C,GAAW1C,EAAMkB,eAAgBpgB,EAAW0f,EAAQ1lB,GACpDroC,EAAMquC,UAAY,CAChBl8B,KAAMk8B,EAAUl8B,KAChB6a,IAAKqhB,EAAUrhB,IACf5a,MAAOi8B,EAAUl8B,KAAOk8B,EAAU11B,EAClCsU,OAAQohB,EAAUrhB,IAAMqhB,EAAUh4B,EAClCrT,OAAQqrC,EAAUh4B,EAClBvT,MAAOurC,EAAU11B,GAEnB3R,EAAKumD,EAAMlf,UAAY6f,IACrB,MAAM3zB,EAAM2zB,EAAO3zB,IACnBj5B,OAAOC,OAAOg5B,EAAKv6B,EAAMquC,WACzB9T,EAAIt6B,OAAOouC,EAAU11B,EAAG01B,EAAUh4B,EAAG,CAAClE,KAAM,EAAG6a,IAAK,EAAG5a,MAAO,EAAG6a,OAAQ,QAK/E,MAAM0jC,GACJ,eAAepsD,EAAQs3B,IACvB,eAAel8B,GACb,OAAO,EAET,iBAAiBK,EAAO0C,EAAMoN,IAC9B,oBAAoB9P,EAAO0C,EAAMoN,IACjC,sBACE,OAAO,EAET,eAAe2pB,EAAS32B,EAAOE,EAAQ64B,GAGrC,OAFA/4B,EAAQ6H,KAAKqC,IAAI,EAAGlK,GAAS22B,EAAQ32B,OACrCE,EAASA,GAAUy2B,EAAQz2B,OACpB,CACLF,QACAE,OAAQ2H,KAAKqC,IAAI,EAAG6uB,EAAclxB,KAAKkB,MAAM/I,EAAQ+4B,GAAe74B,IAGxE,WAAWuB,GACT,OAAO,EAET,aAAashC,KAIf,MAAM+qB,WAAsBD,GAC1B,eAAermD,GACb,OAAOA,GAAQA,EAAK5F,YAAc4F,EAAK5F,WAAW,OAAS,KAE7D,aAAamhC,GACXA,EAAOlkC,QAAQulB,WAAY,GAI/B,MAAM2pC,GAAc,WACdC,GAAc,CAClBC,WAAY,YACZC,UAAW,YACXC,SAAU,UACVC,aAAc,aACdC,YAAa,YACbC,YAAa,YACbC,UAAW,UACXC,aAAc,WACdC,WAAY,YAERC,GAAgBzzD,GAAmB,OAAVA,GAA4B,KAAVA,EACjD,SAAS0zD,GAAWltD,EAAQs3B,GAC1B,MAAM32B,EAAQX,EAAOW,MACfwsD,EAAentD,EAAOotD,aAAa,UACnCC,EAAcrtD,EAAOotD,aAAa,SAcxC,GAbAptD,EAAOssD,IAAe,CACpBxuB,QAAS,CACPr/B,OAAQ0uD,EACR5uD,MAAO8uD,EACP1sD,MAAO,CACL+1C,QAAS/1C,EAAM+1C,QACfj4C,OAAQkC,EAAMlC,OACdF,MAAOoC,EAAMpC,SAInBoC,EAAM+1C,QAAU/1C,EAAM+1C,SAAW,QACjC/1C,EAAM41B,UAAY51B,EAAM41B,WAAa,aACjC02B,GAAcI,GAAc,CAC9B,MAAMC,EAAel1B,GAAap4B,EAAQ,cACrB3E,IAAjBiyD,IACFttD,EAAOzB,MAAQ+uD,GAGnB,GAAIL,GAAcE,GAChB,GAA4B,KAAxBntD,EAAOW,MAAMlC,OACfuB,EAAOvB,OAASuB,EAAOzB,OAAS+4B,GAAe,OAC1C,CACL,MAAMi2B,EAAgBn1B,GAAap4B,EAAQ,eACrB3E,IAAlBkyD,IACFvtD,EAAOvB,OAAS8uD,GAItB,OAAOvtD,EAET,MAAMwtD,KAAuBx1B,IAA+B,CAACy1B,SAAS,GACtE,SAASC,GAAYprC,EAAMnkB,EAAMoN,GAC/B+W,EAAK4V,iBAAiB/5B,EAAMoN,EAAUiiD,IAExC,SAASG,GAAelyD,EAAO0C,EAAMoN,GACnC9P,EAAMuE,OAAOm4B,oBAAoBh6B,EAAMoN,EAAUiiD,IAEnD,SAASI,GAAgB9uB,EAAOrjC,GAC9B,MAAM0C,EAAOouD,GAAYztB,EAAM3gC,OAAS2gC,EAAM3gC,MACxC,EAACsG,EAAC,EAAEE,GAAKyxB,GAAoB0I,EAAOrjC,GAC1C,MAAO,CACL0C,OACA1C,QACAoyD,OAAQ/uB,EACRr6B,OAASpJ,IAANoJ,EAAkBA,EAAI,KACzBE,OAAStJ,IAANsJ,EAAkBA,EAAI,MAG7B,SAASmpD,GAAiBC,EAAU/tD,GAClC,IAAK,MAAMsiB,KAAQyrC,EACjB,GAAIzrC,IAAStiB,GAAUsiB,EAAK0rC,SAAShuD,GACnC,OAAO,EAIb,SAASiuD,GAAqBxyD,EAAO0C,EAAMoN,GACzC,MAAMvL,EAASvE,EAAMuE,OACfkuD,EAAW,IAAIC,iBAAiBC,IACpC,IAAIC,GAAU,EACd,IAAK,MAAM5gB,KAAS2gB,EAClBC,EAAUA,GAAWP,GAAiBrgB,EAAM6gB,WAAYtuD,GACxDquD,EAAUA,IAAYP,GAAiBrgB,EAAM8gB,aAAcvuD,GAEzDquD,GACF9iD,MAIJ,OADA2iD,EAASM,QAAQh6B,SAAU,CAACi6B,WAAW,EAAMC,SAAS,IAC/CR,EAET,SAASS,GAAqBlzD,EAAO0C,EAAMoN,GACzC,MAAMvL,EAASvE,EAAMuE,OACfkuD,EAAW,IAAIC,iBAAiBC,IACpC,IAAIC,GAAU,EACd,IAAK,MAAM5gB,KAAS2gB,EAClBC,EAAUA,GAAWP,GAAiBrgB,EAAM8gB,aAAcvuD,GAC1DquD,EAAUA,IAAYP,GAAiBrgB,EAAM6gB,WAAYtuD,GAEvDquD,GACF9iD,MAIJ,OADA2iD,EAASM,QAAQh6B,SAAU,CAACi6B,WAAW,EAAMC,SAAS,IAC/CR,EAET,MAAMU,GAAqB,IAAIj2B,IAC/B,IAAIk2B,GAAsB,EAC1B,SAASC,KACP,MAAMC,EAAMniD,OAAOkW,iBACfisC,IAAQF,KAGZA,GAAsBE,EACtBH,GAAmB/iD,QAAQ,CAACo1B,EAAQxlC,KAC9BA,EAAMirB,0BAA4BqoC,GACpC9tB,OAIN,SAAS+tB,GAA8BvzD,EAAOwlC,GACvC2tB,GAAmB9oD,MACtB8G,OAAOsrB,iBAAiB,SAAU42B,IAEpCF,GAAmBriD,IAAI9Q,EAAOwlC,GAEhC,SAASguB,GAAgCxzD,GACvCmzD,GAAmBr+B,OAAO90B,GACrBmzD,GAAmB9oD,MACtB8G,OAAOurB,oBAAoB,SAAU22B,IAGzC,SAASI,GAAqBzzD,EAAO0C,EAAMoN,GACzC,MAAMvL,EAASvE,EAAMuE,OACf42B,EAAY52B,GAAUy0B,GAAez0B,GAC3C,IAAK42B,EACH,OAEF,MAAMqK,EAASn0B,GAAU,CAACvO,EAAOE,KAC/B,MAAM2V,EAAIwiB,EAAUI,YACpBzrB,EAAShN,EAAOE,GACZ2V,EAAIwiB,EAAUI,aAChBzrB,KAEDqB,QACGshD,EAAW,IAAIiB,eAAef,IAClC,MAAM3gB,EAAQ2gB,EAAQ,GAChB7vD,EAAQkvC,EAAM2hB,YAAY7wD,MAC1BE,EAASgvC,EAAM2hB,YAAY3wD,OACnB,IAAVF,GAA0B,IAAXE,GAGnBwiC,EAAO1iC,EAAOE,KAIhB,OAFAyvD,EAASM,QAAQ53B,GACjBo4B,GAA8BvzD,EAAOwlC,GAC9BitB,EAET,SAASmB,GAAgB5zD,EAAO0C,EAAM+vD,GAChCA,GACFA,EAASoB,aAEE,WAATnxD,GACF8wD,GAAgCxzD,GAGpC,SAAS8zD,GAAqB9zD,EAAO0C,EAAMoN,GACzC,MAAMvL,EAASvE,EAAMuE,OACf8uB,EAAQhiB,GAAWgyB,IACL,OAAdrjC,EAAM+nB,KACRjY,EAASqiD,GAAgB9uB,EAAOrjC,KAEjCA,EAAQ6G,IACT,MAAMw8B,EAAQx8B,EAAK,GACnB,MAAO,CAACw8B,EAAOA,EAAMhJ,QAASgJ,EAAM/I,WAGtC,OADA23B,GAAY1tD,EAAQ7B,EAAM2wB,GACnBA,EAET,MAAM,WAAoBs9B,GACxB,eAAepsD,EAAQs3B,GACrB,MAAMl8B,EAAU4E,GAAUA,EAAOG,YAAcH,EAAOG,WAAW,MACjE,OAAI/E,GAAWA,EAAQ4E,SAAWA,GAChCktD,GAAWltD,EAAQs3B,GACZl8B,GAEF,KAET,eAAeA,GACb,MAAM4E,EAAS5E,EAAQ4E,OACvB,IAAKA,EAAOssD,IACV,OAAO,EAET,MAAMxuB,EAAU99B,EAAOssD,IAAaxuB,QACpC,CAAC,SAAU,SAASjyB,QAASqgB,IAC3B,MAAM1yB,EAAQskC,EAAQ5R,GAClB/qB,EAAc3H,GAChBwG,EAAOwvD,gBAAgBtjC,GAEvBlsB,EAAOyvD,aAAavjC,EAAM1yB,KAG9B,MAAMmH,EAAQm9B,EAAQn9B,OAAS,GAM/B,OALA5D,OAAOsD,KAAKM,GAAOkL,QAASjI,IAC1B5D,EAAOW,MAAMiD,GAAOjD,EAAMiD,KAE5B5D,EAAOzB,MAAQyB,EAAOzB,aACfyB,EAAOssD,KACP,EAET,iBAAiB7wD,EAAO0C,EAAMoN,GAC5BvS,KAAKm/B,oBAAoB18B,EAAO0C,GAChC,MAAMuxD,EAAUj0D,EAAMk0D,WAAal0D,EAAMk0D,SAAW,IAC9CC,EAAW,CACfC,OAAQ5B,GACR6B,OAAQnB,GACR1tB,OAAQiuB,IAEJ3vD,EAAUqwD,EAASzxD,IAASoxD,GAClCG,EAAQvxD,GAAQoB,EAAQ9D,EAAO0C,EAAMoN,GAEvC,oBAAoB9P,EAAO0C,GACzB,MAAMuxD,EAAUj0D,EAAMk0D,WAAal0D,EAAMk0D,SAAW,IAC9C7gC,EAAQ4gC,EAAQvxD,GACtB,IAAK2wB,EACH,OAEF,MAAM8gC,EAAW,CACfC,OAAQR,GACRS,OAAQT,GACRpuB,OAAQouB,IAEJ9vD,EAAUqwD,EAASzxD,IAASwvD,GAClCpuD,EAAQ9D,EAAO0C,EAAM2wB,GACrB4gC,EAAQvxD,QAAQ9C,EAElB,sBACE,OAAOuR,OAAOkW,iBAEhB,eAAe9iB,EAAQzB,EAAOE,EAAQ64B,GACpC,OAAOH,GAAen3B,EAAQzB,EAAOE,EAAQ64B,GAE/C,WAAWt3B,GACT,MAAM42B,EAAYnC,GAAez0B,GACjC,SAAU42B,IAAaA,EAAUm5B,cAIrC,SAASC,GAAgBhwD,GACvB,OAAKu0B,MAAiD,qBAApB07B,iBAAmCjwD,aAAkBiwD,gBAC9E5D,GAEF,GAGT,MAAM,GACJ,cACErzD,KAAKk3D,MAAQ,GAEf,OAAOz0D,EAAO00D,EAAM7tD,EAAMouB,GACX,eAATy/B,IACFn3D,KAAKk3D,MAAQl3D,KAAKo3D,mBAAmB30D,GAAO,GAC5CzC,KAAK0lC,QAAQ1lC,KAAKk3D,MAAOz0D,EAAO,YAElC,MAAM00B,EAAcO,EAAS13B,KAAK0pB,aAAajnB,GAAOi1B,OAAOA,GAAU13B,KAAK0pB,aAAajnB,GACnFiM,EAAS1O,KAAK0lC,QAAQvO,EAAa10B,EAAO00D,EAAM7tD,GAKtD,MAJa,iBAAT6tD,IACFn3D,KAAK0lC,QAAQvO,EAAa10B,EAAO,QACjCzC,KAAK0lC,QAAQ1lC,KAAKk3D,MAAOz0D,EAAO,cAE3BiM,EAET,QAAQyoB,EAAa10B,EAAO00D,EAAM7tD,GAChCA,EAAOA,GAAQ,GACf,IAAK,MAAM+tD,KAAclgC,EAAa,CACpC,MAAMmgC,EAASD,EAAWC,OACpBxkD,EAASwkD,EAAOH,GAChB3G,EAAS,CAAC/tD,EAAO6G,EAAM+tD,EAAWjzD,SACxC,IAAyC,IAArCgF,EAAS0J,EAAQ09C,EAAQ8G,IAAqBhuD,EAAKiuD,WACrD,OAAO,EAGX,OAAO,EAET,aACOpvD,EAAcnI,KAAKkzC,UACtBlzC,KAAKw3D,UAAYx3D,KAAKkzC,OACtBlzC,KAAKkzC,YAAS7wC,GAGlB,aAAaI,GACX,GAAIzC,KAAKkzC,OACP,OAAOlzC,KAAKkzC,OAEd,MAAM/b,EAAcn3B,KAAKkzC,OAASlzC,KAAKo3D,mBAAmB30D,GAE1D,OADAzC,KAAKy3D,oBAAoBh1D,GAClB00B,EAET,mBAAmB10B,EAAO6mC,GACxB,MAAMhB,EAAS7lC,GAASA,EAAM6lC,OACxBlkC,EAAU0E,EAAew/B,EAAOlkC,SAAWkkC,EAAOlkC,QAAQwB,QAAS,IACnEA,EAAU8xD,GAAWpvB,GAC3B,OAAmB,IAAZlkC,GAAsBklC,EAAWquB,GAAkBl1D,EAAOmD,EAASxB,EAASklC,GAAhD,GAErC,oBAAoB7mC,GAClB,MAAMm1D,EAAsB53D,KAAKw3D,WAAa,GACxCrgC,EAAcn3B,KAAKkzC,OACnBuN,EAAO,CAAC7zC,EAAGC,IAAMD,EAAE8qB,OAAOjsB,IAAMoB,EAAEgrD,KAAKlsD,GAAKF,EAAE6rD,OAAOzvD,KAAO8D,EAAE2rD,OAAOzvD,KAC3E7H,KAAK0lC,QAAQ+a,EAAKmX,EAAqBzgC,GAAc10B,EAAO,QAC5DzC,KAAK0lC,QAAQ+a,EAAKtpB,EAAaygC,GAAsBn1D,EAAO,UAGhE,SAASi1D,GAAWpvB,GAClB,MAAMwvB,EAAW,GACXlyD,EAAU,GACVyB,EAAOtD,OAAOsD,KAAK,GAASzB,QAAQ0N,OAC1C,IAAK,IAAI1J,EAAI,EAAGA,EAAIvC,EAAK5C,OAAQmF,IAC/BhE,EAAQ9B,KAAK,GAASi0D,UAAU1wD,EAAKuC,KAEvC,MAAMqiB,EAAQqc,EAAO1iC,SAAW,GAChC,IAAK,IAAIgE,EAAI,EAAGA,EAAIqiB,EAAMxnB,OAAQmF,IAAK,CACrC,MAAM0tD,EAASrrC,EAAMriB,IACY,IAA7BhE,EAAQiF,QAAQysD,KAClB1xD,EAAQ9B,KAAKwzD,GACbQ,EAASR,EAAOzvD,KAAM,GAG1B,MAAO,CAACjC,UAASkyD,YAEnB,SAASE,GAAQ5zD,EAASklC,GACxB,OAAKA,IAAmB,IAAZllC,GAGI,IAAZA,EACK,GAEFA,EALE,KAOX,SAASuzD,GAAkBl1D,GAAO,QAACmD,EAAO,SAAEkyD,GAAW1zD,EAASklC,GAC9D,MAAM56B,EAAS,GACTtM,EAAUK,EAAM0E,aACtB,IAAK,MAAMmwD,KAAU1xD,EAAS,CAC5B,MAAMiC,EAAKyvD,EAAOzvD,GACZ6oB,EAAOsnC,GAAQ5zD,EAAQyD,GAAKyhC,GACrB,OAAT5Y,GAGJhiB,EAAO5K,KAAK,CACVwzD,SACAlzD,QAAS6zD,GAAWx1D,EAAM6lC,OAAQ,CAACgvB,SAAQrrC,MAAO6rC,EAASjwD,IAAM6oB,EAAMtuB,KAG3E,OAAOsM,EAET,SAASupD,GAAW3vB,GAAQ,OAACgvB,EAAM,MAAErrC,GAAQyE,EAAMtuB,GACjD,MAAMiF,EAAOihC,EAAO4vB,gBAAgBZ,GAC9B/iC,EAAS+T,EAAOiH,gBAAgB7e,EAAMrpB,GAI5C,OAHI4kB,GAASqrC,EAAOprC,UAClBqI,EAAOzwB,KAAKwzD,EAAOprC,UAEdoc,EAAOkH,eAAejb,EAAQnyB,EAAS,CAAC,IAAK,CAClDs0B,YAAY,EACZC,WAAW,EACXH,SAAS,IAIb,SAAS2hC,GAAahzD,EAAMf,GAC1B,MAAMg0D,EAAkBlsC,GAAS/oB,SAASgC,IAAS,GAC7CkzD,GAAkBj0D,EAAQjB,UAAY,IAAIgC,IAAS,GACzD,OAAOkzD,EAAe1tC,WAAavmB,EAAQumB,WAAaytC,EAAgBztC,WAAa,IAEvF,SAAS2tC,GAA0BzwD,EAAI8iB,GACrC,IAAIlV,EAAO5N,EAMX,MALW,YAAPA,EACF4N,EAAOkV,EACS,YAAP9iB,IACT4N,EAAqB,MAAdkV,EAAoB,IAAM,KAE5BlV,EAET,SAAS8iD,GAA0B9iD,EAAMkV,GACvC,OAAOlV,IAASkV,EAAY,UAAY,UAE1C,SAAS6tC,GAAiB5V,GACxB,MAAiB,QAAbA,GAAmC,WAAbA,EACjB,IAEQ,SAAbA,GAAoC,UAAbA,EAClB,SADT,EAIF,SAAS6V,GAAc5wD,EAAI6wD,GACzB,MAAW,MAAP7wD,GAAqB,MAAPA,EACTA,EAEF6wD,EAAajjD,MAAQ+iD,GAAiBE,EAAa9V,WAAa/6C,EAAG0E,OAAO,GAAGgb,cAEtF,SAASoxC,GAAiBrwB,EAAQlkC,GAChC,MAAMw0D,EAAgBxvC,GAAUkf,EAAOnjC,OAAS,CAACmmB,OAAQ,IACnDutC,EAAez0D,EAAQknB,QAAU,GACjCwtC,EAAiBX,GAAa7vB,EAAOnjC,KAAMf,GAC3C20D,EAAWh1D,OAAOyG,OAAO,MACzB8gB,EAASvnB,OAAOyG,OAAO,MA+B7B,OA9BAzG,OAAOsD,KAAKwxD,GAAchmD,QAAQhL,IAChC,MAAMmxD,EAAYH,EAAahxD,GAC/B,IAAKY,EAASuwD,GACZ,OAAOxlC,QAAQylC,MAAM,0CAA0CpxD,GAEjE,GAAImxD,EAAU/iC,OACZ,OAAOzC,QAAQC,KAAK,kDAAkD5rB,GAExE,MAAM4N,EAAOgjD,GAAc5wD,EAAImxD,GACzBE,EAAYX,GAA0B9iD,EAAMqjD,GAC5CK,EAAsBP,EAActtC,QAAU,GACpDytC,EAAStjD,GAAQsjD,EAAStjD,IAAS5N,EACnCyjB,EAAOzjB,GAAMuD,EAAQrH,OAAOyG,OAAO,MAAO,CAAC,CAACiL,QAAOujD,EAAWG,EAAoB1jD,GAAO0jD,EAAoBD,OAE/G5wB,EAAO/mC,KAAK4B,SAAS0P,QAAQjP,IAC3B,MAAMuB,EAAOvB,EAAQuB,MAAQmjC,EAAOnjC,KAC9BwlB,EAAY/mB,EAAQ+mB,WAAawtC,GAAahzD,EAAMf,GACpDg0D,EAAkBhvC,GAAUjkB,IAAS,GACrCg0D,EAAsBf,EAAgB9sC,QAAU,GACtDvnB,OAAOsD,KAAK8xD,GAAqBtmD,QAAQumD,IACvC,MAAM3jD,EAAO6iD,GAA0Bc,EAAWzuC,GAC5C9iB,EAAKjE,EAAQ6R,EAAO,WAAasjD,EAAStjD,IAASA,EACzD6V,EAAOzjB,GAAMyjB,EAAOzjB,IAAO9D,OAAOyG,OAAO,MACzCY,EAAQkgB,EAAOzjB,GAAK,CAAC,CAAC4N,QAAOojD,EAAahxD,GAAKsxD,EAAoBC,SAGvEr1D,OAAOsD,KAAKikB,GAAQzY,QAAQjI,IAC1B,MAAMygB,EAAQC,EAAO1gB,GACrBQ,EAAQigB,EAAO,CAACa,GAASZ,OAAOD,EAAMlmB,MAAO+mB,GAASb,UAEjDC,EAET,SAAS+tC,GAAY/wB,GACnB,MAAMlkC,EAAUkkC,EAAOlkC,UAAYkkC,EAAOlkC,QAAU,IACpDA,EAAQwB,QAAUkD,EAAe1E,EAAQwB,QAAS,IAClDxB,EAAQknB,OAASqtC,GAAiBrwB,EAAQlkC,GAE5C,SAASk1D,GAAS/3D,GAIhB,OAHAA,EAAOA,GAAQ,GACfA,EAAK4B,SAAW5B,EAAK4B,UAAY,GACjC5B,EAAK2B,OAAS3B,EAAK2B,QAAU,GACtB3B,EAET,SAASg4D,GAAWjxB,GAIlB,OAHAA,EAASA,GAAU,GACnBA,EAAO/mC,KAAO+3D,GAAShxB,EAAO/mC,MAC9B83D,GAAY/wB,GACLA,EAET,MAAMkxB,GAAW,IAAI75B,IACf85B,GAAa,IAAIjmD,IACvB,SAASkmD,GAAW55B,EAAU65B,GAC5B,IAAItyD,EAAOmyD,GAASt5B,IAAIJ,GAMxB,OALKz4B,IACHA,EAAOsyD,IACPH,GAASjmD,IAAIusB,EAAUz4B,GACvBoyD,GAAWhmD,IAAIpM,IAEVA,EAET,MAAMuyD,GAAa,CAACrmD,EAAK1H,EAAKjB,KAC5B,MAAM8lB,EAAO9kB,EAAiBC,EAAKjB,QACtBvI,IAATquB,GACFnd,EAAIE,IAAIid,IAGZ,MAAM,GACJ,YAAY4X,GACVtoC,KAAK65D,QAAUN,GAAWjxB,GAC1BtoC,KAAK85D,YAAc,IAAIn6B,IACvB3/B,KAAK+5D,eAAiB,IAAIp6B,IAE5B,eACE,OAAO3/B,KAAK65D,QAAQ9vC,SAEtB,WACE,OAAO/pB,KAAK65D,QAAQ10D,KAEtB,SAASA,GACPnF,KAAK65D,QAAQ10D,KAAOA,EAEtB,WACE,OAAOnF,KAAK65D,QAAQt4D,KAEtB,SAASA,GACPvB,KAAK65D,QAAQt4D,KAAO+3D,GAAS/3D,GAE/B,cACE,OAAOvB,KAAK65D,QAAQz1D,QAEtB,YAAYA,GACVpE,KAAK65D,QAAQz1D,QAAUA,EAEzB,cACE,OAAOpE,KAAK65D,QAAQj0D,QAEtB,SACE,MAAM0iC,EAAStoC,KAAK65D,QACpB75D,KAAKg6D,aACLX,GAAY/wB,GAEd,aACEtoC,KAAK85D,YAAYG,QACjBj6D,KAAK+5D,eAAeE,QAEtB,iBAAiBC,GACf,OAAOR,GAAWQ,EAChB,IAAM,CAAC,CACL,YAAYA,EACZ,MAGN,0BAA0BA,EAAazoB,GACrC,OAAOioB,GAAW,GAAGQ,gBAA0BzoB,IAC7C,IAAM,CACJ,CACE,YAAYyoB,iBAA2BzoB,IACvC,eAAeA,GAEjB,CACE,YAAYyoB,EACZ,MAIR,wBAAwBA,EAAa/oB,GACnC,OAAOuoB,GAAW,GAAGQ,KAAe/oB,IAClC,IAAM,CAAC,CACL,YAAY+oB,cAAwB/oB,IACpC,YAAY+oB,EACZ,YAAY/oB,EACZ,MAGN,gBAAgBmmB,GACd,MAAMzvD,EAAKyvD,EAAOzvD,GACZ1C,EAAOnF,KAAKmF,KAClB,OAAOu0D,GAAW,GAAGv0D,YAAe0C,IAClC,IAAM,CAAC,CACL,WAAWA,KACRyvD,EAAO6C,wBAA0B,MAG1C,cAAcC,EAAWC,GACvB,MAAMP,EAAc95D,KAAK85D,YACzB,IAAI9sC,EAAQ8sC,EAAY55B,IAAIk6B,GAK5B,OAJKptC,IAASqtC,IACZrtC,EAAQ,IAAI2S,IACZm6B,EAAYvmD,IAAI6mD,EAAWptC,IAEtBA,EAET,gBAAgBotC,EAAWE,EAAUD,GACnC,MAAM,QAACj2D,EAAO,KAAEe,GAAQnF,KAClBgtB,EAAQhtB,KAAKu6D,cAAcH,EAAWC,GACtC7tB,EAASxf,EAAMkT,IAAIo6B,GACzB,GAAI9tB,EACF,OAAOA,EAET,MAAMjY,EAAS,IAAI/gB,IACnB8mD,EAASznD,QAAQxL,IACX+yD,IACF7lC,EAAO9gB,IAAI2mD,GACX/yD,EAAKwL,QAAQjI,GAAOgvD,GAAWrlC,EAAQ6lC,EAAWxvD,KAEpDvD,EAAKwL,QAAQjI,GAAOgvD,GAAWrlC,EAAQnwB,EAASwG,IAChDvD,EAAKwL,QAAQjI,GAAOgvD,GAAWrlC,EAAQnL,GAAUjkB,IAAS,GAAIyF,IAC9DvD,EAAKwL,QAAQjI,GAAOgvD,GAAWrlC,EAAQrI,GAAUthB,IACjDvD,EAAKwL,QAAQjI,GAAOgvD,GAAWrlC,EAAQ,GAAa3pB,MAEtD,MAAM0E,EAAQzJ,MAAM6N,KAAK6gB,GAOzB,OANqB,IAAjBjlB,EAAM7K,QACR6K,EAAMxL,KAAKC,OAAOyG,OAAO,OAEvBivD,GAAWzsD,IAAIstD,IACjBttC,EAAMzZ,IAAI+mD,EAAUhrD,GAEfA,EAET,oBACE,MAAM,QAAClL,EAAO,KAAEe,GAAQnF,KACxB,MAAO,CACLoE,EACAglB,GAAUjkB,IAAS,GACnB+mB,GAAS/oB,SAASgC,IAAS,GAC3B,CAACA,QACD+mB,GACA,IAGJ,oBAAoBqI,EAAQ+c,EAAOlvC,EAASoyB,EAAW,CAAC,KACtD,MAAM9lB,EAAS,CAACq6B,SAAS,IACnB,SAACj9B,EAAQ,YAAE0uD,GAAeC,GAAYz6D,KAAK+5D,eAAgBxlC,EAAQC,GACzE,IAAIpwB,EAAU0H,EACd,GAAI4uD,GAAY5uD,EAAUwlC,GAAQ,CAChC5iC,EAAOq6B,SAAU,EACjB3mC,EAAUsK,EAAWtK,GAAWA,IAAYA,EAC5C,MAAMu4D,EAAc36D,KAAKwvC,eAAejb,EAAQnyB,EAASo4D,GACzDp2D,EAAUyxB,GAAe/pB,EAAU1J,EAASu4D,GAE9C,IAAK,MAAMznC,KAAQoe,EACjB5iC,EAAOwkB,GAAQ9uB,EAAQ8uB,GAEzB,OAAOxkB,EAET,eAAe6lB,EAAQnyB,EAASoyB,EAAW,CAAC,IAAKwB,GAC/C,MAAM,SAAClqB,GAAY2uD,GAAYz6D,KAAK+5D,eAAgBxlC,EAAQC,GAC5D,OAAO/rB,EAASrG,GACZyzB,GAAe/pB,EAAU1J,OAASC,EAAW2zB,GAC7ClqB,GAGR,SAAS2uD,GAAYG,EAAermC,EAAQC,GAC1C,IAAIxH,EAAQ4tC,EAAc16B,IAAI3L,GACzBvH,IACHA,EAAQ,IAAI2S,IACZi7B,EAAcrnD,IAAIghB,EAAQvH,IAE5B,MAAM8S,EAAWtL,EAAS8C,OAC1B,IAAIkV,EAASxf,EAAMkT,IAAIJ,GACvB,IAAK0M,EAAQ,CACX,MAAM1gC,EAAWwoB,GAAgBC,EAAQC,GACzCgY,EAAS,CACP1gC,WACA0uD,YAAahmC,EAASkD,OAAO3nB,IAAMA,EAAEwX,cAAc1jB,SAAS,WAE9DmpB,EAAMzZ,IAAIusB,EAAU0M,GAEtB,OAAOA,EAET,MAAMquB,GAAcr6D,GAASiI,EAASjI,IACjCuD,OAAO2kC,oBAAoBloC,GAAOylC,OAAO,CAACC,EAAKt7B,IAAQs7B,GAAOx5B,EAAWlM,EAAMoK,KAAO,GAC3F,SAAS8vD,GAAY5kC,EAAOwb,GAC1B,MAAM,aAACza,EAAY,YAAEC,GAAepN,GAAaoM,GACjD,IAAK,MAAM5C,KAAQoe,EAAO,CACxB,MAAM5a,EAAaG,EAAa3D,GAC1ByD,EAAYG,EAAY5D,GACxB1yB,GAASm2B,GAAaD,IAAeZ,EAAM5C,GACjD,GAAKwD,IAAehqB,EAAWlM,IAAUq6D,GAAYr6D,KAC/Cm2B,GAAavuB,EAAQ5H,GACzB,OAAO,EAGX,OAAO,EAGT,IAAIs6D,GAAU,QAEd,MAAMC,GAAkB,CAAC,MAAO,SAAU,OAAQ,QAAS,aAC3D,SAASC,GAAqBpY,EAAUntC,GACtC,MAAoB,QAAbmtC,GAAmC,WAAbA,IAAiE,IAAvCmY,GAAgBlwD,QAAQ+3C,IAA6B,MAATntC,EAErG,SAASwlD,GAAcC,EAAIC,GACzB,OAAO,SAASvuD,EAAGC,GACjB,OAAOD,EAAEsuD,KAAQruD,EAAEquD,GACftuD,EAAEuuD,GAAMtuD,EAAEsuD,GACVvuD,EAAEsuD,GAAMruD,EAAEquD,IAGlB,SAASE,GAAqBh5D,GAC5B,MAAMK,EAAQL,EAAQK,MAChB44D,EAAmB54D,EAAM2B,QAAQulB,UACvClnB,EAAMyjD,cAAc,eACpB98C,EAASiyD,GAAoBA,EAAiBC,WAAY,CAACl5D,GAAUK,GAEvE,SAAS84D,GAAoBn5D,GAC3B,MAAMK,EAAQL,EAAQK,MAChB44D,EAAmB54D,EAAM2B,QAAQulB,UACvCvgB,EAASiyD,GAAoBA,EAAiBG,WAAY,CAACp5D,GAAUK,GAEvE,SAASg5D,GAAU1uD,GASjB,OARIwuB,MAAqC,kBAATxuB,EAC9BA,EAAOyuB,SAASkgC,eAAe3uD,GACtBA,GAAQA,EAAKtI,SACtBsI,EAAOA,EAAK,IAEVA,GAAQA,EAAK/F,SACf+F,EAAOA,EAAK/F,QAEP+F,EAET,MAAM4uD,GAAY,GACZC,GAAYhxD,IAChB,MAAM5D,EAASy0D,GAAU7wD,GACzB,OAAO7G,OAAOqO,OAAOupD,IAAWjkC,OAAQtd,GAAMA,EAAEpT,SAAWA,GAAQ6H,OAErE,SAASgtD,GAAgBhwD,EAAKkF,EAAO2hC,GACnC,MAAMrrC,EAAOtD,OAAOsD,KAAKwE,GACzB,IAAK,MAAMjB,KAAOvD,EAAM,CACtB,MAAMy0D,GAAUlxD,EAChB,GAAIkxD,GAAU/qD,EAAO,CACnB,MAAMvQ,EAAQqL,EAAIjB,UACXiB,EAAIjB,IACP8nC,EAAO,GAAKopB,EAAS/qD,KACvBlF,EAAIiwD,EAASppB,GAAQlyC,KAK7B,SAASu7D,GAAmB7uD,EAAG8uD,EAAWC,EAAaC,GACrD,OAAKD,GAA0B,aAAX/uD,EAAE/H,KAGlB+2D,EACKF,EAEF9uD,EALE,KAOX,MAAM,GACJ,YAAYH,EAAMovD,GAChB,MAAM7zB,EAAStoC,KAAKsoC,OAAS,IAAI,GAAO6zB,GAClCC,EAAgBX,GAAU1uD,GAC1BsvD,EAAgBT,GAASQ,GAC/B,GAAIC,EACF,MAAM,IAAIp1D,MACR,4CAA+Co1D,EAAcx0D,GAA7D,kDACgDw0D,EAAcr1D,OAAOa,GAAK,oBAG9E,MAAMzD,EAAUkkC,EAAOkH,eAAelH,EAAOg0B,oBAAqBt8D,KAAKmH,cACvEnH,KAAK+pB,SAAW,IAAKue,EAAOve,UAAYitC,GAAgBoF,IACxDp8D,KAAK+pB,SAASwyC,aAAaj0B,GAC3B,MAAMlmC,EAAUpC,KAAK+pB,SAASyyC,eAAeJ,EAAeh4D,EAAQk6B,aAC9Dt3B,EAAS5E,GAAWA,EAAQ4E,OAC5BvB,EAASuB,GAAUA,EAAOvB,OAC1BF,EAAQyB,GAAUA,EAAOzB,MAC/BvF,KAAK6H,GAAKK,IACVlI,KAAKwqB,IAAMpoB,EACXpC,KAAKgH,OAASA,EACdhH,KAAKuF,MAAQA,EACbvF,KAAKyF,OAASA,EACdzF,KAAKy8D,SAAWr4D,EAChBpE,KAAK08D,aAAe18D,KAAKs+B,YACzBt+B,KAAK6yD,QAAU,GACf7yD,KAAK28D,UAAY,GACjB38D,KAAKyrC,aAAUppC,EACfrC,KAAKgwD,MAAQ,GACbhwD,KAAK0tB,6BAA0BrrB,EAC/BrC,KAAK8wC,eAAYzuC,EACjBrC,KAAKulC,QAAU,GACfvlC,KAAK48D,gBAAav6D,EAClBrC,KAAK68D,WAAa,GAClB78D,KAAK88D,0BAAuBz6D,EAC5BrC,KAAK+8D,gBAAkB,GACvB/8D,KAAKsrB,OAAS,GACdtrB,KAAKg9D,SAAW,IAAI,GACpBh9D,KAAK22D,SAAW,GAChB32D,KAAKi9D,eAAiB,GACtBj9D,KAAKk9D,UAAW,EAChBl9D,KAAK4xC,yBAAsBvvC,EAC3BrC,KAAKytC,cAAWprC,EAChBrC,KAAKm9D,UAAYhpD,GAAS0W,GAAQ7qB,KAAK0C,OAAOmoB,GAAOzmB,EAAQg5D,aAAe,GAC5Ep9D,KAAK6yC,aAAe,GACpB8oB,GAAU37D,KAAK6H,IAAM7H,KAChBoC,GAAY4E,GAIjBq/B,GAASg3B,OAAOr9D,KAAM,WAAYo7D,IAClC/0B,GAASg3B,OAAOr9D,KAAM,WAAYu7D,IAClCv7D,KAAKs9D,cACDt9D,KAAKk9D,UACPl9D,KAAK0C,UAPL8wB,QAAQylC,MAAM,qEAUlB,kBACE,MAAO70D,SAAS,YAACk6B,EAAW,oBAAEtT,GAAoB,MAAEzlB,EAAK,OAAEE,EAAM,aAAEi3D,GAAgB18D,KACnF,OAAKmI,EAAcm2B,GAGftT,GAAuB0xC,EAClBA,EAEFj3D,EAASF,EAAQE,EAAS,KALxB64B,EAOX,WACE,OAAOt+B,KAAKsoC,OAAO/mC,KAErB,SAASA,GACPvB,KAAKsoC,OAAO/mC,KAAOA,EAErB,cACE,OAAOvB,KAAKy8D,SAEd,YAAYr4D,GACVpE,KAAKsoC,OAAOlkC,QAAUA,EAExB,cASE,OARApE,KAAKkmD,cAAc,cACflmD,KAAKoE,QAAQgnB,WACfprB,KAAKioC,SAELxJ,GAAYz+B,KAAMA,KAAKoE,QAAQ0lB,kBAEjC9pB,KAAKu9D,aACLv9D,KAAKkmD,cAAc,aACZlmD,KAET,QAEE,OADA4tB,GAAY5tB,KAAKgH,OAAQhH,KAAKwqB,KACvBxqB,KAET,OAEE,OADAqmC,GAASxD,KAAK7iC,MACPA,KAET,OAAOuF,EAAOE,GACP4gC,GAAShB,QAAQrlC,MAGpBA,KAAKw9D,kBAAoB,CAACj4D,QAAOE,UAFjCzF,KAAKy9D,QAAQl4D,EAAOE,GAKxB,QAAQF,EAAOE,GACb,MAAMrB,EAAUpE,KAAKoE,QACf4C,EAAShH,KAAKgH,OACds3B,EAAcl6B,EAAQ4mB,qBAAuBhrB,KAAKs+B,YAClDo/B,EAAU19D,KAAK+pB,SAASoU,eAAen3B,EAAQzB,EAAOE,EAAQ64B,GAC9Dq/B,EAAWv5D,EAAQ0lB,kBAAoB9pB,KAAK+pB,SAASC,sBACrDa,EAAO7qB,KAAKuF,MAAQ,SAAW,SACrCvF,KAAKuF,MAAQm4D,EAAQn4D,MACrBvF,KAAKyF,OAASi4D,EAAQj4D,OACtBzF,KAAK08D,aAAe18D,KAAKs+B,YACpBG,GAAYz+B,KAAM29D,GAAU,KAGjC39D,KAAKkmD,cAAc,SAAU,CAACp5C,KAAM4wD,IACpCt0D,EAAShF,EAAQw5D,SAAU,CAAC59D,KAAM09D,GAAU19D,MACxCA,KAAKk9D,UACHl9D,KAAKm9D,UAAUtyC,IACjB7qB,KAAKF,UAIX,sBACE,MAAMsE,EAAUpE,KAAKoE,QACfy5D,EAAgBz5D,EAAQknB,QAAU,GACxC7hB,EAAKo0D,EAAe,CAACC,EAAa/R,KAChC+R,EAAYj2D,GAAKkkD,IAGrB,sBACE,MAAM3nD,EAAUpE,KAAKoE,QACf25D,EAAY35D,EAAQknB,OACpBA,EAAStrB,KAAKsrB,OACd0yC,EAAUj6D,OAAOsD,KAAKikB,GAAQ2a,OAAO,CAACp6B,EAAKhE,KAC/CgE,EAAIhE,IAAM,EACHgE,GACN,IACH,IAAIyH,EAAQ,GACRyqD,IACFzqD,EAAQA,EAAM+/B,OACZtvC,OAAOsD,KAAK02D,GAAWv6D,IAAKqE,IAC1B,MAAM6wD,EAAeqF,EAAUl2D,GACzB4N,EAAOgjD,GAAc5wD,EAAI6wD,GACzBuF,EAAoB,MAATxoD,EACX4/B,EAAwB,MAAT5/B,EACrB,MAAO,CACLrR,QAASs0D,EACTwF,UAAWD,EAAW,YAAc5oB,EAAe,SAAW,OAC9D8oB,MAAOF,EAAW,eAAiB5oB,EAAe,WAAa,cAKvE5rC,EAAK6J,EAAQvG,IACX,MAAM2rD,EAAe3rD,EAAK3I,QACpByD,EAAK6wD,EAAa7wD,GAClB4N,EAAOgjD,GAAc5wD,EAAI6wD,GACzB0F,EAAYt1D,EAAe4vD,EAAavzD,KAAM4H,EAAKoxD,YAC3B97D,IAA1Bq2D,EAAa9V,UAA0BoY,GAAqBtC,EAAa9V,SAAUntC,KAAUulD,GAAqBjuD,EAAKmxD,aACzHxF,EAAa9V,SAAW71C,EAAKmxD,WAE/BF,EAAQn2D,IAAM,EACd,IAAIwjB,EAAQ,KACZ,GAAIxjB,KAAMyjB,GAAUA,EAAOzjB,GAAI1C,OAASi5D,EACtC/yC,EAAQC,EAAOzjB,OACV,CACL,MAAMw2D,EAAa,GAASC,SAASF,GACrC/yC,EAAQ,IAAIgzC,EAAW,CACrBx2D,KACA1C,KAAMi5D,EACN5zC,IAAKxqB,KAAKwqB,IACV/nB,MAAOzC,OAETsrB,EAAOD,EAAMxjB,IAAMwjB,EAErBA,EAAMkzC,KAAK7F,EAAct0D,KAE3BqF,EAAKu0D,EAAS,CAACQ,EAAY32D,KACpB22D,UACIlzC,EAAOzjB,KAGlB4B,EAAK6hB,EAASD,IACZ+kC,GAAQ5nB,UAAUxoC,KAAMqrB,EAAOA,EAAMjnB,SACrCgsD,GAAQqO,OAAOz+D,KAAMqrB,KAGzB,kBACE,MAAMye,EAAW9pC,KAAK28D,UAChBpqB,EAAUvyC,KAAKuB,KAAK4B,SAASsB,OAC7B6tC,EAAUxI,EAASrlC,OAEzB,GADAqlC,EAASl7B,KAAK,CAAChC,EAAGC,IAAMD,EAAEjI,MAAQkI,EAAElI,OAChC2tC,EAAUC,EAAS,CACrB,IAAK,IAAI3oC,EAAI2oC,EAAS3oC,EAAI0oC,IAAW1oC,EACnC5J,KAAK0+D,oBAAoB90D,GAE3BkgC,EAAS12B,OAAOm/B,EAASD,EAAUC,GAErCvyC,KAAK+8D,gBAAkBjzB,EAASthC,MAAM,GAAGoG,KAAKqsD,GAAc,QAAS,UAEvE,8BACE,MAAO0B,UAAW7yB,EAAUvoC,MAAM,SAAC4B,IAAanD,KAC5C8pC,EAASrlC,OAAStB,EAASsB,eACtBzE,KAAKyrC,QAEd3B,EAASj3B,QAAQ,CAACoC,EAAMtQ,KACmC,IAArDxB,EAASu0B,OAAOjsB,GAAKA,IAAMwJ,EAAKinC,UAAUz3C,QAC5CzE,KAAK0+D,oBAAoB/5D,KAI/B,2BACE,MAAMg6D,EAAiB,GACjBx7D,EAAWnD,KAAKuB,KAAK4B,SAC3B,IAAIyG,EAAGK,EAEP,IADAjK,KAAK4+D,8BACAh1D,EAAI,EAAGK,EAAO9G,EAASsB,OAAQmF,EAAIK,EAAML,IAAK,CACjD,MAAMhG,EAAUT,EAASyG,GACzB,IAAIqL,EAAOjV,KAAK4uC,eAAehlC,GAC/B,MAAMzE,EAAOvB,EAAQuB,MAAQnF,KAAKsoC,OAAOnjC,KAWzC,GAVI8P,EAAK9P,MAAQ8P,EAAK9P,OAASA,IAC7BnF,KAAK0+D,oBAAoB90D,GACzBqL,EAAOjV,KAAK4uC,eAAehlC,IAE7BqL,EAAK9P,KAAOA,EACZ8P,EAAK0V,UAAY/mB,EAAQ+mB,WAAawtC,GAAahzD,EAAMnF,KAAKoE,SAC9D6Q,EAAK4pD,MAAQj7D,EAAQi7D,OAAS,EAC9B5pD,EAAKtQ,MAAQiF,EACbqL,EAAK1Q,MAAQ,GAAKX,EAAQW,MAC1B0Q,EAAKmzB,QAAUpoC,KAAK+5C,iBAAiBnwC,GACjCqL,EAAKs2B,WACPt2B,EAAKs2B,WAAWuzB,YAAYl1D,GAC5BqL,EAAKs2B,WAAWqC,iBACX,CACL,MAAMmxB,EAAkB,GAASC,cAAc75D,IACzC,mBAAC6pC,EAAkB,gBAAEkC,GAAmBhlB,GAAS/oB,SAASgC,GAChEpB,OAAOC,OAAO+6D,EAAgB12D,UAAW,CACvC6oC,gBAAiB,GAASsc,WAAWtc,GACrClC,mBAAoBA,GAAsB,GAASwe,WAAWxe,KAEhE/5B,EAAKs2B,WAAa,IAAIwzB,EAAgB/+D,KAAM4J,GAC5C+0D,EAAe76D,KAAKmR,EAAKs2B,aAI7B,OADAvrC,KAAKi/D,kBACEN,EAET,iBACEl1D,EAAKzJ,KAAKuB,KAAK4B,SAAU,CAACS,EAASwG,KACjCpK,KAAK4uC,eAAexkC,GAAcmhC,WAAWgL,SAC5Cv2C,MAEL,QACEA,KAAKk/D,iBACLl/D,KAAKkmD,cAAc,SAErB,OAAOr7B,GACL,MAAMyd,EAAStoC,KAAKsoC,OACpBA,EAAO5lC,SACP,MAAM0B,EAAUpE,KAAKy8D,SAAWn0B,EAAOkH,eAAelH,EAAOg0B,oBAAqBt8D,KAAKmH,cACjFg4D,EAAgBn/D,KAAK4xC,qBAAuBxtC,EAAQulB,UAK1D,GAJA3pB,KAAKo/D,gBACLp/D,KAAKq/D,sBACLr/D,KAAKs/D,uBACLt/D,KAAKg9D,SAASuC,cACuD,IAAjEv/D,KAAKkmD,cAAc,eAAgB,CAACr7B,OAAM0sC,YAAY,IACxD,OAEF,MAAMoH,EAAiB3+D,KAAKw/D,2BAC5Bx/D,KAAKkmD,cAAc,wBACnB,IAAI6M,EAAa,EACjB,IAAK,IAAInpD,EAAI,EAAGK,EAAOjK,KAAKuB,KAAK4B,SAASsB,OAAQmF,EAAIK,EAAML,IAAK,CAC/D,MAAM,WAAC2hC,GAAcvrC,KAAK4uC,eAAehlC,GACnC2sC,GAAS4oB,IAAyD,IAAxCR,EAAe9zD,QAAQ0gC,GACvDA,EAAWk0B,sBAAsBlpB,GACjCwc,EAAa3lD,KAAKqC,KAAK87B,EAAWsF,iBAAkBkiB,GAEtDA,EAAa/yD,KAAK0/D,YAAct7D,EAAQusD,OAAOiC,YAAcG,EAAa,EAC1E/yD,KAAK2/D,cAAc5M,GACdoM,GACH11D,EAAKk1D,EAAiBpzB,IACpBA,EAAWgL,UAGfv2C,KAAK4/D,gBAAgB/0C,GACrB7qB,KAAKkmD,cAAc,cAAe,CAACr7B,SACnC7qB,KAAK6yD,QAAQjkD,KAAKqsD,GAAc,IAAK,SACrC,MAAM,QAAC11B,EAAO,WAAEq3B,GAAc58D,KAC1B48D,EACF58D,KAAK6/D,cAAcjD,GAAY,GACtBr3B,EAAQ9gC,QACjBzE,KAAK8/D,mBAAmBv6B,EAASA,GAAS,GAE5CvlC,KAAKF,SAEP,gBACE2J,EAAKzJ,KAAKsrB,OAASD,IACjB+kC,GAAQ2P,UAAU//D,KAAMqrB,KAE1BrrB,KAAKggE,sBACLhgE,KAAKigE,sBAEP,sBACE,MAAM77D,EAAUpE,KAAKoE,QACf87D,EAAiB,IAAI1sD,IAAIzP,OAAOsD,KAAKrH,KAAK68D,aAC1CsD,EAAY,IAAI3sD,IAAIpP,EAAQ8lB,QAC7Bvd,EAAUuzD,EAAgBC,MAAgBngE,KAAK88D,uBAAyB14D,EAAQgnB,aACnFprB,KAAKogE,eACLpgE,KAAKu9D,cAGT,uBACE,MAAM,eAACN,GAAkBj9D,KACnBqgE,EAAUrgE,KAAKsgE,0BAA4B,GACjD,IAAK,MAAM,OAACxtD,EAAM,MAAE/B,EAAK,MAAEsE,KAAUgrD,EAAS,CAC5C,MAAM3tB,EAAkB,oBAAX5/B,GAAgCuC,EAAQA,EACrDwmD,GAAgBoB,EAAgBlsD,EAAO2hC,IAG3C,yBACE,MAAMG,EAAe7yC,KAAK6yC,aAC1B,IAAKA,IAAiBA,EAAapuC,OACjC,OAEFzE,KAAK6yC,aAAe,GACpB,MAAM0tB,EAAevgE,KAAKuB,KAAK4B,SAASsB,OAClC+7D,EAAW/X,GAAQ,IAAIj1C,IAC3Bq/B,EACGnb,OAAOtd,GAAKA,EAAE,KAAOquC,GACrBjlD,IAAI,CAAC4W,EAAGxQ,IAAMA,EAAI,IAAMwQ,EAAEhH,OAAO,GAAGkkB,KAAK,OAExCmpC,EAAYD,EAAQ,GAC1B,IAAK,IAAI52D,EAAI,EAAGA,EAAI22D,EAAc32D,IAChC,IAAK+C,EAAU8zD,EAAWD,EAAQ52D,IAChC,OAGJ,OAAO/D,MAAM6N,KAAK+sD,GACfj9D,IAAI4W,GAAKA,EAAElO,MAAM,MACjB1I,IAAIoJ,IAAK,CAAEkG,OAAQlG,EAAE,GAAImE,OAAQnE,EAAE,GAAIyI,OAAQzI,EAAE,MAEtD,cAAcmmD,GACZ,IAA+D,IAA3D/yD,KAAKkmD,cAAc,eAAgB,CAACqR,YAAY,IAClD,OAEFnH,GAAQ1tD,OAAO1C,KAAMA,KAAKuF,MAAOvF,KAAKyF,OAAQstD,GAC9C,MAAMxjC,EAAOvvB,KAAK8wC,UACZ4vB,EAASnxC,EAAKhqB,OAAS,GAAKgqB,EAAK9pB,QAAU,EACjDzF,KAAK6yD,QAAU,GACfppD,EAAKzJ,KAAKgwD,MAAQhzB,IACZ0jC,GAA2B,cAAjB1jC,EAAI4lB,WAGd5lB,EAAIwL,WACNxL,EAAIwL,YAENxoC,KAAK6yD,QAAQ/uD,QAAQk5B,EAAI61B,aACxB7yD,MACHA,KAAK6yD,QAAQhgD,QAAQ,CAAC9F,EAAMpI,KAC1BoI,EAAK4zD,KAAOh8D,IAEd3E,KAAKkmD,cAAc,eAErB,gBAAgBr7B,GACd,IAA6E,IAAzE7qB,KAAKkmD,cAAc,uBAAwB,CAACr7B,OAAM0sC,YAAY,IAAlE,CAGA,IAAK,IAAI3tD,EAAI,EAAGK,EAAOjK,KAAKuB,KAAK4B,SAASsB,OAAQmF,EAAIK,IAAQL,EAC5D5J,KAAK4uC,eAAehlC,GAAG2hC,WAAW/C,YAEpC,IAAK,IAAI5+B,EAAI,EAAGK,EAAOjK,KAAKuB,KAAK4B,SAASsB,OAAQmF,EAAIK,IAAQL,EAC5D5J,KAAK4gE,eAAeh3D,EAAG8C,EAAWme,GAAQA,EAAK,CAACzgB,aAAcR,IAAMihB,GAEtE7qB,KAAKkmD,cAAc,sBAAuB,CAACr7B,UAE7C,eAAelmB,EAAOkmB,GACpB,MAAM5V,EAAOjV,KAAK4uC,eAAejqC,GAC3B2E,EAAO,CAAC2L,OAAMtQ,QAAOkmB,OAAM0sC,YAAY,IACW,IAApDv3D,KAAKkmD,cAAc,sBAAuB58C,KAG9C2L,EAAKs2B,WAAWvG,QAAQna,GACxBvhB,EAAKiuD,YAAa,EAClBv3D,KAAKkmD,cAAc,qBAAsB58C,IAE3C,UACiE,IAA3DtJ,KAAKkmD,cAAc,eAAgB,CAACqR,YAAY,MAGhDlxB,GAASr5B,IAAIhN,MACXA,KAAKk9D,WAAa72B,GAAShB,QAAQrlC,OACrCqmC,GAASt1B,MAAM/Q,OAGjBA,KAAKslC,OACL81B,GAAqB,CAAC34D,MAAOzC,SAGjC,OACE,IAAI4J,EACJ,GAAI5J,KAAKw9D,kBAAmB,CAC1B,MAAM,MAACj4D,EAAK,OAAEE,GAAUzF,KAAKw9D,kBAC7Bx9D,KAAKy9D,QAAQl4D,EAAOE,GACpBzF,KAAKw9D,kBAAoB,KAG3B,GADAx9D,KAAKi6D,QACDj6D,KAAKuF,OAAS,GAAKvF,KAAKyF,QAAU,EACpC,OAEF,IAA6D,IAAzDzF,KAAKkmD,cAAc,aAAc,CAACqR,YAAY,IAChD,OAEF,MAAMsJ,EAAS7gE,KAAK6yD,QACpB,IAAKjpD,EAAI,EAAGA,EAAIi3D,EAAOp8D,QAAUo8D,EAAOj3D,GAAGgiD,GAAK,IAAKhiD,EACnDi3D,EAAOj3D,GAAG07B,KAAKtlC,KAAK8wC,WAGtB,IADA9wC,KAAK8gE,gBACEl3D,EAAIi3D,EAAOp8D,SAAUmF,EAC1Bi3D,EAAOj3D,GAAG07B,KAAKtlC,KAAK8wC,WAEtB9wC,KAAKkmD,cAAc,aAErB,uBAAuBrc,GACrB,MAAMC,EAAW9pC,KAAK+8D,gBAChBruD,EAAS,GACf,IAAI9E,EAAGK,EACP,IAAKL,EAAI,EAAGK,EAAO6/B,EAASrlC,OAAQmF,EAAIK,IAAQL,EAAG,CACjD,MAAMqL,EAAO60B,EAASlgC,GACjBigC,IAAiB50B,EAAKmzB,SACzB15B,EAAO5K,KAAKmR,GAGhB,OAAOvG,EAET,+BACE,OAAO1O,KAAK+pC,wBAAuB,GAErC,gBACE,IAAqE,IAAjE/pC,KAAKkmD,cAAc,qBAAsB,CAACqR,YAAY,IACxD,OAEF,MAAMztB,EAAW9pC,KAAK8rD,+BACtB,IAAK,IAAIliD,EAAIkgC,EAASrlC,OAAS,EAAGmF,GAAK,IAAKA,EAC1C5J,KAAK+gE,aAAaj3B,EAASlgC,IAE7B5J,KAAKkmD,cAAc,qBAErB,aAAajxC,GACX,MAAMuV,EAAMxqB,KAAKwqB,IACXoF,EAAO3a,EAAK27B,MACZowB,GAAWpxC,EAAK+Z,SAChBpa,EAAOvvB,KAAK8wC,UACZxnC,EAAO,CACX2L,OACAtQ,MAAOsQ,EAAKtQ,MACZ4yD,YAAY,IAEwC,IAAlDv3D,KAAKkmD,cAAc,oBAAqB58C,KAGxC03D,GACFrxC,GAASnF,EAAK,CACZ5V,MAAoB,IAAdgb,EAAKhb,KAAiB,EAAI2a,EAAK3a,KAAOgb,EAAKhb,KACjDC,OAAsB,IAAf+a,EAAK/a,MAAkB7U,KAAKuF,MAAQgqB,EAAK1a,MAAQ+a,EAAK/a,MAC7D4a,KAAkB,IAAbG,EAAKH,IAAgB,EAAIF,EAAKE,IAAMG,EAAKH,IAC9CC,QAAwB,IAAhBE,EAAKF,OAAmB1vB,KAAKyF,OAAS8pB,EAAKG,OAASE,EAAKF,SAGrEza,EAAKs2B,WAAWjG,OACZ07B,GACFnxC,GAAWrF,GAEblhB,EAAKiuD,YAAa,EAClBv3D,KAAKkmD,cAAc,mBAAoB58C,IAEzC,cAAcgmB,GACZ,OAAOD,GAAeC,EAAOtvB,KAAK8wC,UAAW9wC,KAAK0/D,aAEpD,0BAA0BxyD,EAAG2d,EAAMzmB,EAAS45C,GAC1C,MAAMlrC,EAAS28C,GAAYC,MAAM7kC,GACjC,MAAsB,oBAAX/X,EACFA,EAAO9S,KAAMkN,EAAG9I,EAAS45C,GAE3B,GAET,eAAe5zC,GACb,MAAMxG,EAAU5D,KAAKuB,KAAK4B,SAASiH,GAC7B0/B,EAAW9pC,KAAK28D,UACtB,IAAI1nD,EAAO60B,EAASpS,OAAOjsB,GAAKA,GAAKA,EAAEywC,WAAat4C,GAASiL,MAkB7D,OAjBKoG,IACHA,EAAO,CACL9P,KAAM,KACN5D,KAAM,GACNqC,QAAS,KACT2nC,WAAY,KACZqB,OAAQ,KACRqB,QAAS,KACTE,QAAS,KACT0wB,MAAOj7D,GAAWA,EAAQi7D,OAAS,EACnCl6D,MAAOyF,EACP8xC,SAAUt4C,EACV4R,QAAS,GACTF,SAAS,GAEXw0B,EAAShmC,KAAKmR,IAETA,EAET,aACE,OAAOjV,KAAKytC,WAAaztC,KAAKytC,SAAWrZ,GAAc,KAAM,CAAC3xB,MAAOzC,KAAMmF,KAAM,WAEnF,yBACE,OAAOnF,KAAK8rD,+BAA+BrnD,OAE7C,iBAAiB2F,GACf,MAAMxG,EAAU5D,KAAKuB,KAAK4B,SAASiH,GACnC,IAAKxG,EACH,OAAO,EAET,MAAMqR,EAAOjV,KAAK4uC,eAAexkC,GACjC,MAA8B,mBAAhB6K,EAAK23B,QAAwB33B,EAAK23B,QAAUhpC,EAAQgpC,OAEpE,qBAAqBxiC,EAAcg+B,GACjC,MAAMnzB,EAAOjV,KAAK4uC,eAAexkC,GACjC6K,EAAK23B,QAAUxE,EAEjB,qBAAqBzjC,GACnB3E,KAAKi9D,eAAet4D,IAAU3E,KAAKi9D,eAAet4D,GAEpD,kBAAkBA,GAChB,OAAQ3E,KAAKi9D,eAAet4D,GAE9B,kBAAkByF,EAAc+hC,EAAW/D,GACzC,MAAMvd,EAAOud,EAAU,OAAS,OAC1BnzB,EAAOjV,KAAK4uC,eAAexkC,GAC3Bq6B,EAAQxvB,EAAKs2B,WAAW2G,wBAAmB7vC,EAAWwoB,GACxDpe,EAAQ0/B,IACVl3B,EAAK1T,KAAK4qC,GAAWS,QAAUxE,EAC/BpoC,KAAK0C,WAEL1C,KAAKihE,qBAAqB72D,EAAcg+B,GACxC3D,EAAM/hC,OAAOuS,EAAM,CAACmzB,YACpBpoC,KAAK0C,OAAQ8nB,GAAQA,EAAIpgB,eAAiBA,EAAeygB,OAAOxoB,IAGpE,KAAK+H,EAAc+hC,GACjBnsC,KAAKkhE,kBAAkB92D,EAAc+hC,GAAW,GAElD,KAAK/hC,EAAc+hC,GACjBnsC,KAAKkhE,kBAAkB92D,EAAc+hC,GAAW,GAElD,oBAAoB/hC,GAClB,MAAM6K,EAAOjV,KAAK28D,UAAUvyD,GACxB6K,GAAQA,EAAKs2B,YACft2B,EAAKs2B,WAAW41B,kBAEXnhE,KAAK28D,UAAUvyD,GAExB,QACE,IAAIR,EAAGK,EAGP,IAFAjK,KAAK6iC,OACLwD,GAAS+6B,OAAOphE,MACX4J,EAAI,EAAGK,EAAOjK,KAAKuB,KAAK4B,SAASsB,OAAQmF,EAAIK,IAAQL,EACxD5J,KAAK0+D,oBAAoB90D,GAG7B,UACE5J,KAAKkmD,cAAc,iBACnB,MAAM,OAACl/C,EAAM,IAAEwjB,GAAOxqB,KACtBA,KAAKqhE,QACLrhE,KAAKsoC,OAAO0xB,aACRhzD,IACFhH,KAAKogE,eACLxyC,GAAY5mB,EAAQwjB,GACpBxqB,KAAK+pB,SAASu3C,eAAe92C,GAC7BxqB,KAAKgH,OAAS,KACdhH,KAAKwqB,IAAM,MAEbxqB,KAAKkmD,cAAc,kBACZyV,GAAU37D,KAAK6H,IACtB7H,KAAKkmD,cAAc,gBAErB,iBAAiB58C,GACf,OAAOtJ,KAAKgH,OAAOu6D,aAAaj4D,GAElC,aACEtJ,KAAKwhE,iBACDxhE,KAAKoE,QAAQgnB,WACfprB,KAAKyhE,uBAELzhE,KAAKk9D,UAAW,EAGpB,iBACE,MAAMzqD,EAAYzS,KAAK68D,WACjB9yC,EAAW/pB,KAAK+pB,SAChB23C,EAAO,CAACv8D,EAAMoN,KAClBwX,EAASmV,iBAAiBl/B,KAAMmF,EAAMoN,GACtCE,EAAUtN,GAAQoN,GAEdA,EAAW,CAACrF,EAAGzB,EAAGE,KACtBuB,EAAE4vB,QAAUrxB,EACZyB,EAAE6vB,QAAUpxB,EACZ3L,KAAK6/D,cAAc3yD,IAErBzD,EAAKzJ,KAAKoE,QAAQ8lB,OAAS/kB,GAASu8D,EAAKv8D,EAAMoN,IAEjD,uBACOvS,KAAK88D,uBACR98D,KAAK88D,qBAAuB,IAE9B,MAAMrqD,EAAYzS,KAAK88D,qBACjB/yC,EAAW/pB,KAAK+pB,SAChB23C,EAAO,CAACv8D,EAAMoN,KAClBwX,EAASmV,iBAAiBl/B,KAAMmF,EAAMoN,GACtCE,EAAUtN,GAAQoN,GAEdovD,EAAU,CAACx8D,EAAMoN,KACjBE,EAAUtN,KACZ4kB,EAASoV,oBAAoBn/B,KAAMmF,EAAMoN,UAClCE,EAAUtN,KAGfoN,EAAW,CAAChN,EAAOE,KACnBzF,KAAKgH,QACPhH,KAAKioC,OAAO1iC,EAAOE,IAGvB,IAAIm8D,EACJ,MAAM1E,EAAW,KACfyE,EAAQ,SAAUzE,GAClBl9D,KAAKk9D,UAAW,EAChBl9D,KAAKioC,SACLy5B,EAAK,SAAUnvD,GACfmvD,EAAK,SAAUE,IAEjBA,EAAW,KACT5hE,KAAKk9D,UAAW,EAChByE,EAAQ,SAAUpvD,GAClBvS,KAAKqhE,QACLrhE,KAAKy9D,QAAQ,EAAG,GAChBiE,EAAK,SAAUxE,IAEbnzC,EAAS83C,WAAW7hE,KAAKgH,QAC3Bk2D,IAEA0E,IAGJ,eACEn4D,EAAKzJ,KAAK68D,WAAY,CAACtqD,EAAUpN,KAC/BnF,KAAK+pB,SAASoV,oBAAoBn/B,KAAMmF,EAAMoN,KAEhDvS,KAAK68D,WAAa,GAClBpzD,EAAKzJ,KAAK88D,qBAAsB,CAACvqD,EAAUpN,KACzCnF,KAAK+pB,SAASoV,oBAAoBn/B,KAAMmF,EAAMoN,KAEhDvS,KAAK88D,0BAAuBz6D,EAE9B,iBAAiBiR,EAAOuX,EAAMy0B,GAC5B,MAAMtoB,EAASsoB,EAAU,MAAQ,SACjC,IAAIrqC,EAAMlI,EAAMnD,EAAGK,EAKnB,IAJa,YAAT4gB,IACF5V,EAAOjV,KAAK4uC,eAAet7B,EAAM,GAAGlJ,cACpC6K,EAAKs2B,WAAW,IAAMvU,EAAS,wBAE5BptB,EAAI,EAAGK,EAAOqJ,EAAM7O,OAAQmF,EAAIK,IAAQL,EAAG,CAC9CmD,EAAOuG,EAAM1J,GACb,MAAM2hC,EAAax+B,GAAQ/M,KAAK4uC,eAAe7hC,EAAK3C,cAAcmhC,WAC9DA,GACFA,EAAWvU,EAAS,cAAcjqB,EAAKmvB,QAASnvB,EAAK3C,aAAc2C,EAAKpI,QAI9E,oBACE,OAAO3E,KAAKulC,SAAW,GAEzB,kBAAkBu8B,GAChB,MAAMC,EAAa/hE,KAAKulC,SAAW,GAC7ByC,EAAS85B,EAAet+D,IAAI,EAAE4G,eAAczF,YAChD,MAAMsQ,EAAOjV,KAAK4uC,eAAexkC,GACjC,IAAK6K,EACH,MAAM,IAAIhO,MAAM,6BAA+BmD,GAEjD,MAAO,CACLA,eACA8xB,QAASjnB,EAAK1T,KAAKoD,GACnBA,WAGE4R,GAAWzM,EAAek+B,EAAQ+5B,GACpCxrD,IACFvW,KAAKulC,QAAUyC,EACfhoC,KAAK48D,WAAa,KAClB58D,KAAK8/D,mBAAmB93B,EAAQ+5B,IAGpC,cAAc5K,EAAM7tD,EAAMouB,GACxB,OAAO13B,KAAKg9D,SAASgF,OAAOhiE,KAAMm3D,EAAM7tD,EAAMouB,GAEhD,mBAAmBsQ,EAAQ+5B,EAAYE,GACrC,MAAMC,EAAeliE,KAAKoE,QAAQkmB,MAC5Bm2B,EAAO,CAAC7zC,EAAGC,IAAMD,EAAE8qB,OAAOjsB,IAAMoB,EAAEgrD,KAAKlsD,GAAKF,EAAErB,eAAiBuB,EAAEvB,cAAgBqB,EAAE9G,QAAUgH,EAAEhH,QAC/Fw9D,EAAc1hB,EAAKshB,EAAY/5B,GAC/Bo6B,EAAYH,EAASj6B,EAASyY,EAAKzY,EAAQ+5B,GAC7CI,EAAY19D,QACdzE,KAAKqiE,iBAAiBF,EAAaD,EAAar3C,MAAM,GAEpDu3C,EAAU39D,QAAUy9D,EAAar3C,MACnC7qB,KAAKqiE,iBAAiBD,EAAWF,EAAar3C,MAAM,GAGxD,cAAc3d,EAAG+0D,GACf,MAAM34D,EAAO,CACXw8B,MAAO54B,EACP+0D,SACA1K,YAAY,EACZ0E,YAAaj8D,KAAK4uD,cAAc1hD,IAE5Bo1D,EAAehL,IAAYA,EAAOlzD,QAAQ8lB,QAAUlqB,KAAKoE,QAAQ8lB,QAAQrmB,SAASqJ,EAAE2nD,OAAO1vD,MACjG,IAA6D,IAAzDnF,KAAKkmD,cAAc,cAAe58C,EAAMg5D,GAC1C,OAEF,MAAM/rD,EAAUvW,KAAKuiE,aAAar1D,EAAG+0D,EAAQ34D,EAAK2yD,aAMlD,OALA3yD,EAAKiuD,YAAa,EAClBv3D,KAAKkmD,cAAc,aAAc58C,EAAMg5D,IACnC/rD,GAAWjN,EAAKiN,UAClBvW,KAAKF,SAEAE,KAET,aAAakN,EAAG+0D,EAAQhG,GACtB,MAAO12B,QAASw8B,EAAa,GAAE,QAAE39D,GAAWpE,KACtCg+C,EAAmBikB,EACnBj6B,EAAShoC,KAAKwiE,mBAAmBt1D,EAAG60D,EAAY9F,EAAaje,GAC7Dke,EAAUjvD,EAAcC,GACxB8uD,EAAYD,GAAmB7uD,EAAGlN,KAAK48D,WAAYX,EAAaC,GAClED,IACFj8D,KAAK48D,WAAa,KAClBxzD,EAAShF,EAAQ6mB,QAAS,CAAC/d,EAAG86B,EAAQhoC,MAAOA,MACzCk8D,GACF9yD,EAAShF,EAAQ8mB,QAAS,CAAChe,EAAG86B,EAAQhoC,MAAOA,OAGjD,MAAMuW,GAAWzM,EAAek+B,EAAQ+5B,GAMxC,OALIxrD,GAAW0rD,KACbjiE,KAAKulC,QAAUyC,EACfhoC,KAAK8/D,mBAAmB93B,EAAQ+5B,EAAYE,IAE9CjiE,KAAK48D,WAAaZ,EACXzlD,EAET,mBAAmBrJ,EAAG60D,EAAY9F,EAAaje,GAC7C,GAAe,aAAX9wC,EAAE/H,KACJ,MAAO,GAET,IAAK82D,EACH,OAAO8F,EAET,MAAMG,EAAeliE,KAAKoE,QAAQkmB,MAClC,OAAOtqB,KAAKyiE,0BAA0Bv1D,EAAGg1D,EAAar3C,KAAMq3C,EAAclkB,IAG9E,MAAM0kB,GAAoB,IAAMj5D,EAAK,GAAMkyD,UAAYl5D,GAAUA,EAAMu6D,SAASuC,cAC1E3sD,IAAa,EA0CnB,SAAS+vD,GAAQn4C,EAAK0R,EAAS8c,GAC7B,MAAM,WAACD,EAAU,YAAE6pB,EAAW,EAAEn3D,EAAC,EAAEE,EAAC,YAAEkuC,EAAW,YAAED,GAAe1d,EAClE,IAAI2mC,EAAcD,EAAc/oB,EAChCrvB,EAAIkE,YACJlE,EAAIoE,IAAInjB,EAAGE,EAAGkuC,EAAad,EAAa8pB,EAAa7pB,EAAW6pB,GAC5DjpB,EAAcgpB,GAChBC,EAAcD,EAAchpB,EAC5BpvB,EAAIoE,IAAInjB,EAAGE,EAAGiuC,EAAaZ,EAAW6pB,EAAa9pB,EAAa8pB,GAAa,IAE7Er4C,EAAIoE,IAAInjB,EAAGE,EAAGi3D,EAAa5pB,EAAWtrC,EAASqrC,EAAarrC,GAE9D8c,EAAIqE,YACJrE,EAAIoF,OAEN,SAASkzC,GAAgBtiE,GACvB,OAAOuyB,GAAkBvyB,EAAO,CAAC,aAAc,WAAY,aAAc,aAE3E,SAASuiE,GAAoBn0C,EAAKgrB,EAAaC,EAAampB,GAC1D,MAAMt3D,EAAIo3D,GAAgBl0C,EAAIxqB,QAAQ6+D,cAChCC,GAAiBrpB,EAAcD,GAAe,EAC9CupB,EAAa/1D,KAAKoC,IAAI0zD,EAAeF,EAAappB,EAAc,GAChEwpB,EAAqBt6C,IACzB,MAAMu6C,GAAiBxpB,EAAczsC,KAAKoC,IAAI0zD,EAAep6C,IAAQk6C,EAAa,EAClF,OAAOzxD,GAAYuX,EAAK,EAAG1b,KAAKoC,IAAI0zD,EAAeG,KAErD,MAAO,CACLC,WAAYF,EAAkB13D,EAAE43D,YAChCC,SAAUH,EAAkB13D,EAAE63D,UAC9BC,WAAYjyD,GAAY7F,EAAE83D,WAAY,EAAGL,GACzCM,SAAUlyD,GAAY7F,EAAE+3D,SAAU,EAAGN,IAGzC,SAASO,GAAW/oD,EAAGgpD,EAAOl4D,EAAGE,GAC/B,MAAO,CACLF,EAAGA,EAAIkP,EAAIvN,KAAKwK,IAAI+rD,GACpBh4D,EAAGA,EAAIgP,EAAIvN,KAAKuJ,IAAIgtD,IAGxB,SAASC,GAAQp5C,EAAK0R,EAASqc,EAAQ4B,EAASnpC,EAAK2sC,GACnD,MAAM,EAAClyC,EAAC,EAAEE,EAAGotC,WAAYhoC,EAAK,YAAE6xD,EAAahpB,YAAaiqB,GAAU3nC,EAC9D2d,EAAczsC,KAAKqC,IAAIysB,EAAQ2d,YAAcM,EAAU5B,EAASqqB,EAAa,GAC7EhpB,EAAciqB,EAAS,EAAIA,EAAS1pB,EAAU5B,EAASqqB,EAAc,EAC3E,IAAIkB,EAAgB,EACpB,MAAMC,EAAQ/yD,EAAMD,EACpB,GAAIopC,EAAS,CACX,MAAM6pB,EAAuBH,EAAS,EAAIA,EAAS1pB,EAAU,EACvD8pB,EAAuBpqB,EAAc,EAAIA,EAAcM,EAAU,EACjE+pB,GAAsBF,EAAuBC,GAAwB,EACrEE,EAAuC,IAAvBD,EAA4BH,EAAQG,GAAuBA,EAAqB/pB,GAAW4pB,EACjHD,GAAiBC,EAAQI,GAAiB,EAE5C,MAAMC,EAAOh3D,KAAKqC,IAAI,KAAOs0D,EAAQlqB,EAActB,EAASprC,GAAM0sC,EAC5DwqB,GAAeN,EAAQK,GAAQ,EAC/BrrB,EAAahoC,EAAQszD,EAAcP,EACnC9qB,EAAWhoC,EAAMqzD,EAAcP,GAC/B,WAACR,EAAU,SAAEC,EAAQ,WAAEC,EAAU,SAAEC,GAAYV,GAAoB7mC,EAAS0d,EAAaC,EAAab,EAAWD,GACjHurB,EAA2BzqB,EAAcypB,EACzCiB,EAAyB1qB,EAAc0pB,EACvCiB,EAA0BzrB,EAAauqB,EAAagB,EACpDG,EAAwBzrB,EAAWuqB,EAAWgB,EAC9CG,EAA2B9qB,EAAc4pB,EACzCmB,EAAyB/qB,EAAc6pB,EACvCmB,EAA0B7rB,EAAayqB,EAAakB,EACpDG,EAAwB7rB,EAAWyqB,EAAWkB,EAEpD,GADAn6C,EAAIkE,YACAivB,EAAU,CAEZ,GADAnzB,EAAIoE,IAAInjB,EAAGE,EAAGkuC,EAAa2qB,EAAyBC,GAChDlB,EAAW,EAAG,CAChB,MAAMuB,EAAUpB,GAAWa,EAAwBE,EAAuBh5D,EAAGE,GAC7E6e,EAAIoE,IAAIk2C,EAAQr5D,EAAGq5D,EAAQn5D,EAAG43D,EAAUkB,EAAuBzrB,EAAWtrC,GAE5E,MAAMq3D,EAAKrB,GAAWiB,EAAwB3rB,EAAUvtC,EAAGE,GAE3D,GADA6e,EAAIuE,OAAOg2C,EAAGt5D,EAAGs5D,EAAGp5D,GAChB83D,EAAW,EAAG,CAChB,MAAMqB,EAAUpB,GAAWiB,EAAwBE,EAAuBp5D,EAAGE,GAC7E6e,EAAIoE,IAAIk2C,EAAQr5D,EAAGq5D,EAAQn5D,EAAG83D,EAAUzqB,EAAWtrC,EAASm3D,EAAwBz3D,KAAKD,IAG3F,GADAqd,EAAIoE,IAAInjB,EAAGE,EAAGiuC,EAAaZ,EAAYyqB,EAAW7pB,EAAcb,EAAcyqB,EAAa5pB,GAAc,GACrG4pB,EAAa,EAAG,CAClB,MAAMsB,EAAUpB,GAAWgB,EAA0BE,EAAyBn5D,EAAGE,GACjF6e,EAAIoE,IAAIk2C,EAAQr5D,EAAGq5D,EAAQn5D,EAAG63D,EAAYoB,EAA0Bx3D,KAAKD,GAAI4rC,EAAarrC,GAE5F,MAAMs3D,EAAKtB,GAAWY,EAA0BvrB,EAAYttC,EAAGE,GAE/D,GADA6e,EAAIuE,OAAOi2C,EAAGv5D,EAAGu5D,EAAGr5D,GAChB23D,EAAa,EAAG,CAClB,MAAMwB,EAAUpB,GAAWY,EAA0BE,EAAyB/4D,EAAGE,GACjF6e,EAAIoE,IAAIk2C,EAAQr5D,EAAGq5D,EAAQn5D,EAAG23D,EAAYvqB,EAAarrC,EAAS82D,QAE7D,CACLh6C,EAAIsE,OAAOrjB,EAAGE,GACd,MAAMs5D,EAAc73D,KAAKwK,IAAI4sD,GAA2B3qB,EAAcpuC,EAChEy5D,EAAc93D,KAAKuJ,IAAI6tD,GAA2B3qB,EAAcluC,EACtE6e,EAAIuE,OAAOk2C,EAAaC,GACxB,MAAMC,EAAY/3D,KAAKwK,IAAI6sD,GAAyB5qB,EAAcpuC,EAC5D25D,EAAYh4D,KAAKuJ,IAAI8tD,GAAyB5qB,EAAcluC,EAClE6e,EAAIuE,OAAOo2C,EAAWC,GAExB56C,EAAIqE,YAEN,SAASw2C,GAAQ76C,EAAK0R,EAASqc,EAAQ4B,EAASwD,GAC9C,MAAM,YAAC2nB,EAAW,WAAEvsB,EAAU,cAAEJ,GAAiBzc,EACjD,IAAI8c,EAAW9c,EAAQ8c,SACvB,GAAIssB,EAAa,CACf1B,GAAQp5C,EAAK0R,EAASqc,EAAQ4B,EAASpB,EAAa1rC,EAAKswC,GACzD,IAAK,IAAI/zC,EAAI,EAAGA,EAAI07D,IAAe17D,EACjC4gB,EAAI0E,OAEDlgB,MAAM2pC,KACTK,EAAWD,EAAaJ,EAAgBtrC,EACpCsrC,EAAgBtrC,IAAQ,IAC1B2rC,GAAY3rC,IAMlB,OAFAu2D,GAAQp5C,EAAK0R,EAASqc,EAAQ4B,EAASnB,EAAU2E,GACjDnzB,EAAI0E,OACG8pB,EAET,SAASusB,GAAsB/6C,EAAK0R,EAASspC,GAC3C,MAAM,EAAC/5D,EAAC,EAAEE,EAAC,WAAEotC,EAAU,YAAE6pB,EAAW,YAAE0C,GAAeppC,EAC/C2d,EAAczsC,KAAKqC,IAAIysB,EAAQ2d,YAAc+oB,EAAa,GAC1DhpB,EAAc1d,EAAQ0d,YAAcgpB,EAC1C,IAAIh5D,EAMJ,IALI47D,GACF7C,GAAQn4C,EAAK0R,EAAS6c,EAAa1rC,GAErCmd,EAAIkE,YACJlE,EAAIoE,IAAInjB,EAAGE,EAAGiuC,EAAab,EAAa1rC,EAAK0rC,GAAY,GACpDnvC,EAAI,EAAGA,EAAI07D,IAAe17D,EAC7B4gB,EAAI4E,SAIN,IAFA5E,EAAIkE,YACJlE,EAAIoE,IAAInjB,EAAGE,EAAGkuC,EAAad,EAAYA,EAAa1rC,GAC/CzD,EAAI,EAAGA,EAAI07D,IAAe17D,EAC7B4gB,EAAI4E,SAGR,SAASsxB,GAAWl2B,EAAK0R,EAASqc,EAAQ4B,EAASnB,EAAU2E,GAC3D,MAAM,QAACv5C,GAAW83B,GACZ,YAAC/M,EAAW,gBAAEiV,GAAmBhgC,EACjCohE,EAAgC,UAAxBphE,EAAQo3C,YACjBrsB,IAGDq2C,GACFh7C,EAAIyG,UAA0B,EAAd9B,EAChB3E,EAAIi7C,SAAWrhC,GAAmB,UAElC5Z,EAAIyG,UAAY9B,EAChB3E,EAAIi7C,SAAWrhC,GAAmB,SAEhClI,EAAQopC,aACVC,GAAsB/6C,EAAK0R,EAASspC,GAElCA,GACF7C,GAAQn4C,EAAK0R,EAAS8c,GAExB4qB,GAAQp5C,EAAK0R,EAASqc,EAAQ4B,EAASnB,EAAU2E,GACjDnzB,EAAI4E,UAvMNrrB,OAAOgoB,iBAAiB,GAAO,CAC7BG,SAAU,CACRtZ,cACApS,MAAO0rB,IAETyvC,UAAW,CACT/oD,cACApS,MAAOm7D,IAETvyC,UAAW,CACTxW,cACApS,MAAO4oB,IAETkkC,SAAU,CACR16C,cACApS,MAAO,IAETs6D,QAAS,CACPloD,cACApS,MAAOs6D,IAETc,SAAU,CACRhpD,cACApS,MAAOo7D,IAETz1D,SAAU,CACRyM,cACApS,MAAO,IAAI8S,KACT,GAASG,OAAOH,GAChBovD,OAGJgD,WAAY,CACV9yD,cACApS,MAAO,IAAI8S,KACT,GAAS8tD,UAAU9tD,GACnBovD,SAqKN,MAAM,WAAmB,GACvB,YAAY97B,GACVyP,QACAr2C,KAAKoE,aAAU/B,EACfrC,KAAK24C,mBAAgBt2C,EACrBrC,KAAK+4C,gBAAa12C,EAClBrC,KAAKg5C,cAAW32C,EAChBrC,KAAK45C,iBAAcv3C,EACnBrC,KAAK65C,iBAAcx3C,EACnBrC,KAAK4iE,YAAc,EACnB5iE,KAAKslE,YAAc,EACf1+B,GACF7iC,OAAOC,OAAOhE,KAAM4mC,GAGxB,QAAQ++B,EAAQC,EAAQ5nB,GACtB,MAAM1uB,EAAQtvB,KAAKi+C,SAAS,CAAC,IAAK,KAAMD,IAClC,MAAC1tC,EAAK,SAAEE,GAAYR,EAAkBsf,EAAO,CAAC7jB,EAAGk6D,EAAQh6D,EAAGi6D,KAC5D,WAAC7sB,EAAU,SAAEC,EAAQ,YAAEY,EAAW,YAAEC,EAAW,cAAElB,GAAiB34C,KAAKi+C,SAAS,CACpF,aACA,WACA,cACA,cACA,iBACCD,GACG6nB,EAAU7lE,KAAKoE,QAAQ+1C,QAAU,EACjCmB,EAAiBxyC,EAAe6vC,EAAeK,EAAWD,GAC1D+sB,EAAgBxqB,GAAkBjuC,GAAOyD,GAAcR,EAAOyoC,EAAYC,GAC1E+sB,EAAet0D,GAAWjB,EAAUopC,EAAcisB,EAAShsB,EAAcgsB,GAC/E,OAAQC,GAAiBC,EAE3B,eAAe/nB,GACb,MAAM,EAACvyC,EAAC,EAAEE,EAAC,WAAEotC,EAAU,SAAEC,EAAQ,YAAEY,EAAW,YAAEC,GAAe75C,KAAKi+C,SAAS,CAC3E,IACA,IACA,aACA,WACA,cACA,cACA,iBACCD,IACG,OAACzF,EAAM,QAAE4B,GAAWn6C,KAAKoE,QACzB4hE,GAAajtB,EAAaC,GAAY,EACtCitB,GAAcrsB,EAAcC,EAAcM,EAAU5B,GAAU,EACpE,MAAO,CACL9sC,EAAGA,EAAI2B,KAAKwK,IAAIouD,GAAaC,EAC7Bt6D,EAAGA,EAAIyB,KAAKuJ,IAAIqvD,GAAaC,GAGjC,gBAAgBjoB,GACd,OAAOh+C,KAAKmvD,eAAenR,GAE7B,KAAKxzB,GACH,MAAM,QAACpmB,EAAO,cAAEu0C,GAAiB34C,KAC3Bu4C,GAAUn0C,EAAQm0C,QAAU,GAAK,EACjC4B,GAAW/1C,EAAQ+1C,SAAW,GAAK,EACnCwD,EAAWv5C,EAAQu5C,SAGzB,GAFA39C,KAAK4iE,YAAuC,UAAxBx+D,EAAQo3C,YAA2B,IAAO,EAC9Dx7C,KAAKslE,YAAc3sB,EAAgBtrC,EAAMD,KAAKkB,MAAMqqC,EAAgBtrC,GAAO,EACrD,IAAlBsrC,GAAuB34C,KAAK45C,YAAc,GAAK55C,KAAK65C,YAAc,EACpE,OAEFrvB,EAAI0C,OACJ,IAAIg5C,EAAe,EACnB,GAAI3tB,EAAQ,CACV2tB,EAAe3tB,EAAS,EACxB,MAAMytB,GAAahmE,KAAK+4C,WAAa/4C,KAAKg5C,UAAY,EACtDxuB,EAAIgE,UAAUphB,KAAKwK,IAAIouD,GAAaE,EAAc94D,KAAKuJ,IAAIqvD,GAAaE,GACpElmE,KAAK24C,eAAiBxrC,IACxB+4D,EAAe3tB,GAGnB/tB,EAAI+G,UAAYntB,EAAQwlB,gBACxBY,EAAIwG,YAAc5sB,EAAQylB,YAC1B,MAAMmvB,EAAWqsB,GAAQ76C,EAAKxqB,KAAMkmE,EAAc/rB,EAASwD,GAC3D+C,GAAWl2B,EAAKxqB,KAAMkmE,EAAc/rB,EAASnB,EAAU2E,GACvDnzB,EAAI8C,WAmBR,SAAS64C,GAAS37C,EAAKpmB,EAASuD,EAAQvD,GACtComB,EAAI47C,QAAUt9D,EAAenB,EAAMs8B,eAAgB7/B,EAAQ6/B,gBAC3DzZ,EAAI0gC,YAAYpiD,EAAenB,EAAMu8B,WAAY9/B,EAAQ8/B,aACzD1Z,EAAI2gC,eAAiBriD,EAAenB,EAAMw8B,iBAAkB//B,EAAQ+/B,kBACpE3Z,EAAIi7C,SAAW38D,EAAenB,EAAMy8B,gBAAiBhgC,EAAQggC,iBAC7D5Z,EAAIyG,UAAYnoB,EAAenB,EAAMwnB,YAAa/qB,EAAQ+qB,aAC1D3E,EAAIwG,YAAcloB,EAAenB,EAAMkiB,YAAazlB,EAAQylB,aAE9D,SAASkF,GAAOvE,EAAKuF,EAAUxlB,GAC7BigB,EAAIuE,OAAOxkB,EAAOkB,EAAGlB,EAAOoB,GAE9B,SAAS06D,GAAcjiE,GACrB,OAAIA,EAAQkiE,QACHx2C,GAEL1rB,EAAQk3B,SAA8C,aAAnCl3B,EAAQg3B,uBACtBlL,GAEFnB,GAET,SAASw3C,GAASrxD,EAAQysB,EAAS6uB,EAAS,IAC1C,MAAMn7C,EAAQH,EAAOzQ,QACdsM,MAAOy1D,EAAc,EAAGx1D,IAAKy1D,EAAYpxD,EAAQ,GAAKm7C,GACtDz/C,MAAO21D,EAAc11D,IAAK21D,GAAchlC,EACzC5wB,EAAQ3D,KAAKqC,IAAI+2D,EAAaE,GAC9B11D,EAAM5D,KAAKoC,IAAIi3D,EAAWE,GAC1BC,EAAUJ,EAAcE,GAAgBD,EAAYC,GAAgBF,EAAcG,GAAcF,EAAYE,EAClH,MAAO,CACLtxD,QACAtE,QACAkqB,KAAM0G,EAAQ1G,KACdhxB,KAAM+G,EAAMD,IAAU61D,EAAUvxD,EAAQrE,EAAMD,EAAQC,EAAMD,GAGhE,SAAS81D,GAAYr8C,EAAKsG,EAAM6Q,EAAS6uB,GACvC,MAAM,OAACt7C,EAAM,QAAE9Q,GAAW0sB,GACpB,MAACzb,EAAK,MAAEtE,EAAK,KAAEkqB,EAAI,KAAEhxB,GAAQs8D,GAASrxD,EAAQysB,EAAS6uB,GACvDsW,EAAaT,GAAcjiE,GACjC,IACIwF,EAAG0lB,EAAO+L,GADV,KAACqX,GAAO,EAAI,QAAE/oC,GAAW6mD,GAAU,GAEvC,IAAK5mD,EAAI,EAAGA,GAAKK,IAAQL,EACvB0lB,EAAQpa,GAAQnE,GAASpH,EAAUM,EAAOL,EAAIA,IAAMyL,GAChDia,EAAMqJ,OAEC+Z,GACTloB,EAAIsE,OAAOQ,EAAM7jB,EAAG6jB,EAAM3jB,GAC1B+mC,GAAO,GAEPo0B,EAAWt8C,EAAK6Q,EAAM/L,EAAO3lB,EAASvF,EAAQkiE,SAEhDjrC,EAAO/L,GAMT,OAJI2L,IACF3L,EAAQpa,GAAQnE,GAASpH,EAAUM,EAAO,IAAMoL,GAChDyxD,EAAWt8C,EAAK6Q,EAAM/L,EAAO3lB,EAASvF,EAAQkiE,YAEvCrrC,EAEX,SAAS8rC,GAAgBv8C,EAAKsG,EAAM6Q,EAAS6uB,GAC3C,MAAMt7C,EAAS4b,EAAK5b,QACd,MAACG,EAAK,MAAEtE,EAAK,KAAE9G,GAAQs8D,GAASrxD,EAAQysB,EAAS6uB,IACjD,KAAC9d,GAAO,EAAI,QAAE/oC,GAAW6mD,GAAU,GACzC,IAEI5mD,EAAG0lB,EAAO03C,EAAOttB,EAAMF,EAAMytB,EAF7BC,EAAO,EACPC,EAAS,EAEb,MAAMC,EAAcziE,IAAWoM,GAASpH,EAAUM,EAAOtF,EAAQA,IAAU0Q,EACrEgyD,EAAQ,KACR3tB,IAASF,IACXhvB,EAAIuE,OAAOm4C,EAAM1tB,GACjBhvB,EAAIuE,OAAOm4C,EAAMxtB,GACjBlvB,EAAIuE,OAAOm4C,EAAMD,KAOrB,IAJIv0B,IACFpjB,EAAQpa,EAAOkyD,EAAW,IAC1B58C,EAAIsE,OAAOQ,EAAM7jB,EAAG6jB,EAAM3jB,IAEvB/B,EAAI,EAAGA,GAAKK,IAAQL,EAAG,CAE1B,GADA0lB,EAAQpa,EAAOkyD,EAAWx9D,IACtB0lB,EAAMqJ,KACR,SAEF,MAAMltB,EAAI6jB,EAAM7jB,EACVE,EAAI2jB,EAAM3jB,EACV27D,EAAa,EAAJ77D,EACX67D,IAAWN,GACTr7D,EAAI+tC,EACNA,EAAO/tC,EACEA,EAAI6tC,IACbA,EAAO7tC,GAETu7D,GAAQC,EAASD,EAAOz7D,KAAO07D,IAE/BE,IACA78C,EAAIuE,OAAOtjB,EAAGE,GACdq7D,EAAQM,EACRH,EAAS,EACTztB,EAAOF,EAAO7tC,GAEhBs7D,EAAQt7D,EAEV07D,IAEF,SAASE,GAAkBz2C,GACzB,MAAMJ,EAAOI,EAAK1sB,QACZ8/B,EAAaxT,EAAKwT,YAAcxT,EAAKwT,WAAWz/B,OAChD+iE,GAAe12C,EAAKqrB,aAAerrB,EAAKkS,QAAUtS,EAAK4K,SAA2C,aAAhC5K,EAAK0K,yBAA0C1K,EAAK41C,UAAYpiC,EACxI,OAAOsjC,EAAcT,GAAkBF,GAEzC,SAASY,GAAwBrjE,GAC/B,OAAIA,EAAQkiE,QACHhnC,GAELl7B,EAAQk3B,SAA8C,aAAnCl3B,EAAQg3B,uBACtBmE,GAEFF,GAET,SAASqoC,GAAoBl9C,EAAKsG,EAAM/f,EAAOsE,GAC7C,IAAIsyD,EAAO72C,EAAK82C,MACXD,IACHA,EAAO72C,EAAK82C,MAAQ,IAAIC,OACpB/2C,EAAK62C,KAAKA,EAAM52D,EAAOsE,IACzBsyD,EAAK94C,aAGTs3C,GAAS37C,EAAKsG,EAAK1sB,SACnBomB,EAAI4E,OAAOu4C,GAEb,SAASG,GAAiBt9C,EAAKsG,EAAM/f,EAAOsE,GAC1C,MAAM,SAACmtB,EAAQ,QAAEp+B,GAAW0sB,EACtBi3C,EAAgBR,GAAkBz2C,GACxC,IAAK,MAAM6Q,KAAWa,EACpB2jC,GAAS37C,EAAKpmB,EAASu9B,EAAQh6B,OAC/B6iB,EAAIkE,YACAq5C,EAAcv9C,EAAKsG,EAAM6Q,EAAS,CAAC5wB,QAAOC,IAAKD,EAAQsE,EAAQ,KACjEmV,EAAIqE,YAENrE,EAAI4E,SA1JR,GAAWvnB,GAAK,MAChB,GAAWqkB,SAAW,CACpBsvB,YAAa,SACb3xB,YAAa,OACbua,qBAAiB/hC,EACjB4gE,aAAc,EACd9zC,YAAa,EACbopB,OAAQ,EACR4B,QAAS,EACT7pC,WAAOjO,EACPs7C,UAAU,GAEZ,GAAWQ,cAAgB,CACzBv0B,gBAAiB,mBAgJnB,MAAMo+C,GAA8B,oBAAXH,OACzB,SAASviC,GAAK9a,EAAKsG,EAAM/f,EAAOsE,GAC1B2yD,KAAcl3C,EAAK1sB,QAAQu9B,QAC7B+lC,GAAoBl9C,EAAKsG,EAAM/f,EAAOsE,GAEtCyyD,GAAiBt9C,EAAKsG,EAAM/f,EAAOsE,GAGvC,MAAM,WAAoB,GACxB,YAAYuxB,GACVyP,QACAr2C,KAAKo8C,UAAW,EAChBp8C,KAAKoE,aAAU/B,EACfrC,KAAK8F,YAASzD,EACdrC,KAAKgjC,WAAQ3gC,EACbrC,KAAKmjC,eAAY9gC,EACjBrC,KAAK4nE,WAAQvlE,EACbrC,KAAKioE,aAAU5lE,EACfrC,KAAKkoE,eAAY7lE,EACjBrC,KAAKm8C,YAAa,EAClBn8C,KAAKmoE,gBAAiB,EACtBnoE,KAAKwjC,mBAAgBnhC,EACjBukC,GACF7iC,OAAOC,OAAOhE,KAAM4mC,GAGxB,oBAAoBkK,EAAWnmB,GAC7B,MAAMvmB,EAAUpE,KAAKoE,QACrB,IAAKA,EAAQk3B,SAA8C,aAAnCl3B,EAAQg3B,0BAA2Ch3B,EAAQkiE,UAAYtmE,KAAKmoE,eAAgB,CAClH,MAAMltC,EAAO72B,EAAQ+2B,SAAWn7B,KAAKgjC,MAAQhjC,KAAKmjC,UAClDnI,GAA2Bh7B,KAAKioE,QAAS7jE,EAAS0sC,EAAW7V,EAAMtQ,GACnE3qB,KAAKmoE,gBAAiB,GAG1B,WAAWjzD,GACTlV,KAAKioE,QAAU/yD,SACRlV,KAAKkoE,iBACLloE,KAAK4nE,MACZ5nE,KAAKmoE,gBAAiB,EAExB,aACE,OAAOnoE,KAAKioE,QAEd,eACE,OAAOjoE,KAAKkoE,YAAcloE,KAAKkoE,UAAYplC,GAAiB9iC,KAAMA,KAAKoE,QAAQu9B,UAEjF,QACE,MAAMa,EAAWxiC,KAAKwiC,SAChBttB,EAASlV,KAAKkV,OACpB,OAAOstB,EAAS/9B,QAAUyQ,EAAOstB,EAAS,GAAGzxB,OAE/C,OACE,MAAMyxB,EAAWxiC,KAAKwiC,SAChBttB,EAASlV,KAAKkV,OACdG,EAAQmtB,EAAS/9B,OACvB,OAAO4Q,GAASH,EAAOstB,EAASntB,EAAQ,GAAGrE,KAE7C,YAAYse,EAAO/f,GACjB,MAAMnL,EAAUpE,KAAKoE,QACf5D,EAAQ8uB,EAAM/f,GACd2F,EAASlV,KAAKkV,OACdstB,EAAWD,GAAeviC,KAAM,CAACuP,WAAUwB,MAAOvQ,EAAOwQ,IAAKxQ,IACpE,IAAKgiC,EAAS/9B,OACZ,OAEF,MAAMiK,EAAS,GACT05D,EAAeX,GAAwBrjE,GAC7C,IAAIwF,EAAGK,EACP,IAAKL,EAAI,EAAGK,EAAOu4B,EAAS/9B,OAAQmF,EAAIK,IAAQL,EAAG,CACjD,MAAM,MAACmH,EAAK,IAAEC,GAAOwxB,EAAS54B,GACxBmS,EAAK7G,EAAOnE,GACZiL,EAAK9G,EAAOlE,GAClB,GAAI+K,IAAOC,EAAI,CACbtN,EAAO5K,KAAKiY,GACZ,SAEF,MAAMtF,EAAIrJ,KAAK8B,KAAK1O,EAAQub,EAAGxM,KAAcyM,EAAGzM,GAAYwM,EAAGxM,KACzD84D,EAAeD,EAAarsD,EAAIC,EAAIvF,EAAGrS,EAAQkiE,SACrD+B,EAAa94D,GAAY+f,EAAM/f,GAC/Bb,EAAO5K,KAAKukE,GAEd,OAAyB,IAAlB35D,EAAOjK,OAAeiK,EAAO,GAAKA,EAE3C,YAAY8b,EAAKmX,EAAS6uB,GACxB,MAAMuX,EAAgBR,GAAkBvnE,MACxC,OAAO+nE,EAAcv9C,EAAKxqB,KAAM2hC,EAAS6uB,GAE3C,KAAKhmC,EAAKzZ,EAAOsE,GACf,MAAMmtB,EAAWxiC,KAAKwiC,SAChBulC,EAAgBR,GAAkBvnE,MACxC,IAAIi7B,EAAOj7B,KAAKgjC,MAChBjyB,EAAQA,GAAS,EACjBsE,EAAQA,GAAUrV,KAAKkV,OAAOzQ,OAASsM,EACvC,IAAK,MAAM4wB,KAAWa,EACpBvH,GAAQ8sC,EAAcv9C,EAAKxqB,KAAM2hC,EAAS,CAAC5wB,QAAOC,IAAKD,EAAQsE,EAAQ,IAEzE,QAAS4lB,EAEX,KAAKzQ,EAAKsmB,EAAW//B,EAAOsE,GAC1B,MAAMjR,EAAUpE,KAAKoE,SAAW,GAC1B8Q,EAASlV,KAAKkV,QAAU,GAC1BA,EAAOzQ,QAAUL,EAAQ+qB,cAC3B3E,EAAI0C,OACJoY,GAAK9a,EAAKxqB,KAAM+Q,EAAOsE,GACvBmV,EAAI8C,WAEFttB,KAAKo8C,WACPp8C,KAAKmoE,gBAAiB,EACtBnoE,KAAK4nE,WAAQvlE,IA2BnB,SAASimE,GAAUlsC,EAAIK,EAAKhnB,EAAMuoC,GAChC,MAAM55C,EAAUg4B,EAAGh4B,SACZ,CAACqR,GAAOjV,GAAS47B,EAAG6hB,SAAS,CAACxoC,GAAOuoC,GAC5C,OAAQ5wC,KAAK8B,IAAIutB,EAAMj8B,GAAS4D,EAAQkqB,OAASlqB,EAAQmkE,UA1B3D,GAAY1gE,GAAK,OACjB,GAAYqkB,SAAW,CACrB+X,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBjV,YAAa,EACbyL,iBAAiB,EACjBQ,uBAAwB,UACxBlM,MAAM,EACNiM,UAAU,EACVmrC,SAAS,EACThrC,QAAS,GAEX,GAAY6iB,cAAgB,CAC1Bv0B,gBAAiB,kBACjBC,YAAa,eAEf,GAAYsN,YAAc,CACxBhL,aAAa,EACbE,WAAa/rB,GAAkB,eAATA,GAAkC,SAATA,GAQjD,MAAM,WAAqB,GACzB,YAAYsmC,GACVyP,QACAr2C,KAAKoE,aAAU/B,EACfrC,KAAKu4B,YAASl2B,EACdrC,KAAK24B,UAAOt2B,EACZrC,KAAK6iC,UAAOxgC,EACRukC,GACF7iC,OAAOC,OAAOhE,KAAM4mC,GAGxB,QAAQ4hC,EAAQC,EAAQzqB,GACtB,MAAM55C,EAAUpE,KAAKoE,SACf,EAACqH,EAAC,EAAEE,GAAK3L,KAAKi+C,SAAS,CAAC,IAAK,KAAMD,GACzC,OAAS5wC,KAAKiB,IAAIm6D,EAAS/8D,EAAG,GAAK2B,KAAKiB,IAAIo6D,EAAS98D,EAAG,GAAMyB,KAAKiB,IAAIjK,EAAQmkE,UAAYnkE,EAAQkqB,OAAQ,GAE7G,SAASk6C,EAAQxqB,GACf,OAAOsqB,GAAUtoE,KAAMwoE,EAAQ,IAAKxqB,GAEtC,SAASyqB,EAAQzqB,GACf,OAAOsqB,GAAUtoE,KAAMyoE,EAAQ,IAAKzqB,GAEtC,eAAeA,GACb,MAAM,EAACvyC,EAAC,EAAEE,GAAK3L,KAAKi+C,SAAS,CAAC,IAAK,KAAMD,GACzC,MAAO,CAACvyC,IAAGE,KAEb,KAAKvH,GACHA,EAAUA,GAAWpE,KAAKoE,SAAW,GACrC,IAAIkqB,EAASlqB,EAAQkqB,QAAU,EAC/BA,EAASlhB,KAAKqC,IAAI6e,EAAQA,GAAUlqB,EAAQskE,aAAe,GAC3D,MAAMv5C,EAAcb,GAAUlqB,EAAQ+qB,aAAe,EACrD,OAAgC,GAAxBb,EAASa,GAEnB,KAAK3E,EAAK+E,GACR,MAAMnrB,EAAUpE,KAAKoE,QACjBpE,KAAK24B,MAAQv0B,EAAQkqB,OAAS,KAAQe,GAAervB,KAAMuvB,EAAMvvB,KAAK8M,KAAK1I,GAAW,KAG1FomB,EAAIwG,YAAc5sB,EAAQylB,YAC1BW,EAAIyG,UAAY7sB,EAAQ+qB,YACxB3E,EAAI+G,UAAYntB,EAAQwlB,gBACxBmE,GAAUvD,EAAKpmB,EAASpE,KAAKyL,EAAGzL,KAAK2L,IAEvC,WACE,MAAMvH,EAAUpE,KAAKoE,SAAW,GAChC,OAAOA,EAAQkqB,OAASlqB,EAAQmkE,WAkBpC,SAASI,GAAaC,EAAK5qB,GACzB,MAAM,EAACvyC,EAAC,EAAEE,EAAC,KAAEoH,EAAI,MAAExN,EAAK,OAAEE,GAAUmjE,EAAI3qB,SAAS,CAAC,IAAK,IAAK,OAAQ,QAAS,UAAWD,GACxF,IAAIppC,EAAMC,EAAO4a,EAAKC,EAAQm5C,EAc9B,OAbID,EAAIrzB,YACNszB,EAAOpjE,EAAS,EAChBmP,EAAOxH,KAAKoC,IAAI/D,EAAGsH,GACnB8B,EAAQzH,KAAKqC,IAAIhE,EAAGsH,GACpB0c,EAAM9jB,EAAIk9D,EACVn5C,EAAS/jB,EAAIk9D,IAEbA,EAAOtjE,EAAQ,EACfqP,EAAOnJ,EAAIo9D,EACXh0D,EAAQpJ,EAAIo9D,EACZp5C,EAAMriB,KAAKoC,IAAI7D,EAAGoH,GAClB2c,EAAStiB,KAAKqC,IAAI9D,EAAGoH,IAEhB,CAAC6B,OAAM6a,MAAK5a,QAAO6a,UAE5B,SAASo5C,GAAYnwC,EAAMn4B,EAAOgP,EAAKC,GACrC,OAAOkpB,EAAO,EAAIpnB,GAAY/Q,EAAOgP,EAAKC,GAE5C,SAASs5D,GAAiBH,EAAKI,EAAMC,GACnC,MAAMzoE,EAAQooE,EAAIxkE,QAAQ+qB,YACpBwJ,EAAOiwC,EAAIlzB,cACXhqC,EAAIynB,GAAO3yB,GACjB,MAAO,CACLiW,EAAGqyD,GAAYnwC,EAAKlJ,IAAK/jB,EAAE+jB,IAAK,EAAGw5C,GACnCtuD,EAAGmuD,GAAYnwC,EAAK9jB,MAAOnJ,EAAEmJ,MAAO,EAAGm0D,GACvCn8D,EAAGi8D,GAAYnwC,EAAKjJ,OAAQhkB,EAAEgkB,OAAQ,EAAGu5C,GACzCpwD,EAAGiwD,GAAYnwC,EAAK/jB,KAAMlJ,EAAEkJ,KAAM,EAAGo0D,IAGzC,SAASE,GAAkBN,EAAKI,EAAMC,GACpC,MAAM,mBAACtzB,GAAsBizB,EAAI3qB,SAAS,CAAC,uBACrCz9C,EAAQooE,EAAIxkE,QAAQ6+D,aACpBv3D,EAAI0nB,GAAc5yB,GAClB2oE,EAAO/7D,KAAKoC,IAAIw5D,EAAMC,GACtBtwC,EAAOiwC,EAAIlzB,cACX0zB,EAAezzB,GAAsBltC,EAASjI,GACpD,MAAO,CACL4xB,QAAS02C,IAAaM,GAAgBzwC,EAAKlJ,KAAOkJ,EAAK/jB,KAAMlJ,EAAE0mB,QAAS,EAAG+2C,GAC3E52C,SAAUu2C,IAAaM,GAAgBzwC,EAAKlJ,KAAOkJ,EAAK9jB,MAAOnJ,EAAE6mB,SAAU,EAAG42C,GAC9E92C,WAAYy2C,IAAaM,GAAgBzwC,EAAKjJ,QAAUiJ,EAAK/jB,KAAMlJ,EAAE2mB,WAAY,EAAG82C,GACpF72C,YAAaw2C,IAAaM,GAAgBzwC,EAAKjJ,QAAUiJ,EAAK9jB,MAAOnJ,EAAE4mB,YAAa,EAAG62C,IAG3F,SAASE,GAAcT,GACrB,MAAMhnC,EAAS+mC,GAAaC,GACtBrjE,EAAQq8B,EAAO/sB,MAAQ+sB,EAAOhtB,KAC9BnP,EAASm8B,EAAOlS,OAASkS,EAAOnS,IAChCgtB,EAASssB,GAAiBH,EAAKrjE,EAAQ,EAAGE,EAAS,GACnD6oB,EAAS46C,GAAkBN,EAAKrjE,EAAQ,EAAGE,EAAS,GAC1D,MAAO,CACL6jE,MAAO,CACL79D,EAAGm2B,EAAOhtB,KACVjJ,EAAGi2B,EAAOnS,IACVrU,EAAG7V,EACHuT,EAAGrT,EACH6oB,UAEFk3C,MAAO,CACL/5D,EAAGm2B,EAAOhtB,KAAO6nC,EAAO5jC,EACxBlN,EAAGi2B,EAAOnS,IAAMgtB,EAAOhmC,EACvB2E,EAAG7V,EAAQk3C,EAAO5jC,EAAI4jC,EAAO9hC,EAC7B7B,EAAGrT,EAASg3C,EAAOhmC,EAAIgmC,EAAO5vC,EAC9ByhB,OAAQ,CACN8D,QAAShlB,KAAKqC,IAAI,EAAG6e,EAAO8D,QAAUhlB,KAAKqC,IAAIgtC,EAAOhmC,EAAGgmC,EAAO5jC,IAChE0Z,SAAUnlB,KAAKqC,IAAI,EAAG6e,EAAOiE,SAAWnlB,KAAKqC,IAAIgtC,EAAOhmC,EAAGgmC,EAAO9hC,IAClE0X,WAAYjlB,KAAKqC,IAAI,EAAG6e,EAAO+D,WAAajlB,KAAKqC,IAAIgtC,EAAO5vC,EAAG4vC,EAAO5jC,IACtEyZ,YAAallB,KAAKqC,IAAI,EAAG6e,EAAOgE,YAAcllB,KAAKqC,IAAIgtC,EAAO5vC,EAAG4vC,EAAO9hC,OAKhF,SAASm0C,GAAQ8Z,EAAKn9D,EAAGE,EAAGqyC,GAC1B,MAAMurB,EAAc,OAAN99D,EACR+9D,EAAc,OAAN79D,EACR89D,EAAWF,GAASC,EACpB5nC,EAASgnC,IAAQa,GAAYd,GAAaC,EAAK5qB,GACrD,OAAOpc,IACH2nC,GAAS93D,GAAWhG,EAAGm2B,EAAOhtB,KAAMgtB,EAAO/sB,UAC3C20D,GAAS/3D,GAAW9F,EAAGi2B,EAAOnS,IAAKmS,EAAOlS,SAEhD,SAASg6C,GAAUp7C,GACjB,OAAOA,EAAO8D,SAAW9D,EAAOiE,UAAYjE,EAAO+D,YAAc/D,EAAOgE,YAE1E,SAASq3C,GAAkBn/C,EAAKyE,GAC9BzE,EAAIyE,KAAKA,EAAKxjB,EAAGwjB,EAAKtjB,EAAGsjB,EAAK7T,EAAG6T,EAAKnW,GAExC,SAAS8wD,GAAY36C,EAAM0+B,EAAQkc,EAAU,IAC3C,MAAMp+D,EAAIwjB,EAAKxjB,IAAMo+D,EAAQp+D,GAAKkiD,EAAS,EACrChiD,EAAIsjB,EAAKtjB,IAAMk+D,EAAQl+D,GAAKgiD,EAAS,EACrCvyC,GAAK6T,EAAKxjB,EAAIwjB,EAAK7T,IAAMyuD,EAAQp+D,EAAIo+D,EAAQzuD,EAAIuyC,EAAS,GAAKliD,EAC/DqN,GAAKmW,EAAKtjB,EAAIsjB,EAAKnW,IAAM+wD,EAAQl+D,EAAIk+D,EAAQ/wD,EAAI60C,EAAS,GAAKhiD,EACrE,MAAO,CACLF,EAAGwjB,EAAKxjB,EAAIA,EACZE,EAAGsjB,EAAKtjB,EAAIA,EACZyP,EAAG6T,EAAK7T,EAAIA,EACZtC,EAAGmW,EAAKnW,EAAIA,EACZwV,OAAQW,EAAKX,QAlHjB,GAAazmB,GAAK,QAClB,GAAaqkB,SAAW,CACtBiD,YAAa,EACbo5C,UAAW,EACX9sB,iBAAkB,EAClBitB,YAAa,EACbt6C,WAAY,SACZE,OAAQ,EACRD,SAAU,GAEZ,GAAa8vB,cAAgB,CAC3Bv0B,gBAAiB,kBACjBC,YAAa,eAyGf,MAAM,WAAmB,GACvB,YAAY+c,GACVyP,QACAr2C,KAAKoE,aAAU/B,EACfrC,KAAKu1C,gBAAalzC,EAClBrC,KAAK+S,UAAO1Q,EACZrC,KAAKuF,WAAQlD,EACbrC,KAAKyF,YAASpD,EACdrC,KAAKk2C,mBAAgB7zC,EACjBukC,GACF7iC,OAAOC,OAAOhE,KAAM4mC,GAGxB,KAAKpc,GACH,MAAM,cAAC0rB,EAAe9xC,SAAS,YAACylB,EAAW,gBAAED,IAAoB5pB,MAC3D,MAACwlE,EAAK,MAAE8D,GAASD,GAAcrpE,MAC/B8pE,EAAcJ,GAAUJ,EAAMh7C,QAAU6D,GAAqBw3C,GACnEn/C,EAAI0C,OACAo8C,EAAMluD,IAAMoqD,EAAMpqD,GAAKkuD,EAAMxwD,IAAM0sD,EAAM1sD,IAC3C0R,EAAIkE,YACJo7C,EAAYt/C,EAAKo/C,GAAYN,EAAOpzB,EAAesvB,IACnDh7C,EAAIoF,OACJk6C,EAAYt/C,EAAKo/C,GAAYpE,GAAQtvB,EAAeozB,IACpD9+C,EAAI+G,UAAY1H,EAChBW,EAAI0E,KAAK,YAEX1E,EAAIkE,YACJo7C,EAAYt/C,EAAKo/C,GAAYpE,EAAOtvB,IACpC1rB,EAAI+G,UAAY3H,EAChBY,EAAI0E,OACJ1E,EAAI8C,UAEN,QAAQk7C,EAAQC,EAAQzqB,GACtB,OAAO8Q,GAAQ9uD,KAAMwoE,EAAQC,EAAQzqB,GAEvC,SAASwqB,EAAQxqB,GACf,OAAO8Q,GAAQ9uD,KAAMwoE,EAAQ,KAAMxqB,GAErC,SAASyqB,EAAQzqB,GACf,OAAO8Q,GAAQ9uD,KAAM,KAAMyoE,EAAQzqB,GAErC,eAAeA,GACb,MAAM,EAACvyC,EAAC,EAAEE,EAAC,KAAEoH,EAAI,WAAEwiC,GAAcv1C,KAAKi+C,SAAS,CAAC,IAAK,IAAK,OAAQ,cAAeD,GACjF,MAAO,CACLvyC,EAAG8pC,GAAc9pC,EAAIsH,GAAQ,EAAItH,EACjCE,EAAG4pC,EAAa5pC,GAAKA,EAAIoH,GAAQ,GAGrC,SAAS0C,GACP,MAAgB,MAATA,EAAezV,KAAKuF,MAAQ,EAAIvF,KAAKyF,OAAS,GAGzD,GAAWoC,GAAK,MAChB,GAAWqkB,SAAW,CACpBwpB,cAAe,QACfvmB,YAAa,EACb8zC,aAAc,EACd/sB,cAAe,OACf9nB,gBAAY/rB,GAEd,GAAW87C,cAAgB,CACzBv0B,gBAAiB,kBACjBC,YAAa,eAotBf,MAAMkgD,GAAa,CAACC,EAAWhe,KAC7B,IAAI,UAACie,EAAYje,EAAQ,SAAEke,EAAWle,GAAYge,EAKlD,OAJIA,EAAUG,gBACZF,EAAY78D,KAAKoC,IAAIy6D,EAAWje,GAChCke,EAAWF,EAAUI,iBAAmBh9D,KAAKoC,IAAI06D,EAAUle,IAEtD,CACLke,WACAD,YACAI,WAAYj9D,KAAKqC,IAAIu8C,EAAUie,KAG7BK,GAAa,CAAC19D,EAAGC,IAAY,OAAND,GAAoB,OAANC,GAAcD,EAAExC,eAAiByC,EAAEzC,cAAgBwC,EAAEjI,QAAUkI,EAAElI,MAC5G,MAAM,WAAe,GACnB,YAAY2jC,GACV+N,QACAr2C,KAAKuqE,QAAS,EACdvqE,KAAKwqE,eAAiB,GACtBxqE,KAAKyqE,aAAe,KACpBzqE,KAAK0qE,cAAe,EACpB1qE,KAAKyC,MAAQ6lC,EAAO7lC,MACpBzC,KAAKoE,QAAUkkC,EAAOlkC,QACtBpE,KAAKwqB,IAAM8d,EAAO9d,IAClBxqB,KAAK2qE,iBAActoE,EACnBrC,KAAK4qE,iBAAcvoE,EACnBrC,KAAK6qE,gBAAaxoE,EAClBrC,KAAK29B,eAAYt7B,EACjBrC,KAAKmxB,cAAW9uB,EAChBrC,KAAKyvB,SAAMptB,EACXrC,KAAK0vB,YAASrtB,EACdrC,KAAK4U,UAAOvS,EACZrC,KAAK6U,WAAQxS,EACbrC,KAAKyF,YAASpD,EACdrC,KAAKuF,WAAQlD,EACbrC,KAAKijD,cAAW5gD,EAChBrC,KAAK4iD,cAAWvgD,EAChBrC,KAAKyoB,YAASpmB,EACdrC,KAAK6nD,cAAWxlD,EAElB,OAAO8uB,EAAUwM,EAAWY,GAC1Bv+B,KAAKmxB,SAAWA,EAChBnxB,KAAK29B,UAAYA,EACjB39B,KAAKijD,SAAW1kB,EAChBv+B,KAAK6kD,gBACL7kD,KAAK8qE,cACL9qE,KAAK4lD,MAEP,gBACM5lD,KAAKq1C,gBACPr1C,KAAKuF,MAAQvF,KAAKmxB,SAClBnxB,KAAK4U,KAAO5U,KAAKijD,SAASruC,KAC1B5U,KAAK6U,MAAQ7U,KAAKuF,QAElBvF,KAAKyF,OAASzF,KAAK29B,UACnB39B,KAAKyvB,IAAMzvB,KAAKijD,SAASxzB,IACzBzvB,KAAK0vB,OAAS1vB,KAAKyF,QAGvB,cACE,MAAMukE,EAAYhqE,KAAKoE,QAAQlB,QAAU,GACzC,IAAIynE,EAAcvhE,EAAS4gE,EAAUe,eAAgB,CAAC/qE,KAAKyC,OAAQzC,OAAS,GACxEgqE,EAAUtyC,SACZizC,EAAcA,EAAYjzC,OAAQ3qB,GAASi9D,EAAUtyC,OAAO3qB,EAAM/M,KAAKyC,MAAMlB,QAE3EyoE,EAAUp7D,OACZ+7D,EAAcA,EAAY/7D,KAAK,CAAChC,EAAGC,IAAMm9D,EAAUp7D,KAAKhC,EAAGC,EAAG7M,KAAKyC,MAAMlB,QAEvEvB,KAAKoE,QAAQuF,SACfghE,EAAYhhE,UAEd3J,KAAK2qE,YAAcA,EAErB,MACE,MAAM,QAACvmE,EAAO,IAAEomB,GAAOxqB,KACvB,IAAKoE,EAAQs5C,QAEX,YADA19C,KAAKuF,MAAQvF,KAAKyF,OAAS,GAG7B,MAAMukE,EAAY5lE,EAAQlB,OACpB8nE,EAAY13C,GAAO02C,EAAU7/C,MAC7B6hC,EAAWgf,EAAUl+D,KACrBo6C,EAAclnD,KAAKirE,uBACnB,SAACf,EAAQ,WAAEG,GAAcN,GAAWC,EAAWhe,GACrD,IAAIzmD,EAAOE,EACX+kB,EAAIL,KAAO6gD,EAAUr+C,OACjB3sB,KAAKq1C,gBACP9vC,EAAQvF,KAAKmxB,SACb1rB,EAASzF,KAAKkrE,SAAShkB,EAAa8E,EAAUke,EAAUG,GAAc,KAEtE5kE,EAASzF,KAAK29B,UACdp4B,EAAQvF,KAAKmrE,SAASjkB,EAAa8E,EAAUke,EAAUG,GAAc,IAEvErqE,KAAKuF,MAAQ6H,KAAKoC,IAAIjK,EAAOnB,EAAQ+sB,UAAYnxB,KAAKmxB,UACtDnxB,KAAKyF,OAAS2H,KAAKoC,IAAI/J,EAAQrB,EAAQu5B,WAAa39B,KAAK29B,WAE3D,SAASupB,EAAa8E,EAAUke,EAAUG,GACxC,MAAM,IAAC7/C,EAAG,SAAE2G,EAAU/sB,SAAUlB,QAAQ,QAAC69C,KAAa/gD,KAChDorE,EAAWprE,KAAKwqE,eAAiB,GACjCK,EAAa7qE,KAAK6qE,WAAa,CAAC,GAChCxgD,EAAaggD,EAAatpB,EAChC,IAAIsqB,EAAcnkB,EAClB18B,EAAIgH,UAAY,OAChBhH,EAAIiH,aAAe,SACnB,IAAI65C,GAAO,EACP77C,GAAOpF,EAYX,OAXArqB,KAAK2qE,YAAY93D,QAAQ,CAACgpC,EAAYjyC,KACpC,MAAM82B,EAAYwpC,EAAYle,EAAW,EAAKxhC,EAAIqC,YAAYgvB,EAAWprB,MAAMlrB,OACrE,IAANqE,GAAWihE,EAAWA,EAAWpmE,OAAS,GAAKi8B,EAAY,EAAIqgB,EAAU5vB,KAC3Ek6C,GAAehhD,EACfwgD,EAAWA,EAAWpmE,QAAUmF,EAAI,EAAI,EAAI,IAAM,EAClD6lB,GAAOpF,EACPihD,KAEFF,EAASxhE,GAAK,CAACgL,KAAM,EAAG6a,MAAK67C,MAAK/lE,MAAOm7B,EAAWj7B,OAAQ4kE,GAC5DQ,EAAWA,EAAWpmE,OAAS,IAAMi8B,EAAYqgB,IAE5CsqB,EAET,SAASnkB,EAAa8E,EAAUke,EAAUG,GACxC,MAAM,IAAC7/C,EAAG,UAAEmT,EAAWv5B,SAAUlB,QAAQ,QAAC69C,KAAa/gD,KACjDorE,EAAWprE,KAAKwqE,eAAiB,GACjCI,EAAc5qE,KAAK4qE,YAAc,GACjCW,EAAc5tC,EAAYupB,EAChC,IAAIskB,EAAazqB,EACb0qB,EAAkB,EAClBC,EAAmB,EACnB92D,EAAO,EACP+2D,EAAM,EAgBV,OAfA3rE,KAAK2qE,YAAY93D,QAAQ,CAACgpC,EAAYjyC,KACpC,MAAM82B,EAAYwpC,EAAYle,EAAW,EAAKxhC,EAAIqC,YAAYgvB,EAAWprB,MAAMlrB,MAC3EqE,EAAI,GAAK8hE,EAAmBrB,EAAa,EAAItpB,EAAUwqB,IACzDC,GAAcC,EAAkB1qB,EAChC6pB,EAAY9mE,KAAK,CAACyB,MAAOkmE,EAAiBhmE,OAAQimE,IAClD92D,GAAQ62D,EAAkB1qB,EAC1B4qB,IACAF,EAAkBC,EAAmB,GAEvCN,EAASxhE,GAAK,CAACgL,OAAM6a,IAAKi8C,EAAkBC,MAAKpmE,MAAOm7B,EAAWj7B,OAAQ4kE,GAC3EoB,EAAkBr+D,KAAKqC,IAAIg8D,EAAiB/qC,GAC5CgrC,GAAoBrB,EAAatpB,IAEnCyqB,GAAcC,EACdb,EAAY9mE,KAAK,CAACyB,MAAOkmE,EAAiBhmE,OAAQimE,IAC3CF,EAET,iBACE,IAAKxrE,KAAKoE,QAAQs5C,QAChB,OAEF,MAAMwJ,EAAclnD,KAAKirE,uBAClBT,eAAgBY,EAAUhnE,SAAS,MAACqQ,EAAOvR,QAAQ,QAAC69C,GAAQ,IAAEjsC,IAAQ9U,KACvE4rE,EAAY/qC,GAAc/rB,EAAK9U,KAAK4U,KAAM5U,KAAKuF,OACrD,GAAIvF,KAAKq1C,eAAgB,CACvB,IAAIi2B,EAAM,EACN12D,EAAOF,GAAeD,EAAOzU,KAAK4U,KAAOmsC,EAAS/gD,KAAK6U,MAAQ7U,KAAK6qE,WAAWS,IACnF,IAAK,MAAMO,KAAUT,EACfE,IAAQO,EAAOP,MACjBA,EAAMO,EAAOP,IACb12D,EAAOF,GAAeD,EAAOzU,KAAK4U,KAAOmsC,EAAS/gD,KAAK6U,MAAQ7U,KAAK6qE,WAAWS,KAEjFO,EAAOp8C,KAAOzvB,KAAKyvB,IAAMy3B,EAAcnG,EACvC8qB,EAAOj3D,KAAOg3D,EAAUE,WAAWF,EAAUngE,EAAEmJ,GAAOi3D,EAAOtmE,OAC7DqP,GAAQi3D,EAAOtmE,MAAQw7C,MAEpB,CACL,IAAI4qB,EAAM,EACNl8C,EAAM/a,GAAeD,EAAOzU,KAAKyvB,IAAMy3B,EAAcnG,EAAS/gD,KAAK0vB,OAAS1vB,KAAK4qE,YAAYe,GAAKlmE,QACtG,IAAK,MAAMomE,KAAUT,EACfS,EAAOF,MAAQA,IACjBA,EAAME,EAAOF,IACbl8C,EAAM/a,GAAeD,EAAOzU,KAAKyvB,IAAMy3B,EAAcnG,EAAS/gD,KAAK0vB,OAAS1vB,KAAK4qE,YAAYe,GAAKlmE,SAEpGomE,EAAOp8C,IAAMA,EACbo8C,EAAOj3D,MAAQ5U,KAAK4U,KAAOmsC,EAC3B8qB,EAAOj3D,KAAOg3D,EAAUE,WAAWF,EAAUngE,EAAEogE,EAAOj3D,MAAOi3D,EAAOtmE,OACpEkqB,GAAOo8C,EAAOpmE,OAASs7C,GAI7B,eACE,MAAiC,QAA1B/gD,KAAKoE,QAAQw+C,UAAgD,WAA1B5iD,KAAKoE,QAAQw+C,SAEzD,OACE,GAAI5iD,KAAKoE,QAAQs5C,QAAS,CACxB,MAAMlzB,EAAMxqB,KAAKwqB,IACjBmF,GAASnF,EAAKxqB,MACdA,KAAK+rE,QACLl8C,GAAWrF,IAGf,QACE,MAAOpmB,QAASssB,EAAI,YAAEk6C,EAAW,WAAEC,EAAU,IAAErgD,GAAOxqB,MAChD,MAACyU,EAAOvR,OAAQ8mE,GAAat5C,EAC7Bs7C,EAAe9/C,GAAS1D,MACxBojD,EAAY/qC,GAAcnQ,EAAK5b,IAAK9U,KAAK4U,KAAM5U,KAAKuF,OACpDylE,EAAY13C,GAAO02C,EAAU7/C,OAC5B3B,MAAOyjD,EAAS,QAAElrB,GAAWipB,EAC9Bhe,EAAWgf,EAAUl+D,KACrBo/D,EAAelgB,EAAW,EAChC,IAAImgB,EACJnsE,KAAKyrD,YACLjhC,EAAIgH,UAAYo6C,EAAUp6C,UAAU,QACpChH,EAAIiH,aAAe,SACnBjH,EAAIyG,UAAY,GAChBzG,EAAIL,KAAO6gD,EAAUr+C,OACrB,MAAM,SAACu9C,EAAQ,UAAED,EAAS,WAAEI,GAAcN,GAAWC,EAAWhe,GAC1DogB,EAAgB,SAAS3gE,EAAGE,EAAGkwC,GACnC,GAAI7sC,MAAMk7D,IAAaA,GAAY,GAAKl7D,MAAMi7D,IAAcA,EAAY,EACtE,OAEFz/C,EAAI0C,OACJ,MAAM+D,EAAYnoB,EAAe+yC,EAAW5qB,UAAW,GAQvD,GAPAzG,EAAI+G,UAAYzoB,EAAe+yC,EAAWtqB,UAAWy6C,GACrDxhD,EAAI47C,QAAUt9D,EAAe+yC,EAAWuqB,QAAS,QACjD57C,EAAI2gC,eAAiBriD,EAAe+yC,EAAWsP,eAAgB,GAC/D3gC,EAAIi7C,SAAW38D,EAAe+yC,EAAW4pB,SAAU,SACnDj7C,EAAIyG,UAAYA,EAChBzG,EAAIwG,YAAcloB,EAAe+yC,EAAW7qB,YAAag7C,GACzDxhD,EAAI0gC,YAAYpiD,EAAe+yC,EAAWwwB,SAAU,KAChDrC,EAAUG,cAAe,CAC3B,MAAMmC,EAAc,CAClBh+C,OAAQ27C,EAAY78D,KAAKm/D,MAAQ,EACjCn+C,WAAYytB,EAAWztB,WACvBC,SAAUwtB,EAAWxtB,SACrBc,YAAa8B,GAETkqB,EAAUywB,EAAUY,MAAM/gE,EAAGy+D,EAAW,GACxC9uB,EAAUzvC,EAAIugE,EACpBl+C,GAAgBxD,EAAK8hD,EAAanxB,EAASC,EAAS4uB,EAAUI,iBAAmBF,OAC5E,CACL,MAAMuC,EAAU9gE,EAAIyB,KAAKqC,KAAKu8C,EAAWie,GAAa,EAAG,GACnDyC,EAAWd,EAAUE,WAAWrgE,EAAGy+D,GACnCjH,EAAe7vC,GAAcyoB,EAAWonB,cAC9Cz4C,EAAIkE,YACA3qB,OAAOqO,OAAO6wD,GAAcpL,KAAKrsD,GAAW,IAANA,GACxC2mB,GAAmB3H,EAAK,CACtB/e,EAAGihE,EACH/gE,EAAG8gE,EACHrxD,EAAG8uD,EACHpxD,EAAGmxD,EACH37C,OAAQ20C,IAGVz4C,EAAIyE,KAAKy9C,EAAUD,EAASvC,EAAUD,GAExCz/C,EAAI0E,OACc,IAAd+B,GACFzG,EAAI4E,SAGR5E,EAAI8C,WAEA8D,EAAW,SAAS3lB,EAAGE,EAAGkwC,GAC9BrrB,GAAWhG,EAAKqxB,EAAWprB,KAAMhlB,EAAGE,EAAK0+D,EAAa,EAAIW,EAAW,CACnEt5C,cAAemqB,EAAWjP,OAC1Bpb,UAAWo6C,EAAUp6C,UAAUqqB,EAAWrqB,cAGxC6jB,EAAer1C,KAAKq1C,eACpB6R,EAAclnD,KAAKirE,sBAEvBkB,EADE92B,EACO,CACP5pC,EAAGiJ,GAAeD,EAAOzU,KAAK4U,KAAOmsC,EAAS/gD,KAAK6U,MAAQg2D,EAAW,IACtEl/D,EAAG3L,KAAKyvB,IAAMsxB,EAAUmG,EACxBp2B,KAAM,GAGC,CACPrlB,EAAGzL,KAAK4U,KAAOmsC,EACfp1C,EAAG+I,GAAeD,EAAOzU,KAAKyvB,IAAMy3B,EAAcnG,EAAS/gD,KAAK0vB,OAASk7C,EAAY,GAAGnlE,QACxFqrB,KAAM,GAGVgQ,GAAsB9gC,KAAKwqB,IAAKkG,EAAKi8C,eACrC,MAAMtiD,EAAaggD,EAAatpB,EAChC/gD,KAAK2qE,YAAY93D,QAAQ,CAACgpC,EAAYjyC,KACpC4gB,EAAIwG,YAAc6qB,EAAWowB,WAAaA,EAC1CzhD,EAAI+G,UAAYsqB,EAAWowB,WAAaA,EACxC,MAAMr/C,EAAYpC,EAAIqC,YAAYgvB,EAAWprB,MAAMlrB,MAC7CisB,EAAYo6C,EAAUp6C,UAAUqqB,EAAWrqB,YAAcqqB,EAAWrqB,UAAYw4C,EAAUx4C,YAC1FjsB,EAAQ2kE,EAAWgC,EAAet/C,EACxC,IAAInhB,EAAI0gE,EAAO1gE,EACXE,EAAIwgE,EAAOxgE,EACfigE,EAAUgB,SAAS5sE,KAAKuF,OACpB8vC,EACEzrC,EAAI,GAAK6B,EAAIlG,EAAQw7C,EAAU/gD,KAAK6U,QACtClJ,EAAIwgE,EAAOxgE,GAAK0e,EAChB8hD,EAAOr7C,OACPrlB,EAAI0gE,EAAO1gE,EAAIiJ,GAAeD,EAAOzU,KAAK4U,KAAOmsC,EAAS/gD,KAAK6U,MAAQg2D,EAAWsB,EAAOr7C,QAElFlnB,EAAI,GAAK+B,EAAI0e,EAAarqB,KAAK0vB,SACxCjkB,EAAI0gE,EAAO1gE,EAAIA,EAAIm/D,EAAYuB,EAAOr7C,MAAMvrB,MAAQw7C,EACpDorB,EAAOr7C,OACPnlB,EAAIwgE,EAAOxgE,EAAI+I,GAAeD,EAAOzU,KAAKyvB,IAAMy3B,EAAcnG,EAAS/gD,KAAK0vB,OAASk7C,EAAYuB,EAAOr7C,MAAMrrB,SAEhH,MAAMonE,EAAQjB,EAAUngE,EAAEA,GAC1B2gE,EAAcS,EAAOlhE,EAAGkwC,GACxBpwC,EAAIkJ,GAAO6c,EAAW/lB,EAAIy+D,EAAWgC,EAAc72B,EAAe5pC,EAAIlG,EAAQvF,KAAK6U,MAAO6b,EAAK5b,KAC/Fsc,EAASw6C,EAAUngE,EAAEA,GAAIE,EAAGkwC,GACxBxG,EACF82B,EAAO1gE,GAAKlG,EAAQw7C,EAEpBorB,EAAOxgE,GAAK0e,IAGhB+W,GAAqBphC,KAAKwqB,IAAKkG,EAAKi8C,eAEtC,YACE,MAAMj8C,EAAO1wB,KAAKoE,QACZ4iD,EAAYt2B,EAAKzvB,MACjB6rE,EAAYx5C,GAAO0zB,EAAU78B,MAC7B4iD,EAAe15C,GAAU2zB,EAAUjG,SACzC,IAAKiG,EAAUtJ,QACb,OAEF,MAAMkuB,EAAY/qC,GAAcnQ,EAAK5b,IAAK9U,KAAK4U,KAAM5U,KAAKuF,OACpDilB,EAAMxqB,KAAKwqB,IACXo4B,EAAWoE,EAAUpE,SACrBspB,EAAeY,EAAUhgE,KAAO,EAChCkgE,EAA6BD,EAAat9C,IAAMy8C,EACtD,IAAIvgE,EACAiJ,EAAO5U,KAAK4U,KACZuc,EAAWnxB,KAAKuF,MACpB,GAAIvF,KAAKq1C,eACPlkB,EAAW/jB,KAAKqC,OAAOzP,KAAK6qE,YAC5Bl/D,EAAI3L,KAAKyvB,IAAMu9C,EACfp4D,EAAOF,GAAegc,EAAKjc,MAAOG,EAAM5U,KAAK6U,MAAQsc,OAChD,CACL,MAAMwM,EAAY39B,KAAK4qE,YAAY3kC,OAAO,CAACC,EAAKp5B,IAASM,KAAKqC,IAAIy2B,EAAKp5B,EAAKrH,QAAS,GACrFkG,EAAIqhE,EAA6Bt4D,GAAegc,EAAKjc,MAAOzU,KAAKyvB,IAAKzvB,KAAK0vB,OAASiO,EAAYjN,EAAKxtB,OAAO69C,QAAU/gD,KAAKirE,uBAE7H,MAAMx/D,EAAIiJ,GAAekuC,EAAUhuC,EAAMA,EAAOuc,GAChD3G,EAAIgH,UAAYo6C,EAAUp6C,UAAUhd,GAAmBouC,IACvDp4B,EAAIiH,aAAe,SACnBjH,EAAIwG,YAAcg2B,EAAUx+B,MAC5BgC,EAAI+G,UAAYy1B,EAAUx+B,MAC1BgC,EAAIL,KAAO2iD,EAAUngD,OACrB6D,GAAWhG,EAAKw8B,EAAUv2B,KAAMhlB,EAAGE,EAAGmhE,GAExC,sBACE,MAAM9lB,EAAYhnD,KAAKoE,QAAQnD,MACzB6rE,EAAYx5C,GAAO0zB,EAAU78B,MAC7B4iD,EAAe15C,GAAU2zB,EAAUjG,SACzC,OAAOiG,EAAUtJ,QAAUovB,EAAUziD,WAAa0iD,EAAatnE,OAAS,EAE1E,iBAAiBgG,EAAGE,GAClB,IAAI/B,EAAGqjE,EAAQC,EACf,GAAIz7D,GAAWhG,EAAGzL,KAAK4U,KAAM5U,KAAK6U,QAC7BpD,GAAW9F,EAAG3L,KAAKyvB,IAAKzvB,KAAK0vB,QAEhC,IADAw9C,EAAKltE,KAAKwqE,eACL5gE,EAAI,EAAGA,EAAIsjE,EAAGzoE,SAAUmF,EAE3B,GADAqjE,EAASC,EAAGtjE,GACR6H,GAAWhG,EAAGwhE,EAAOr4D,KAAMq4D,EAAOr4D,KAAOq4D,EAAO1nE,QAC/CkM,GAAW9F,EAAGshE,EAAOx9C,IAAKw9C,EAAOx9C,IAAMw9C,EAAOxnE,QACjD,OAAOzF,KAAK2qE,YAAY/gE,GAI9B,OAAO,KAET,YAAYsD,GACV,MAAMwjB,EAAO1wB,KAAKoE,QAClB,IAAK+oE,GAAWjgE,EAAE/H,KAAMurB,GACtB,OAEF,MAAM08C,EAAcptE,KAAKqtE,iBAAiBngE,EAAEzB,EAAGyB,EAAEvB,GACjD,GAAe,cAAXuB,EAAE/H,MAAmC,aAAX+H,EAAE/H,KAAqB,CACnD,MAAM4qB,EAAW/vB,KAAKyqE,aAChB6C,EAAWhD,GAAWv6C,EAAUq9C,GAClCr9C,IAAau9C,GACflkE,EAASsnB,EAAK68C,QAAS,CAACrgE,EAAG6iB,EAAU/vB,MAAOA,MAE9CA,KAAKyqE,aAAe2C,EAChBA,IAAgBE,GAClBlkE,EAASsnB,EAAKzF,QAAS,CAAC/d,EAAGkgE,EAAaptE,MAAOA,WAExCotE,GACThkE,EAASsnB,EAAKxF,QAAS,CAAChe,EAAGkgE,EAAaptE,MAAOA,OAIrD,SAASmtE,GAAWhoE,EAAMurB,GACxB,QAAc,cAATvrB,GAAiC,aAATA,IAAyBurB,EAAKzF,UAAWyF,EAAK68C,aAGvE78C,EAAKxF,SAAqB,UAAT/lB,GAA6B,YAATA,GAK3C,IAAIqoE,GAAgB,CAClB3lE,GAAI,SACJ4lE,SAAU,GACV,MAAMhrE,EAAOirE,EAAOtpE,GAClB,MAAMw3C,EAASn5C,EAAMm5C,OAAS,IAAI,GAAO,CAACpxB,IAAK/nB,EAAM+nB,IAAKpmB,UAAS3B,UACnE2tD,GAAQ5nB,UAAU/lC,EAAOm5C,EAAQx3C,GACjCgsD,GAAQqO,OAAOh8D,EAAOm5C,IAExB,KAAKn5C,GACH2tD,GAAQ2P,UAAUt9D,EAAOA,EAAMm5C,eACxBn5C,EAAMm5C,QAEf,aAAan5C,EAAOirE,EAAOtpE,GACzB,MAAMw3C,EAASn5C,EAAMm5C,OACrBwU,GAAQ5nB,UAAU/lC,EAAOm5C,EAAQx3C,GACjCw3C,EAAOx3C,QAAUA,GAEnB,YAAY3B,GACV,MAAMm5C,EAASn5C,EAAMm5C,OACrBA,EAAOkvB,cACPlvB,EAAO+xB,kBAET,WAAWlrE,EAAO6G,GACXA,EAAK24D,QACRx/D,EAAMm5C,OAAOgyB,YAAYtkE,EAAKw8B,QAGlC5Z,SAAU,CACRwxB,SAAS,EACTkF,SAAU,MACVnuC,MAAO,SACPozC,UAAU,EACVl+C,SAAS,EACT8e,OAAQ,IACR,QAAQvb,EAAG2uC,EAAYD,GACrB,MAAMj3C,EAAQk3C,EAAWzxC,aACnByjE,EAAKjyB,EAAOn5C,MACdorE,EAAG9zB,iBAAiBp1C,IACtBkpE,EAAGxlC,KAAK1jC,GACRk3C,EAAWjP,QAAS,IAEpBihC,EAAG3lC,KAAKvjC,GACRk3C,EAAWjP,QAAS,IAGxB3hB,QAAS,KACTsiD,QAAS,KACTrqE,OAAQ,CACNslB,MAAQgC,GAAQA,EAAI/nB,MAAM2B,QAAQokB,MAClC0hD,SAAU,GACVnpB,QAAS,GACT,eAAet+C,GACb,MAAMU,EAAWV,EAAMlB,KAAK4B,UACrBD,QAAQ,cAACinE,EAAa,WAAE/7C,EAAU,UAAEoD,EAAS,MAAEhJ,IAAU/lB,EAAMm5C,OAAOx3C,QAC7E,OAAO3B,EAAMsnC,yBAAyBvmC,IAAKyR,IACzC,MAAMtN,EAAQsN,EAAKs2B,WAAWpP,SAASguC,EAAgB,OAAI9nE,GACrD8sB,EAAckE,GAAU1rB,EAAMwnB,aACpC,MAAO,CACLsB,KAAMttB,EAAS8R,EAAKtQ,OAAOJ,MAC3BgtB,UAAW5pB,EAAMiiB,gBACjBqiD,UAAWzjD,EACXokB,QAAS33B,EAAKmzB,QACdg+B,QAASz+D,EAAMs8B,eACfooC,SAAU1kE,EAAMu8B,WAChBinB,eAAgBxjD,EAAMw8B,iBACtBshC,SAAU99D,EAAMy8B,gBAChBnT,WAAY9B,EAAY5pB,MAAQ4pB,EAAY1pB,QAAU,EACtDurB,YAAarpB,EAAMkiB,YACnBuE,WAAYA,GAAczmB,EAAMymB,WAChCC,SAAU1mB,EAAM0mB,SAChBmD,UAAWA,GAAa7pB,EAAM6pB,UAC9ByxC,aAAc,EACd74D,aAAc6K,EAAKtQ,QAEpB3E,QAGPiB,MAAO,CACLunB,MAAQgC,GAAQA,EAAI/nB,MAAM2B,QAAQokB,MAClCk1B,SAAS,EACTkF,SAAU,SACVnyB,KAAM,KAGV0G,YAAa,CACXhL,YAAc7rB,IAAUA,EAAK8rB,WAAW,MACxClpB,OAAQ,CACNipB,YAAc7rB,IAAU,CAAC,iBAAkB,SAAU,QAAQuD,SAASvD,MAK5E,MAAM,WAAc,GAClB,YAAYgoC,GACV+N,QACAr2C,KAAKyC,MAAQ6lC,EAAO7lC,MACpBzC,KAAKoE,QAAUkkC,EAAOlkC,QACtBpE,KAAKwqB,IAAM8d,EAAO9d,IAClBxqB,KAAK8tE,cAAWzrE,EAChBrC,KAAKyvB,SAAMptB,EACXrC,KAAK0vB,YAASrtB,EACdrC,KAAK4U,UAAOvS,EACZrC,KAAK6U,WAAQxS,EACbrC,KAAKuF,WAAQlD,EACbrC,KAAKyF,YAASpD,EACdrC,KAAK4iD,cAAWvgD,EAChBrC,KAAKyoB,YAASpmB,EACdrC,KAAK6nD,cAAWxlD,EAElB,OAAO8uB,EAAUwM,GACf,MAAMjN,EAAO1wB,KAAKoE,QAGlB,GAFApE,KAAK4U,KAAO,EACZ5U,KAAKyvB,IAAM,GACNiB,EAAKgtB,QAER,YADA19C,KAAKuF,MAAQvF,KAAKyF,OAASzF,KAAK6U,MAAQ7U,KAAK0vB,OAAS,GAGxD1vB,KAAKuF,MAAQvF,KAAK6U,MAAQsc,EAC1BnxB,KAAKyF,OAASzF,KAAK0vB,OAASiO,EAC5B,MAAM2sB,EAAYliD,EAAQsoB,EAAKD,MAAQC,EAAKD,KAAKhsB,OAAS,EAC1DzE,KAAK8tE,SAAWz6C,GAAU3C,EAAKqwB,SAC/B,MAAMgtB,EAAWzjB,EAAYh3B,GAAO5C,EAAKvG,MAAME,WAAarqB,KAAK8tE,SAASroE,OACtEzF,KAAKq1C,eACPr1C,KAAKyF,OAASsoE,EAEd/tE,KAAKuF,MAAQwoE,EAGjB,eACE,MAAMtxC,EAAMz8B,KAAKoE,QAAQw+C,SACzB,MAAe,QAARnmB,GAAyB,WAARA,EAE1B,UAAU8b,GACR,MAAM,IAAC9oB,EAAG,KAAE7a,EAAI,OAAE8a,EAAM,MAAE7a,EAAK,QAAEzQ,GAAWpE,KACtCyU,EAAQrQ,EAAQqQ,MACtB,IACI0c,EAAU2xB,EAAQC,EADlB10B,EAAW,EAkBf,OAhBIruB,KAAKq1C,gBACPyN,EAASpuC,GAAeD,EAAOG,EAAMC,GACrCkuC,EAAStzB,EAAM8oB,EACfpnB,EAAWtc,EAAQD,IAEM,SAArBxQ,EAAQw+C,UACVE,EAASluC,EAAO2jC,EAChBwK,EAASruC,GAAeD,EAAOib,EAAQD,GACvCpB,GAAiB,GAANlhB,IAEX21C,EAASjuC,EAAQ0jC,EACjBwK,EAASruC,GAAeD,EAAOgb,EAAKC,GACpCrB,EAAgB,GAALlhB,GAEbgkB,EAAWzB,EAASD,GAEf,CAACqzB,SAAQC,SAAQ5xB,WAAU9C,YAEpC,OACE,MAAM7D,EAAMxqB,KAAKwqB,IACXkG,EAAO1wB,KAAKoE,QAClB,IAAKssB,EAAKgtB,QACR,OAEF,MAAMswB,EAAW16C,GAAO5C,EAAKvG,MACvBE,EAAa2jD,EAAS3jD,WACtBkuB,EAASluB,EAAa,EAAIrqB,KAAK8tE,SAASr+C,KACxC,OAACqzB,EAAM,OAAEC,EAAM,SAAE5xB,EAAQ,SAAE9C,GAAYruB,KAAKiuE,UAAU11B,GAC5D/nB,GAAWhG,EAAKkG,EAAKD,KAAM,EAAG,EAAGu9C,EAAU,CACzCxlD,MAAOkI,EAAKlI,MACZ2I,WACA9C,WACAmD,UAAWhd,GAAmBkc,EAAKjc,OACnCgd,aAAc,SACdH,YAAa,CAACwxB,EAAQC,MAI5B,SAASmrB,GAAYzrE,EAAOukD,GAC1B,MAAM/lD,EAAQ,IAAI,GAAM,CACtBupB,IAAK/nB,EAAM+nB,IACXpmB,QAAS4iD,EACTvkD,UAEF2tD,GAAQ5nB,UAAU/lC,EAAOxB,EAAO+lD,GAChCoJ,GAAQqO,OAAOh8D,EAAOxB,GACtBwB,EAAM0rE,WAAaltE,EAErB,IAAImtE,GAAe,CACjBvmE,GAAI,QACJ4lE,SAAU,GACV,MAAMhrE,EAAOirE,EAAOtpE,GAClB8pE,GAAYzrE,EAAO2B,IAErB,KAAK3B,GACH,MAAM0rE,EAAa1rE,EAAM0rE,WACzB/d,GAAQ2P,UAAUt9D,EAAO0rE,UAClB1rE,EAAM0rE,YAEf,aAAa1rE,EAAOirE,EAAOtpE,GACzB,MAAMnD,EAAQwB,EAAM0rE,WACpB/d,GAAQ5nB,UAAU/lC,EAAOxB,EAAOmD,GAChCnD,EAAMmD,QAAUA,GAElB8nB,SAAU,CACRzX,MAAO,SACPipC,SAAS,EACTvzB,KAAM,CACJ1B,OAAQ,QAEVo/B,UAAU,EACV9G,QAAS,GACT6B,SAAU,MACVnyB,KAAM,GACNhI,OAAQ,KAEV01B,cAAe,CACb31B,MAAO,SAET2O,YAAa,CACXhL,aAAa,EACbE,YAAY,IAIJ,IAAIgiD,QA2ChB,MAAMC,GAAc,CAClB,QAAQh7D,GACN,IAAKA,EAAM7O,OACT,OAAO,EAET,IAAImF,EAAGC,EACH4B,EAAI,EACJE,EAAI,EACJ0J,EAAQ,EACZ,IAAKzL,EAAI,EAAGC,EAAMyJ,EAAM7O,OAAQmF,EAAIC,IAAOD,EAAG,CAC5C,MAAMwyB,EAAK9oB,EAAM1J,GAAGsyB,QACpB,GAAIE,GAAMA,EAAGmyC,WAAY,CACvB,MAAM9xC,EAAML,EAAGoyC,kBACf/iE,GAAKgxB,EAAIhxB,EACTE,GAAK8wB,EAAI9wB,IACP0J,GAGN,MAAO,CACL5J,EAAGA,EAAI4J,EACP1J,EAAGA,EAAI0J,IAGX,QAAQ/B,EAAOm7D,GACb,IAAKn7D,EAAM7O,OACT,OAAO,EAET,IAGImF,EAAGC,EAAK6kE,EAHRjjE,EAAIgjE,EAAchjE,EAClBE,EAAI8iE,EAAc9iE,EAClBujD,EAAc1pD,OAAOgI,kBAEzB,IAAK5D,EAAI,EAAGC,EAAMyJ,EAAM7O,OAAQmF,EAAIC,IAAOD,EAAG,CAC5C,MAAMwyB,EAAK9oB,EAAM1J,GAAGsyB,QACpB,GAAIE,GAAMA,EAAGmyC,WAAY,CACvB,MAAMv3B,EAAS5a,EAAG+yB,iBACZz2C,EAAIjI,EAAsBg+D,EAAez3B,GAC3Ct+B,EAAIw2C,IACNA,EAAcx2C,EACdg2D,EAAiBtyC,IAIvB,GAAIsyC,EAAgB,CAClB,MAAMC,EAAKD,EAAeF,kBAC1B/iE,EAAIkjE,EAAGljE,EACPE,EAAIgjE,EAAGhjE,EAET,MAAO,CACLF,IACAE,OAIN,SAASijE,GAAa77D,EAAM87D,GAQ1B,OAPIA,IACEzmE,EAAQymE,GACVhpE,MAAMwC,UAAUvE,KAAK0F,MAAMuJ,EAAM87D,GAEjC97D,EAAKjP,KAAK+qE,IAGP97D,EAET,SAAS+7D,GAAcxiE,GACrB,OAAoB,kBAARA,GAAoBA,aAAehH,SAAWgH,EAAIzB,QAAQ,OAAS,EACtEyB,EAAIJ,MAAM,MAEZI,EAET,SAASyiE,GAAkBtsE,EAAOsK,GAChC,MAAM,QAACmvB,EAAO,aAAE9xB,EAAY,MAAEzF,GAASoI,EACjCw+B,EAAa9oC,EAAMmsC,eAAexkC,GAAcmhC,YAChD,MAAChnC,EAAK,MAAE/D,GAAS+qC,EAAWyjC,iBAAiBrqE,GACnD,MAAO,CACLlC,QACA8B,QACAg0B,OAAQgT,EAAWmF,UAAU/rC,GAC7BynC,IAAK3pC,EAAMlB,KAAK4B,SAASiH,GAAc7I,KAAKoD,GAC5Cs3C,eAAgBz7C,EAChBoD,QAAS2nC,EAAWuC,aACpB3B,UAAWxnC,EACXyF,eACA8xB,WAGJ,SAAS+yC,GAAet1B,EAASv1C,GAC/B,MAAMomB,EAAMmvB,EAAQl3C,MAAM+nB,KACpB,KAAC0kD,EAAI,OAAEC,EAAM,MAAEluE,GAAS04C,GACxB,SAACuwB,EAAQ,UAAED,GAAa7lE,EACxBgrE,EAAW97C,GAAOlvB,EAAQgrE,UAC1BtC,EAAYx5C,GAAOlvB,EAAQ0oE,WAC3BuC,EAAa/7C,GAAOlvB,EAAQirE,YAC5BC,EAAiBruE,EAAMwD,OACvB8qE,EAAkBJ,EAAO1qE,OACzB+qE,EAAoBN,EAAKzqE,OACzBs8C,EAAU1tB,GAAUjvB,EAAQ28C,SAClC,IAAIt7C,EAASs7C,EAAQt7C,OACjBF,EAAQ,EACRkqE,EAAqBP,EAAKjpC,OAAO,CAAC5wB,EAAOq6D,IAAar6D,EAAQq6D,EAASC,OAAOlrE,OAASirE,EAAS/+C,MAAMlsB,OAASirE,EAASE,MAAMnrE,OAAQ,GAO1I,GANAgrE,GAAsB91B,EAAQk2B,WAAWprE,OAASk1C,EAAQm2B,UAAUrrE,OAChE6qE,IACF7pE,GAAU6pE,EAAiBxC,EAAUziD,YACnCilD,EAAiB,GAAKlrE,EAAQ2rE,aAC/B3rE,EAAQ4rE,mBAEPP,EAAoB,CACtB,MAAMQ,EAAiB7rE,EAAQ8rE,cAAgB9iE,KAAKqC,IAAIw6D,EAAWmF,EAAS/kD,YAAc+kD,EAAS/kD,WACnG5kB,GAAU+pE,EAAoBS,GAC5BR,EAAqBD,GAAqBJ,EAAS/kD,YACnDolD,EAAqB,GAAKrrE,EAAQ+rE,YAElCZ,IACF9pE,GAAUrB,EAAQgsE,gBACjBb,EAAkBF,EAAWhlD,YAC5BklD,EAAkB,GAAKnrE,EAAQisE,eAEnC,IAAIC,EAAe,EACnB,MAAMC,EAAe,SAASz/C,GAC5BvrB,EAAQ6H,KAAKqC,IAAIlK,EAAOilB,EAAIqC,YAAYiE,GAAMvrB,MAAQ+qE,IAkBxD,OAhBA9lD,EAAI0C,OACJ1C,EAAIL,KAAO2iD,EAAUngD,OACrBljB,EAAKkwC,EAAQ14C,MAAOsvE,GACpB/lD,EAAIL,KAAOilD,EAASziD,OACpBljB,EAAKkwC,EAAQk2B,WAAWx8B,OAAOsG,EAAQm2B,WAAYS,GACnDD,EAAelsE,EAAQ8rE,cAAiBhG,EAAW,EAAI9lE,EAAQmtD,WAAc,EAC7E9nD,EAAKylE,EAAOQ,IACVjmE,EAAKimE,EAASC,OAAQY,GACtB9mE,EAAKimE,EAAS/+C,MAAO4/C,GACrB9mE,EAAKimE,EAASE,MAAOW,KAEvBD,EAAe,EACf9lD,EAAIL,KAAOklD,EAAW1iD,OACtBljB,EAAKkwC,EAAQw1B,OAAQoB,GACrB/lD,EAAI8C,UACJ/nB,GAASw7C,EAAQx7C,MACV,CAACA,QAAOE,UAEjB,SAAS+qE,GAAgB/tE,EAAOqK,GAC9B,MAAM,EAACnB,EAAC,OAAElG,GAAUqH,EACpB,OAAInB,EAAIlG,EAAS,EACR,MACEkG,EAAKlJ,EAAMgD,OAASA,EAAS,EAC/B,SAEF,SAET,SAASgrE,GAAoBC,EAAQjuE,EAAO2B,EAAS0I,GACnD,MAAM,EAACrB,EAAC,MAAElG,GAASuH,EACb6jE,EAAQvsE,EAAQwsE,UAAYxsE,EAAQysE,aAC1C,MAAe,SAAXH,GAAqBjlE,EAAIlG,EAAQorE,EAAQluE,EAAM8C,QAGpC,UAAXmrE,GAAsBjlE,EAAIlG,EAAQorE,EAAQ,QAA9C,GAIF,SAASG,GAAgBruE,EAAO2B,EAAS0I,EAAMikE,GAC7C,MAAM,EAACtlE,EAAC,MAAElG,GAASuH,GACZvH,MAAOyrE,EAAYlgC,WAAW,KAACl8B,EAAI,MAAEC,IAAUpS,EACtD,IAAIiuE,EAAS,SAWb,MAVe,WAAXK,EACFL,EAASjlE,IAAMmJ,EAAOC,GAAS,EAAI,OAAS,QACnCpJ,GAAKlG,EAAQ,EACtBmrE,EAAS,OACAjlE,GAAKulE,EAAazrE,EAAQ,IACnCmrE,EAAS,SAEPD,GAAoBC,EAAQjuE,EAAO2B,EAAS0I,KAC9C4jE,EAAS,UAEJA,EAET,SAASO,GAAmBxuE,EAAO2B,EAAS0I,GAC1C,MAAMikE,EAASjkE,EAAKikE,QAAU3sE,EAAQ2sE,QAAUP,GAAgB/tE,EAAOqK,GACvE,MAAO,CACL4jE,OAAQ5jE,EAAK4jE,QAAUtsE,EAAQssE,QAAUI,GAAgBruE,EAAO2B,EAAS0I,EAAMikE,GAC/EA,UAGJ,SAASG,GAAOpkE,EAAM4jE,GACpB,IAAI,EAACjlE,EAAC,MAAElG,GAASuH,EAMjB,MALe,UAAX4jE,EACFjlE,GAAKlG,EACe,WAAXmrE,IACTjlE,GAAMlG,EAAQ,GAETkG,EAET,SAAS0lE,GAAOrkE,EAAMikE,EAAQK,GAC5B,IAAI,EAACzlE,EAAC,OAAElG,GAAUqH,EAQlB,MAPe,QAAXikE,EACFplE,GAAKylE,EAELzlE,GADoB,WAAXolE,EACJtrE,EAAS2rE,EAER3rE,EAAS,EAEVkG,EAET,SAAS0lE,GAAmBjtE,EAAS0I,EAAMwkE,EAAW7uE,GACpD,MAAM,UAACmuE,EAAS,aAAEC,EAAY,aAAE1iD,GAAgB/pB,GAC1C,OAACssE,EAAM,OAAEK,GAAUO,EACnBF,EAAiBR,EAAYC,GAC7B,QAACz+C,EAAO,SAAEG,EAAQ,WAAEF,EAAU,YAAEC,GAAec,GAAcjF,GACnE,IAAI1iB,EAAIylE,GAAOpkE,EAAM4jE,GACrB,MAAM/kE,EAAIwlE,GAAOrkE,EAAMikE,EAAQK,GAY/B,MAXe,WAAXL,EACa,SAAXL,EACFjlE,GAAK2lE,EACe,UAAXV,IACTjlE,GAAK2lE,GAEa,SAAXV,EACTjlE,GAAK2B,KAAKqC,IAAI2iB,EAASC,GAAcu+C,EACjB,UAAXF,IACTjlE,GAAK2B,KAAKqC,IAAI8iB,EAAUD,GAAes+C,GAElC,CACLnlE,EAAG8F,GAAY9F,EAAG,EAAGhJ,EAAM8C,MAAQuH,EAAKvH,OACxCoG,EAAG4F,GAAY5F,EAAG,EAAGlJ,EAAMgD,OAASqH,EAAKrH,SAG7C,SAAS8rE,GAAY53B,EAASllC,EAAOrQ,GACnC,MAAM28C,EAAU1tB,GAAUjvB,EAAQ28C,SAClC,MAAiB,WAAVtsC,EACHklC,EAAQluC,EAAIkuC,EAAQp0C,MAAQ,EAClB,UAAVkP,EACEklC,EAAQluC,EAAIkuC,EAAQp0C,MAAQw7C,EAAQlsC,MACpC8kC,EAAQluC,EAAIs1C,EAAQnsC,KAE5B,SAAS48D,GAAwBpoE,GAC/B,OAAOwlE,GAAa,GAAIE,GAAc1lE,IAExC,SAASqoE,GAAqB55C,EAAQ8hB,EAAS+3B,GAC7C,OAAOt9C,GAAcyD,EAAQ,CAC3B8hB,UACA+3B,eACAvsE,KAAM,YAGV,SAASwsE,GAAkBhtC,EAAWviC,GACpC,MAAM8yB,EAAW9yB,GAAWA,EAAQwB,SAAWxB,EAAQwB,QAAQ+1C,SAAWv3C,EAAQwB,QAAQ+1C,QAAQhV,UAClG,OAAOzP,EAAWyP,EAAUzP,SAASA,GAAYyP,EAEnD,MAAM,WAAgB,GACpB,YAAY2D,GACV+N,QACAr2C,KAAK4xE,QAAU,EACf5xE,KAAKulC,QAAU,GACfvlC,KAAK6xE,oBAAiBxvE,EACtBrC,KAAK8xE,WAAQzvE,EACbrC,KAAK+xE,uBAAoB1vE,EACzBrC,KAAKgyE,cAAgB,GACrBhyE,KAAKipC,iBAAc5mC,EACnBrC,KAAKytC,cAAWprC,EAChBrC,KAAKyC,MAAQ6lC,EAAO7lC,OAAS6lC,EAAOxiC,OACpC9F,KAAK8F,OAAS9F,KAAKyC,MACnBzC,KAAKoE,QAAUkkC,EAAOlkC,QACtBpE,KAAKiyE,gBAAa5vE,EAClBrC,KAAKiB,WAAQoB,EACbrC,KAAK6vE,gBAAaxtE,EAClBrC,KAAKkvE,UAAO7sE,EACZrC,KAAK8vE,eAAYztE,EACjBrC,KAAKmvE,YAAS9sE,EACdrC,KAAK0wE,YAASruE,EACdrC,KAAK+wE,YAAS1uE,EACdrC,KAAKyL,OAAIpJ,EACTrC,KAAK2L,OAAItJ,EACTrC,KAAKyF,YAASpD,EACdrC,KAAKuF,WAAQlD,EACbrC,KAAKkyE,YAAS7vE,EACdrC,KAAKmyE,YAAS9vE,EACdrC,KAAKoyE,iBAAc/vE,EACnBrC,KAAKqyE,sBAAmBhwE,EACxBrC,KAAKsyE,qBAAkBjwE,EAEzB,WAAW+B,GACTpE,KAAKoE,QAAUA,EACfpE,KAAK+xE,uBAAoB1vE,EACzBrC,KAAKytC,cAAWprC,EAElB,qBACE,MAAMmqC,EAASxsC,KAAK+xE,kBACpB,GAAIvlC,EACF,OAAOA,EAET,MAAM/pC,EAAQzC,KAAKyC,MACb2B,EAAUpE,KAAKoE,QAAQiyB,WAAWr2B,KAAKmH,cACvCupB,EAAOtsB,EAAQk7C,SAAW78C,EAAM2B,QAAQulB,WAAavlB,EAAQ+jC,WAC7DA,EAAa,IAAI,GAAWnoC,KAAKyC,MAAOiuB,GAI9C,OAHIA,EAAKoE,aACP90B,KAAK+xE,kBAAoBhuE,OAAOytC,OAAOrJ,IAElCA,EAET,aACE,OAAOnoC,KAAKytC,WACZztC,KAAKytC,SAAWgkC,GAAqBzxE,KAAKyC,MAAM0E,aAAcnH,KAAMA,KAAKgyE,gBAE3E,SAAS5vE,EAASgC,GAChB,MAAM,UAACugC,GAAavgC,EACdmuE,EAAc5tC,EAAU4tC,YAAY/oE,MAAMxJ,KAAM,CAACoC,IACjDnB,EAAQ0jC,EAAU1jC,MAAMuI,MAAMxJ,KAAM,CAACoC,IACrCowE,EAAa7tC,EAAU6tC,WAAWhpE,MAAMxJ,KAAM,CAACoC,IACrD,IAAIuuB,EAAQ,GAIZ,OAHAA,EAAQi+C,GAAaj+C,EAAOm+C,GAAcyD,IAC1C5hD,EAAQi+C,GAAaj+C,EAAOm+C,GAAc7tE,IAC1C0vB,EAAQi+C,GAAaj+C,EAAOm+C,GAAc0D,IACnC7hD,EAET,cAAc+gD,EAActtE,GAC1B,OAAOotE,GAAwBptE,EAAQugC,UAAUkrC,WAAWrmE,MAAMxJ,KAAM,CAAC0xE,KAE3E,QAAQA,EAActtE,GACpB,MAAM,UAACugC,GAAavgC,EACdquE,EAAY,GAalB,OAZAhpE,EAAKioE,EAAetvE,IAClB,MAAMstE,EAAW,CACfC,OAAQ,GACRh/C,MAAO,GACPi/C,MAAO,IAEH8C,EAASf,GAAkBhtC,EAAWviC,GAC5CwsE,GAAac,EAASC,OAAQb,GAAc4D,EAAOC,YAAYpqE,KAAKvI,KAAMoC,KAC1EwsE,GAAac,EAAS/+C,MAAO+hD,EAAOnuE,MAAMgE,KAAKvI,KAAMoC,IACrDwsE,GAAac,EAASE,MAAOd,GAAc4D,EAAOE,WAAWrqE,KAAKvI,KAAMoC,KACxEqwE,EAAU3uE,KAAK4rE,KAEV+C,EAET,aAAaf,EAActtE,GACzB,OAAOotE,GAAwBptE,EAAQugC,UAAUmrC,UAAUtmE,MAAMxJ,KAAM,CAAC0xE,KAE1E,UAAUA,EAActtE,GACtB,MAAM,UAACugC,GAAavgC,EACdyuE,EAAeluC,EAAUkuC,aAAarpE,MAAMxJ,KAAM,CAAC0xE,IACnDvC,EAASxqC,EAAUwqC,OAAO3lE,MAAMxJ,KAAM,CAAC0xE,IACvCoB,EAAcnuC,EAAUmuC,YAAYtpE,MAAMxJ,KAAM,CAAC0xE,IACvD,IAAI/gD,EAAQ,GAIZ,OAHAA,EAAQi+C,GAAaj+C,EAAOm+C,GAAc+D,IAC1CliD,EAAQi+C,GAAaj+C,EAAOm+C,GAAcK,IAC1Cx+C,EAAQi+C,GAAaj+C,EAAOm+C,GAAcgE,IACnCniD,EAET,aAAavsB,GACX,MAAM4jC,EAAShoC,KAAKulC,QACdhkC,EAAOvB,KAAKyC,MAAMlB,KAClB6wE,EAAc,GACdC,EAAmB,GACnBC,EAAkB,GACxB,IACI1oE,EAAGC,EADH6nE,EAAe,GAEnB,IAAK9nE,EAAI,EAAGC,EAAMm+B,EAAOvjC,OAAQmF,EAAIC,IAAOD,EAC1C8nE,EAAa5tE,KAAKirE,GAAkB/uE,KAAKyC,MAAOulC,EAAOp+B,KAkBzD,OAhBIxF,EAAQszB,SACVg6C,EAAeA,EAAah6C,OAAO,CAACwE,EAASv3B,EAAO2K,IAAUlL,EAAQszB,OAAOwE,EAASv3B,EAAO2K,EAAO/N,KAElG6C,EAAQ2uE,WACVrB,EAAeA,EAAa9iE,KAAK,CAAChC,EAAGC,IAAMzI,EAAQ2uE,SAASnmE,EAAGC,EAAGtL,KAEpEkI,EAAKioE,EAAetvE,IAClB,MAAMswE,EAASf,GAAkBvtE,EAAQugC,UAAWviC,GACpDgwE,EAAYtuE,KAAK4uE,EAAOM,WAAWzqE,KAAKvI,KAAMoC,IAC9CiwE,EAAiBvuE,KAAK4uE,EAAOO,gBAAgB1qE,KAAKvI,KAAMoC,IACxDkwE,EAAgBxuE,KAAK4uE,EAAOQ,eAAe3qE,KAAKvI,KAAMoC,MAExDpC,KAAKoyE,YAAcA,EACnBpyE,KAAKqyE,iBAAmBA,EACxBryE,KAAKsyE,gBAAkBA,EACvBtyE,KAAKiyE,WAAaP,EACXA,EAET,OAAOn7D,EAAS0rD,GACd,MAAM79D,EAAUpE,KAAKoE,QAAQiyB,WAAWr2B,KAAKmH,cACvC6gC,EAAShoC,KAAKulC,QACpB,IAAIwC,EACA2pC,EAAe,GACnB,GAAK1pC,EAAOvjC,OAML,CACL,MAAMm+C,EAAW0rB,GAAYlqE,EAAQw+C,UAAUr6C,KAAKvI,KAAMgoC,EAAQhoC,KAAK6xE,gBACvEH,EAAe1xE,KAAKmzE,aAAa/uE,GACjCpE,KAAKiB,MAAQjB,KAAKozE,SAAS1B,EAActtE,GACzCpE,KAAK6vE,WAAa7vE,KAAKqzE,cAAc3B,EAActtE,GACnDpE,KAAKkvE,KAAOlvE,KAAKszE,QAAQ5B,EAActtE,GACvCpE,KAAK8vE,UAAY9vE,KAAKuzE,aAAa7B,EAActtE,GACjDpE,KAAKmvE,OAASnvE,KAAKwzE,UAAU9B,EAActtE,GAC3C,MAAM0I,EAAO9M,KAAK8xE,MAAQ7C,GAAejvE,KAAMoE,GACzCqvE,EAAkB1vE,OAAOC,OAAO,GAAI4+C,EAAU91C,GAC9CwkE,EAAYL,GAAmBjxE,KAAKyC,MAAO2B,EAASqvE,GACpDC,EAAkBrC,GAAmBjtE,EAASqvE,EAAiBnC,EAAWtxE,KAAKyC,OACrFzC,KAAK0wE,OAASY,EAAUZ,OACxB1wE,KAAK+wE,OAASO,EAAUP,OACxBhpC,EAAa,CACX6pC,QAAS,EACTnmE,EAAGioE,EAAgBjoE,EACnBE,EAAG+nE,EAAgB/nE,EACnBpG,MAAOuH,EAAKvH,MACZE,OAAQqH,EAAKrH,OACbysE,OAAQtvB,EAASn3C,EACjB0mE,OAAQvvB,EAASj3C,QA1BE,IAAjB3L,KAAK4xE,UACP7pC,EAAa,CACX6pC,QAAS,IA2Bf5xE,KAAKgyE,cAAgBN,EACrB1xE,KAAKytC,cAAWprC,EACZ0lC,GACF/nC,KAAKkyC,qBAAqBxvC,OAAO1C,KAAM+nC,GAErCxxB,GAAWnS,EAAQuvE,UACrBvvE,EAAQuvE,SAASprE,KAAKvI,KAAM,CAACyC,MAAOzC,KAAKyC,MAAOk3C,QAAS35C,KAAMiiE,WAGnE,UAAU2R,EAAcppD,EAAK1d,EAAM1I,GACjC,MAAMyvE,EAAgB7zE,KAAK8zE,iBAAiBF,EAAc9mE,EAAM1I,GAChEomB,EAAIuE,OAAO8kD,EAAcnqB,GAAImqB,EAAclqB,IAC3Cn/B,EAAIuE,OAAO8kD,EAAcjqB,GAAIiqB,EAAchqB,IAC3Cr/B,EAAIuE,OAAO8kD,EAAcE,GAAIF,EAAcG,IAE7C,iBAAiBJ,EAAc9mE,EAAM1I,GACnC,MAAM,OAACssE,EAAM,OAAEK,GAAU/wE,MACnB,UAAC4wE,EAAS,aAAEziD,GAAgB/pB,GAC5B,QAACguB,EAAO,SAAEG,EAAQ,WAAEF,EAAU,YAAEC,GAAec,GAAcjF,IAC5D1iB,EAAGwoE,EAAKtoE,EAAGuoE,GAAON,GACnB,MAACruE,EAAK,OAAEE,GAAUqH,EACxB,IAAI48C,EAAIE,EAAImqB,EAAIpqB,EAAIE,EAAImqB,EAoCxB,MAnCe,WAAXjD,GACFlnB,EAAKqqB,EAAOzuE,EAAS,EACN,SAAXirE,GACFhnB,EAAKuqB,EACLrqB,EAAKF,EAAKknB,EACVjnB,EAAKE,EAAK+mB,EACVoD,EAAKnqB,EAAK+mB,IAEVlnB,EAAKuqB,EAAM1uE,EACXqkD,EAAKF,EAAKknB,EACVjnB,EAAKE,EAAK+mB,EACVoD,EAAKnqB,EAAK+mB,GAEZmD,EAAKrqB,IAGHE,EADa,SAAX8mB,EACGuD,EAAM7mE,KAAKqC,IAAI2iB,EAASC,GAAc,EACvB,UAAXq+C,EACJuD,EAAM1uE,EAAQ6H,KAAKqC,IAAI8iB,EAAUD,GAAes+C,EAEhD5wE,KAAKkyE,OAEG,QAAXnB,GACFpnB,EAAKuqB,EACLrqB,EAAKF,EAAKinB,EACVlnB,EAAKE,EAAKgnB,EACVmD,EAAKnqB,EAAKgnB,IAEVjnB,EAAKuqB,EAAMzuE,EACXokD,EAAKF,EAAKinB,EACVlnB,EAAKE,EAAKgnB,EACVmD,EAAKnqB,EAAKgnB,GAEZoD,EAAKrqB,GAEA,CAACD,KAAIE,KAAImqB,KAAIpqB,KAAIE,KAAImqB,MAE9B,UAAUr5C,EAAInQ,EAAKpmB,GACjB,MAAMnD,EAAQjB,KAAKiB,MACbwD,EAASxD,EAAMwD,OACrB,IAAIqoE,EAAWiD,EAAcnmE,EAC7B,GAAInF,EAAQ,CACV,MAAMmnE,EAAY/qC,GAAcz8B,EAAQ0Q,IAAK9U,KAAKyL,EAAGzL,KAAKuF,OAQ1D,IAPAo1B,EAAGlvB,EAAI8lE,GAAYvxE,KAAMoE,EAAQu+C,WAAYv+C,GAC7ComB,EAAIgH,UAAYo6C,EAAUp6C,UAAUptB,EAAQu+C,YAC5Cn4B,EAAIiH,aAAe,SACnBq7C,EAAYx5C,GAAOlvB,EAAQ0oE,WAC3BiD,EAAe3rE,EAAQ2rE,aACvBvlD,EAAI+G,UAAYntB,EAAQ+vE,WACxB3pD,EAAIL,KAAO2iD,EAAUngD,OAChB/iB,EAAI,EAAGA,EAAInF,IAAUmF,EACxB4gB,EAAI4G,SAASnwB,EAAM2I,GAAIgiE,EAAUngE,EAAEkvB,EAAGlvB,GAAIkvB,EAAGhvB,EAAImhE,EAAUziD,WAAa,GACxEsQ,EAAGhvB,GAAKmhE,EAAUziD,WAAa0lD,EAC3BnmE,EAAI,IAAMnF,IACZk2B,EAAGhvB,GAAKvH,EAAQ4rE,kBAAoBD,IAK5C,cAAcvlD,EAAKmQ,EAAI/wB,EAAGgiE,EAAWxnE,GACnC,MAAMguE,EAAcpyE,KAAKoyE,YAAYxoE,GAC/BqpE,EAAkBjzE,KAAKqyE,iBAAiBzoE,IACxC,UAACqgE,EAAS,SAAEC,EAAQ,WAAE3Y,GAAcntD,EACpCgrE,EAAW97C,GAAOlvB,EAAQgrE,UAC1BgF,EAAS7C,GAAYvxE,KAAM,OAAQoE,GACnCiwE,EAAYzI,EAAUngE,EAAE2oE,GACxBE,EAAUrK,EAAYmF,EAAS/kD,YAAc+kD,EAAS/kD,WAAa4/C,GAAa,EAAI,EACpFsK,EAAS55C,EAAGhvB,EAAI2oE,EACtB,GAAIlwE,EAAQ+lE,cAAe,CACzB,MAAMmC,EAAc,CAClBh+C,OAAQlhB,KAAKoC,IAAI06D,EAAUD,GAAa,EACxC77C,WAAY6kD,EAAgB7kD,WAC5BC,SAAU4kD,EAAgB5kD,SAC1Bc,YAAa,GAETgsB,EAAUywB,EAAUE,WAAWuI,EAAWnK,GAAYA,EAAW,EACjE9uB,EAAUm5B,EAAStK,EAAY,EACrCz/C,EAAIwG,YAAc5sB,EAAQowE,mBAC1BhqD,EAAI+G,UAAYntB,EAAQowE,mBACxBzmD,GAAUvD,EAAK8hD,EAAanxB,EAASC,GACrC5wB,EAAIwG,YAAcohD,EAAYvoD,YAC9BW,EAAI+G,UAAY6gD,EAAYxoD,gBAC5BmE,GAAUvD,EAAK8hD,EAAanxB,EAASC,OAChC,CACL5wB,EAAIyG,UAAYxoB,EAAS2pE,EAAYjjD,aAAe/hB,KAAKqC,OAAO1L,OAAOqO,OAAOggE,EAAYjjD,cAAiBijD,EAAYjjD,aAAe,EACtI3E,EAAIwG,YAAcohD,EAAYvoD,YAC9BW,EAAI0gC,YAAYknB,EAAYluC,YAAc,IAC1C1Z,EAAI2gC,eAAiBinB,EAAYjuC,kBAAoB,EACrD,MAAMswC,EAAS7I,EAAUE,WAAWuI,EAAWnK,EAAW3Y,GACpDmjB,EAAS9I,EAAUE,WAAWF,EAAUY,MAAM6H,EAAW,GAAInK,EAAW3Y,EAAa,GACrF0R,EAAe7vC,GAAcg/C,EAAYnP,cAC3Cl/D,OAAOqO,OAAO6wD,GAAcpL,KAAKrsD,GAAW,IAANA,IACxCgf,EAAIkE,YACJlE,EAAI+G,UAAYntB,EAAQowE,mBACxBriD,GAAmB3H,EAAK,CACtB/e,EAAGgpE,EACH9oE,EAAG4oE,EACHn5D,EAAG8uD,EACHpxD,EAAGmxD,EACH37C,OAAQ20C,IAEVz4C,EAAI0E,OACJ1E,EAAI4E,SACJ5E,EAAI+G,UAAY6gD,EAAYxoD,gBAC5BY,EAAIkE,YACJyD,GAAmB3H,EAAK,CACtB/e,EAAGipE,EACH/oE,EAAG4oE,EAAS,EACZn5D,EAAG8uD,EAAW,EACdpxD,EAAGmxD,EAAY,EACf37C,OAAQ20C,IAEVz4C,EAAI0E,SAEJ1E,EAAI+G,UAAYntB,EAAQowE,mBACxBhqD,EAAIsgC,SAAS2pB,EAAQF,EAAQrK,EAAUD,GACvCz/C,EAAImqD,WAAWF,EAAQF,EAAQrK,EAAUD,GACzCz/C,EAAI+G,UAAY6gD,EAAYxoD,gBAC5BY,EAAIsgC,SAAS4pB,EAAQH,EAAS,EAAGrK,EAAW,EAAGD,EAAY,IAG/Dz/C,EAAI+G,UAAYvxB,KAAKsyE,gBAAgB1oE,GAEvC,SAAS+wB,EAAInQ,EAAKpmB,GAChB,MAAM,KAAC8qE,GAAQlvE,MACT,YAACmwE,EAAW,UAAEyE,EAAS,cAAE1E,EAAa,UAAEjG,EAAS,SAAEC,EAAQ,WAAE3Y,GAAcntD,EAC3EgrE,EAAW97C,GAAOlvB,EAAQgrE,UAChC,IAAIa,EAAiBb,EAAS/kD,WAC1BwqD,EAAe,EACnB,MAAMjJ,EAAY/qC,GAAcz8B,EAAQ0Q,IAAK9U,KAAKyL,EAAGzL,KAAKuF,OACpDuvE,EAAiB,SAAShkD,GAC9BtG,EAAI4G,SAASN,EAAM86C,EAAUngE,EAAEkvB,EAAGlvB,EAAIopE,GAAel6C,EAAGhvB,EAAIskE,EAAiB,GAC7Et1C,EAAGhvB,GAAKskE,EAAiBE,GAErB4E,EAA0BnJ,EAAUp6C,UAAUojD,GACpD,IAAIlF,EAAUsF,EAAWrkD,EAAO/mB,EAAGod,EAAG/c,EAAMkjB,EAU5C,IATA3C,EAAIgH,UAAYojD,EAChBpqD,EAAIiH,aAAe,SACnBjH,EAAIL,KAAOilD,EAASziD,OACpBgO,EAAGlvB,EAAI8lE,GAAYvxE,KAAM+0E,EAAyB3wE,GAClDomB,EAAI+G,UAAYntB,EAAQ6wE,UACxBxrE,EAAKzJ,KAAK6vE,WAAYiF,GACtBD,EAAe3E,GAA6C,UAA5B6E,EACd,WAAdH,EAA0B1K,EAAW,EAAI3Y,EAAe2Y,EAAW,EAAI3Y,EACvE,EACC3nD,EAAI,EAAGK,EAAOilE,EAAKzqE,OAAQmF,EAAIK,IAAQL,EAAG,CAU7C,IATA8lE,EAAWR,EAAKtlE,GAChBorE,EAAYh1E,KAAKsyE,gBAAgB1oE,GACjC4gB,EAAI+G,UAAYyjD,EAChBvrE,EAAKimE,EAASC,OAAQmF,GACtBnkD,EAAQ++C,EAAS/+C,MACbu/C,GAAiBv/C,EAAMlsB,SACzBzE,KAAKk1E,cAAc1qD,EAAKmQ,EAAI/wB,EAAGgiE,EAAWxnE,GAC1C6rE,EAAiB7iE,KAAKqC,IAAI2/D,EAAS/kD,WAAY4/C,IAE5CjjD,EAAI,EAAGmG,EAAOwD,EAAMlsB,OAAQuiB,EAAImG,IAAQnG,EAC3C8tD,EAAenkD,EAAM3J,IACrBipD,EAAiBb,EAAS/kD,WAE5B5gB,EAAKimE,EAASE,MAAOkF,GAEvBD,EAAe,EACf5E,EAAiBb,EAAS/kD,WAC1B5gB,EAAKzJ,KAAK8vE,UAAWgF,GACrBn6C,EAAGhvB,GAAKwkE,EAEV,WAAWx1C,EAAInQ,EAAKpmB,GAClB,MAAM+qE,EAASnvE,KAAKmvE,OACd1qE,EAAS0qE,EAAO1qE,OACtB,IAAI4qE,EAAYzlE,EAChB,GAAInF,EAAQ,CACV,MAAMmnE,EAAY/qC,GAAcz8B,EAAQ0Q,IAAK9U,KAAKyL,EAAGzL,KAAKuF,OAQ1D,IAPAo1B,EAAGlvB,EAAI8lE,GAAYvxE,KAAMoE,EAAQ+wE,YAAa/wE,GAC9Cu2B,EAAGhvB,GAAKvH,EAAQgsE,gBAChB5lD,EAAIgH,UAAYo6C,EAAUp6C,UAAUptB,EAAQ+wE,aAC5C3qD,EAAIiH,aAAe,SACnB49C,EAAa/7C,GAAOlvB,EAAQirE,YAC5B7kD,EAAI+G,UAAYntB,EAAQgxE,YACxB5qD,EAAIL,KAAOklD,EAAW1iD,OACjB/iB,EAAI,EAAGA,EAAInF,IAAUmF,EACxB4gB,EAAI4G,SAAS+9C,EAAOvlE,GAAIgiE,EAAUngE,EAAEkvB,EAAGlvB,GAAIkvB,EAAGhvB,EAAI0jE,EAAWhlD,WAAa,GAC1EsQ,EAAGhvB,GAAK0jE,EAAWhlD,WAAajmB,EAAQisE,eAI9C,eAAe11C,EAAInQ,EAAK6qD,EAAajxE,GACnC,MAAM,OAACssE,EAAM,OAAEK,GAAU/wE,MACnB,EAACyL,EAAC,EAAEE,GAAKgvB,GACT,MAACp1B,EAAK,OAAEE,GAAU4vE,GAClB,QAACjjD,EAAO,SAAEG,EAAQ,WAAEF,EAAU,YAAEC,GAAec,GAAchvB,EAAQ+pB,cAC3E3D,EAAI+G,UAAYntB,EAAQwlB,gBACxBY,EAAIwG,YAAc5sB,EAAQylB,YAC1BW,EAAIyG,UAAY7sB,EAAQ+qB,YACxB3E,EAAIkE,YACJlE,EAAIsE,OAAOrjB,EAAI2mB,EAASzmB,GACT,QAAXolE,GACF/wE,KAAKs1E,UAAU36C,EAAInQ,EAAK6qD,EAAajxE,GAEvComB,EAAIuE,OAAOtjB,EAAIlG,EAAQgtB,EAAU5mB,GACjC6e,EAAI+qD,iBAAiB9pE,EAAIlG,EAAOoG,EAAGF,EAAIlG,EAAOoG,EAAI4mB,GACnC,WAAXw+C,GAAkC,UAAXL,GACzB1wE,KAAKs1E,UAAU36C,EAAInQ,EAAK6qD,EAAajxE,GAEvComB,EAAIuE,OAAOtjB,EAAIlG,EAAOoG,EAAIlG,EAAS6sB,GACnC9H,EAAI+qD,iBAAiB9pE,EAAIlG,EAAOoG,EAAIlG,EAAQgG,EAAIlG,EAAQ+sB,EAAa3mB,EAAIlG,GAC1D,WAAXsrE,GACF/wE,KAAKs1E,UAAU36C,EAAInQ,EAAK6qD,EAAajxE,GAEvComB,EAAIuE,OAAOtjB,EAAI4mB,EAAY1mB,EAAIlG,GAC/B+kB,EAAI+qD,iBAAiB9pE,EAAGE,EAAIlG,EAAQgG,EAAGE,EAAIlG,EAAS4sB,GACrC,WAAX0+C,GAAkC,SAAXL,GACzB1wE,KAAKs1E,UAAU36C,EAAInQ,EAAK6qD,EAAajxE,GAEvComB,EAAIuE,OAAOtjB,EAAGE,EAAIymB,GAClB5H,EAAI+qD,iBAAiB9pE,EAAGE,EAAGF,EAAI2mB,EAASzmB,GACxC6e,EAAIqE,YACJrE,EAAI0E,OACA9qB,EAAQ+qB,YAAc,GACxB3E,EAAI4E,SAGR,uBAAuBhrB,GACrB,MAAM3B,EAAQzC,KAAKyC,MACbgiC,EAAQzkC,KAAKipC,YACbusC,EAAQ/wC,GAASA,EAAMh5B,EACvBgqE,EAAQhxC,GAASA,EAAM94B,EAC7B,GAAI6pE,GAASC,EAAO,CAClB,MAAM7yB,EAAW0rB,GAAYlqE,EAAQw+C,UAAUr6C,KAAKvI,KAAMA,KAAKulC,QAASvlC,KAAK6xE,gBAC7E,IAAKjvB,EACH,OAEF,MAAM91C,EAAO9M,KAAK8xE,MAAQ7C,GAAejvE,KAAMoE,GACzCqvE,EAAkB1vE,OAAOC,OAAO,GAAI4+C,EAAU5iD,KAAK8xE,OACnDR,EAAYL,GAAmBxuE,EAAO2B,EAASqvE,GAC/CnkD,EAAQ+hD,GAAmBjtE,EAASqvE,EAAiBnC,EAAW7uE,GAClE+yE,EAAMnuC,MAAQ/X,EAAM7jB,GAAKgqE,EAAMpuC,MAAQ/X,EAAM3jB,IAC/C3L,KAAK0wE,OAASY,EAAUZ,OACxB1wE,KAAK+wE,OAASO,EAAUP,OACxB/wE,KAAKuF,MAAQuH,EAAKvH,MAClBvF,KAAKyF,OAASqH,EAAKrH,OACnBzF,KAAKkyE,OAAStvB,EAASn3C,EACvBzL,KAAKmyE,OAASvvB,EAASj3C,EACvB3L,KAAKkyC,qBAAqBxvC,OAAO1C,KAAMsvB,KAI7C,cACE,QAAStvB,KAAK4xE,QAEhB,KAAKpnD,GACH,MAAMpmB,EAAUpE,KAAKoE,QAAQiyB,WAAWr2B,KAAKmH,cAC7C,IAAIyqE,EAAU5xE,KAAK4xE,QACnB,IAAKA,EACH,OAEF5xE,KAAK01E,uBAAuBtxE,GAC5B,MAAMixE,EAAc,CAClB9vE,MAAOvF,KAAKuF,MACZE,OAAQzF,KAAKyF,QAETk1B,EAAK,CACTlvB,EAAGzL,KAAKyL,EACRE,EAAG3L,KAAK2L,GAEVimE,EAAUxkE,KAAK8B,IAAI0iE,GAAW,KAAO,EAAIA,EACzC,MAAM7wB,EAAU1tB,GAAUjvB,EAAQ28C,SAC5B40B,EAAoB31E,KAAKiB,MAAMwD,QAAUzE,KAAK6vE,WAAWprE,QAAUzE,KAAKkvE,KAAKzqE,QAAUzE,KAAK8vE,UAAUrrE,QAAUzE,KAAKmvE,OAAO1qE,OAC9HL,EAAQk7C,SAAWq2B,IACrBnrD,EAAI0C,OACJ1C,EAAIorD,YAAchE,EAClB5xE,KAAKurD,eAAe5wB,EAAInQ,EAAK6qD,EAAajxE,GAC1C08B,GAAsBtW,EAAKpmB,EAAQuoE,eACnChyC,EAAGhvB,GAAKo1C,EAAQtxB,IAChBzvB,KAAKyrD,UAAU9wB,EAAInQ,EAAKpmB,GACxBpE,KAAK61E,SAASl7C,EAAInQ,EAAKpmB,GACvBpE,KAAK81E,WAAWn7C,EAAInQ,EAAKpmB,GACzBg9B,GAAqB5W,EAAKpmB,EAAQuoE,eAClCniD,EAAI8C,WAGR,oBACE,OAAOttB,KAAKulC,SAAW,GAEzB,kBAAkBu8B,EAAgB2M,GAChC,MAAM1M,EAAa/hE,KAAKulC,QAClByC,EAAS85B,EAAet+D,IAAI,EAAE4G,eAAczF,YAChD,MAAMsQ,EAAOjV,KAAKyC,MAAMmsC,eAAexkC,GACvC,IAAK6K,EACH,MAAM,IAAIhO,MAAM,kCAAoCmD,GAEtD,MAAO,CACLA,eACA8xB,QAASjnB,EAAK1T,KAAKoD,GACnBA,WAGE4R,GAAWzM,EAAei4D,EAAY/5B,GACtC+tC,EAAkB/1E,KAAKg2E,iBAAiBhuC,EAAQymC,IAClDl4D,GAAWw/D,KACb/1E,KAAKulC,QAAUyC,EACfhoC,KAAK6xE,eAAiBpD,EACtBzuE,KAAKi2E,qBAAsB,EAC3Bj2E,KAAK0C,QAAO,IAGhB,YAAYwK,EAAG+0D,EAAQhG,GAAc,GACnC,GAAIgG,GAAUjiE,KAAKi2E,oBACjB,OAAO,EAETj2E,KAAKi2E,qBAAsB,EAC3B,MAAM7xE,EAAUpE,KAAKoE,QACf29D,EAAa/hE,KAAKulC,SAAW,GAC7ByC,EAAShoC,KAAKwiE,mBAAmBt1D,EAAG60D,EAAYE,EAAQhG,GACxD8Z,EAAkB/1E,KAAKg2E,iBAAiBhuC,EAAQ96B,GAChDqJ,EAAU0rD,IAAWn4D,EAAek+B,EAAQ+5B,IAAegU,EAWjE,OAVIx/D,IACFvW,KAAKulC,QAAUyC,GACX5jC,EAAQk7C,SAAWl7C,EAAQuvE,YAC7B3zE,KAAK6xE,eAAiB,CACpBpmE,EAAGyB,EAAEzB,EACLE,EAAGuB,EAAEvB,GAEP3L,KAAK0C,QAAO,EAAMu/D,KAGf1rD,EAET,mBAAmBrJ,EAAG60D,EAAYE,EAAQhG,GACxC,MAAM73D,EAAUpE,KAAKoE,QACrB,GAAe,aAAX8I,EAAE/H,KACJ,MAAO,GAET,IAAK82D,EACH,OAAO8F,EAET,MAAM/5B,EAAShoC,KAAKyC,MAAMggE,0BAA0Bv1D,EAAG9I,EAAQymB,KAAMzmB,EAAS69D,GAI9E,OAHI79D,EAAQuF,SACVq+B,EAAOr+B,UAEFq+B,EAET,iBAAiBA,EAAQ96B,GACvB,MAAM,OAACglE,EAAM,OAAEC,EAAM,QAAE/tE,GAAWpE,KAC5B4iD,EAAW0rB,GAAYlqE,EAAQw+C,UAAUr6C,KAAKvI,KAAMgoC,EAAQ96B,GAClE,OAAoB,IAAb01C,IAAuBsvB,IAAWtvB,EAASn3C,GAAK0mE,IAAWvvB,EAASj3C,IAG/E,GAAQ2iE,YAAcA,GACtB,IAAI4H,GAAiB,CACnBruE,GAAI,UACJ4lE,SAAU,GACVa,eACA,UAAU7rE,EAAOirE,EAAOtpE,GAClBA,IACF3B,EAAMk3C,QAAU,IAAI,GAAQ,CAACl3C,QAAO2B,cAGxC,aAAa3B,EAAOirE,EAAOtpE,GACrB3B,EAAMk3C,SACRl3C,EAAMk3C,QAAQhM,WAAWvpC,IAG7B,MAAM3B,EAAOirE,EAAOtpE,GACd3B,EAAMk3C,SACRl3C,EAAMk3C,QAAQhM,WAAWvpC,IAG7B,UAAU3B,GACR,MAAMk3C,EAAUl3C,EAAMk3C,QACtB,GAAIA,GAAWA,EAAQw8B,cAAe,CACpC,MAAM7sE,EAAO,CACXqwC,WAEF,IAAuD,IAAnDl3C,EAAMyjD,cAAc,oBAAqB58C,GAC3C,OAEFqwC,EAAQrU,KAAK7iC,EAAM+nB,KACnB/nB,EAAMyjD,cAAc,mBAAoB58C,KAG5C,WAAW7G,EAAO6G,GAChB,GAAI7G,EAAMk3C,QAAS,CACjB,MAAMqE,EAAmB10C,EAAK24D,OAC1Bx/D,EAAMk3C,QAAQi0B,YAAYtkE,EAAKw8B,MAAOkY,EAAkB10C,EAAK2yD,eAC/D3yD,EAAKiN,SAAU,KAIrB2V,SAAU,CACRozB,SAAS,EACTq0B,SAAU,KACV/wB,SAAU,UACVh5B,gBAAiB,kBACjBuqD,WAAY,OACZrH,UAAW,CACTrkD,OAAQ,QAEVsnD,aAAc,EACdC,kBAAmB,EACnBrtB,WAAY,OACZsyB,UAAW,OACX9E,YAAa,EACbf,SAAU,GAEVwF,UAAW,OACXQ,YAAa,OACb/E,cAAe,EACfD,gBAAiB,EACjBf,WAAY,CACV5mD,OAAQ,QAEV0sD,YAAa,OACbp0B,QAAS,EACT8vB,aAAc,EACdD,UAAW,EACXziD,aAAc,EACd87C,UAAW,CAACz/C,EAAKkG,IAASA,EAAK0+C,SAAStiE,KACxCo9D,SAAU,CAAC1/C,EAAKkG,IAASA,EAAK0+C,SAAStiE,KACvC0nE,mBAAoB,OACpBtE,eAAe,EACf3e,WAAY,EACZ1nC,YAAa,gBACbsF,YAAa,EACbxF,UAAW,CACTkb,SAAU,IACVmC,OAAQ,gBAEVmB,WAAY,CACVN,QAAS,CACP1iC,KAAM,SACN4iC,WAAY,CAAC,IAAK,IAAK,QAAS,SAAU,SAAU,WAEtD6pC,QAAS,CACP5qC,OAAQ,SACRnC,SAAU,MAGdF,UAAW,CACT4tC,YAAatqE,EACb,MAAMypE,GACJ,GAAIA,EAAajtE,OAAS,EAAG,CAC3B,MAAMsI,EAAO2kE,EAAa,GACpBxuE,EAAS6J,EAAKtK,MAAMlB,KAAK2B,OACzBkzE,EAAalzE,EAASA,EAAOuB,OAAS,EAC5C,GAAIzE,MAAQA,KAAKoE,SAAiC,YAAtBpE,KAAKoE,QAAQymB,KACvC,OAAO9d,EAAKnJ,QAAQW,OAAS,GACxB,GAAIwI,EAAKxI,MACd,OAAOwI,EAAKxI,MACP,GAAI6xE,EAAa,GAAKrpE,EAAKo/B,UAAYiqC,EAC5C,OAAOlzE,EAAO6J,EAAKo/B,WAGvB,MAAO,IAETqmC,WAAYvqE,EACZ4nE,WAAY5nE,EACZ0qE,YAAa1qE,EACb,MAAM8zC,GACJ,GAAI/7C,MAAQA,KAAKoE,SAAiC,YAAtBpE,KAAKoE,QAAQymB,KACvC,OAAOkxB,EAAYx3C,MAAQ,KAAOw3C,EAAYE,gBAAkBF,EAAYE,eAE9E,IAAI13C,EAAQw3C,EAAYn4C,QAAQW,OAAS,GACrCA,IACFA,GAAS,MAEX,MAAM/D,EAAQu7C,EAAYE,eAI1B,OAHK9zC,EAAc3H,KACjB+D,GAAS/D,GAEJ+D,GAET,WAAWw3C,GACT,MAAM9mC,EAAO8mC,EAAYt5C,MAAMmsC,eAAemN,EAAY3xC,cACpDhG,EAAU6Q,EAAKs2B,WAAWpP,SAAS4f,EAAY5P,WACrD,MAAO,CACLtiB,YAAazlB,EAAQylB,YACrBD,gBAAiBxlB,EAAQwlB,gBACzBuF,YAAa/qB,EAAQ+qB,YACrB+U,WAAY9/B,EAAQ8/B,WACpBC,iBAAkB//B,EAAQ+/B,iBAC1B8+B,aAAc,IAGlB,iBACE,OAAOjjE,KAAKoE,QAAQ6wE,WAEtB,gBAAgBl5B,GACd,MAAM9mC,EAAO8mC,EAAYt5C,MAAMmsC,eAAemN,EAAY3xC,cACpDhG,EAAU6Q,EAAKs2B,WAAWpP,SAAS4f,EAAY5P,WACrD,MAAO,CACL/d,WAAYhqB,EAAQgqB,WACpBC,SAAUjqB,EAAQiqB,WAGtBukD,WAAY3qE,EACZ6nE,UAAW7nE,EACX4qE,aAAc5qE,EACdknE,OAAQlnE,EACR6qE,YAAa7qE,IAGjBk2C,cAAe,CACbixB,SAAU,OACVC,WAAY,OACZvC,UAAW,QAEb31C,YAAa,CACXhL,YAAc7rB,GAAkB,WAATA,GAA8B,aAATA,GAAgC,aAATA,EACnE+rB,YAAY,EACZsY,UAAW,CACTxY,aAAa,EACbE,YAAY,GAEd1C,UAAW,CACT2C,WAAW,GAEb6b,WAAY,CACV7b,UAAW,cAGf6tC,uBAAwB,CAAC,gBAa3B,MAAMkc,GAAc,CAACnzE,EAAQkpC,EAAKznC,EAAO2xE,KACpB,kBAARlqC,GACTznC,EAAQzB,EAAOY,KAAKsoC,GAAO,EAC3BkqC,EAAYC,QAAQ,CAAC5xE,QAAOJ,MAAO6nC,KAC1Bp9B,MAAMo9B,KACfznC,EAAQ,MAEHA,GAET,SAAS6xE,GAAetzE,EAAQkpC,EAAKznC,EAAO2xE,GAC1C,MAAM72B,EAAQv8C,EAAO2H,QAAQuhC,GAC7B,IAAe,IAAXqT,EACF,OAAO42B,GAAYnzE,EAAQkpC,EAAKznC,EAAO2xE,GAEzC,MAAMrkE,EAAO/O,EAAOuzE,YAAYrqC,GAChC,OAAOqT,IAAUxtC,EAAOtN,EAAQ86C,EAElC,MAAM2C,GAAa,CAACz9C,EAAO8K,IAAkB,OAAV9K,EAAiB,KAAO4M,GAAYnE,KAAKc,MAAMvJ,GAAQ,EAAG8K,GAC7F,MAAM,WAAsB,GAC1B,YAAYm3B,GACVyP,MAAMzP,GACN5mC,KAAK02E,iBAAcr0E,EACnBrC,KAAK22E,YAAc,EACnB32E,KAAK42E,aAAe,GAEtB,KAAKle,GACH,MAAMme,EAAQ72E,KAAK42E,aACnB,GAAIC,EAAMpyE,OAAQ,CAChB,MAAMvB,EAASlD,KAAK8vC,YACpB,IAAK,MAAM,MAACnrC,EAAK,MAAEJ,KAAUsyE,EACvB3zE,EAAOyB,KAAWJ,GACpBrB,EAAOkQ,OAAOzO,EAAO,GAGzB3E,KAAK42E,aAAe,GAEtBvgC,MAAMkoB,KAAK7F,GAEb,MAAMtsB,EAAKznC,GACT,GAAIwD,EAAcikC,GAChB,OAAO,KAET,MAAMlpC,EAASlD,KAAK8vC,YAGpB,OAFAnrC,EAAQgE,SAAShE,IAAUzB,EAAOyB,KAAWynC,EAAMznC,EAC/C6xE,GAAetzE,EAAQkpC,EAAKtjC,EAAenE,EAAOynC,GAAMpsC,KAAK42E,cAC1Dx0B,GAAWz9C,EAAOzB,EAAOuB,OAAS,GAE3C,sBACE,MAAM,WAACiR,EAAU,WAAEC,GAAc3V,KAAK4V,gBACtC,IAAI,IAACpG,EAAG,IAAEC,GAAOzP,KAAKukD,WAAU,GACJ,UAAxBvkD,KAAKoE,QAAQw9B,SACVlsB,IACHlG,EAAM,GAEHmG,IACHlG,EAAMzP,KAAK8vC,YAAYrrC,OAAS,IAGpCzE,KAAKwP,IAAMA,EACXxP,KAAKyP,IAAMA,EAEb,aACE,MAAMD,EAAMxP,KAAKwP,IACXC,EAAMzP,KAAKyP,IACX8oC,EAASv4C,KAAKoE,QAAQm0C,OACtB5E,EAAQ,GACd,IAAIzwC,EAASlD,KAAK8vC,YAClB5sC,EAAkB,IAARsM,GAAaC,IAAQvM,EAAOuB,OAAS,EAAKvB,EAASA,EAAOsF,MAAMgH,EAAKC,EAAM,GACrFzP,KAAK22E,YAAcvpE,KAAKqC,IAAIvM,EAAOuB,QAAU8zC,EAAS,EAAI,GAAI,GAC9Dv4C,KAAK02E,YAAc12E,KAAKwP,KAAO+oC,EAAS,GAAM,GAC9C,IAAK,IAAI/3C,EAAQgP,EAAKhP,GAASiP,EAAKjP,IAClCmzC,EAAM7vC,KAAK,CAACtD,UAEd,OAAOmzC,EAET,iBAAiBnzC,GACf,MAAM0C,EAASlD,KAAK8vC,YACpB,OAAItvC,GAAS,GAAKA,EAAQ0C,EAAOuB,OACxBvB,EAAO1C,GAETA,EAET,YACE61C,MAAM7N,YACDxoC,KAAKq1C,iBACRr1C,KAAK4jD,gBAAkB5jD,KAAK4jD,gBAGhC,iBAAiBpjD,GAIf,MAHqB,kBAAVA,IACTA,EAAQR,KAAKw4B,MAAMh4B,IAEJ,OAAVA,EAAiB2vC,IAAMnwC,KAAK63C,oBAAoBr3C,EAAQR,KAAK02E,aAAe12E,KAAK22E,aAE1F,gBAAgBhyE,GACd,MAAMgvC,EAAQ3zC,KAAK2zC,MACnB,OAAIhvC,EAAQ,GAAKA,EAAQgvC,EAAMlvC,OAAS,EAC/B,KAEFzE,KAAK6V,iBAAiB89B,EAAMhvC,GAAOnE,OAE5C,iBAAiBitB,GACf,OAAOrgB,KAAKc,MAAMlO,KAAK02E,YAAc12E,KAAK82E,mBAAmBrpD,GAASztB,KAAK22E,aAE7E,eACE,OAAO32E,KAAK0vB,QAUhB,SAASqnD,GAAgBC,EAAmBC,GAC1C,MAAMtjC,EAAQ,GACRujC,EAAc,OACd,OAACt1C,EAAM,KAAEmoB,EAAI,IAAEv6C,EAAG,IAAEC,EAAG,UAAE0nE,EAAS,MAAE9hE,EAAK,SAAE+hE,EAAQ,UAAEC,EAAS,cAAEC,GAAiBN,EACjFppB,EAAO7D,GAAQ,EACfwtB,EAAYH,EAAW,GACtB5nE,IAAKgoE,EAAM/nE,IAAKgoE,GAAQR,EACzBvhE,GAAcvN,EAAcqH,GAC5BmG,GAAcxN,EAAcsH,GAC5BioE,GAAgBvvE,EAAckN,GAC9BsiE,GAAcF,EAAOD,IAASH,EAAY,GAChD,IACI7wC,EAAQoxC,EAASC,EAASC,EAD1B39B,EAAUpsC,GAAS0pE,EAAOD,GAAQD,EAAY3pB,GAAQA,EAE1D,GAAIzT,EAAU+8B,IAAgBxhE,IAAeC,EAC3C,MAAO,CAAC,CAACnV,MAAOg3E,GAAO,CAACh3E,MAAOi3E,IAEjCK,EAAY1qE,KAAKkzC,KAAKm3B,EAAOt9B,GAAW/sC,KAAKkB,MAAMkpE,EAAOr9B,GACtD29B,EAAYP,IACdp9B,EAAUpsC,EAAQ+pE,EAAY39B,EAAUo9B,EAAY3pB,GAAQA,GAEzDzlD,EAAcgvE,KACjB3wC,EAASp5B,KAAKiB,IAAI,GAAI8oE,GACtBh9B,EAAU/sC,KAAKkzC,KAAKnG,EAAU3T,GAAUA,GAE3B,UAAX5E,GACFg2C,EAAUxqE,KAAKkB,MAAMkpE,EAAOr9B,GAAWA,EACvC09B,EAAUzqE,KAAKkzC,KAAKm3B,EAAOt9B,GAAWA,IAEtCy9B,EAAUJ,EACVK,EAAUJ,GAER/hE,GAAcC,GAAco0C,GAAQ56C,GAAaM,EAAMD,GAAOu6C,EAAM5P,EAAU,MAChF29B,EAAY1qE,KAAKc,MAAMd,KAAKoC,KAAKC,EAAMD,GAAO2qC,EAASi9B,IACvDj9B,GAAW1qC,EAAMD,GAAOsoE,EACxBF,EAAUpoE,EACVqoE,EAAUpoE,GACDioE,GACTE,EAAUliE,EAAalG,EAAMooE,EAC7BC,EAAUliE,EAAalG,EAAMooE,EAC7BC,EAAYziE,EAAQ,EACpB8kC,GAAW09B,EAAUD,GAAWE,IAEhCA,GAAaD,EAAUD,GAAWz9B,EAEhC29B,EADE3pE,EAAa2pE,EAAW1qE,KAAKc,MAAM4pE,GAAY39B,EAAU,KAC/C/sC,KAAKc,MAAM4pE,GAEX1qE,KAAKkzC,KAAKw3B,IAG1B,MAAMC,EAAgB3qE,KAAKqC,IACzBK,EAAeqqC,GACfrqC,EAAe8nE,IAEjBpxC,EAASp5B,KAAKiB,IAAI,GAAIlG,EAAcgvE,GAAaY,EAAgBZ,GACjES,EAAUxqE,KAAKc,MAAM0pE,EAAUpxC,GAAUA,EACzCqxC,EAAUzqE,KAAKc,MAAM2pE,EAAUrxC,GAAUA,EACzC,IAAIxf,EAAI,EAcR,IAbItR,IACE4hE,GAAiBM,IAAYpoE,GAC/BmkC,EAAM7vC,KAAK,CAACtD,MAAOgP,IACfooE,EAAUpoE,GACZwX,IAEE7Y,EAAaf,KAAKc,OAAO0pE,EAAU5wD,EAAImzB,GAAW3T,GAAUA,EAAQh3B,EAAKwoE,GAAkBxoE,EAAKmoE,EAAYX,KAC9GhwD,KAEO4wD,EAAUpoE,GACnBwX,KAGGA,EAAI8wD,IAAa9wD,EACtB2sB,EAAM7vC,KAAK,CAACtD,MAAO4M,KAAKc,OAAO0pE,EAAU5wD,EAAImzB,GAAW3T,GAAUA,IAWpE,OATI7wB,GAAc2hE,GAAiBO,IAAYpoE,EACzCkkC,EAAMlvC,QAAU0J,EAAawlC,EAAMA,EAAMlvC,OAAS,GAAGjE,MAAOiP,EAAKuoE,GAAkBvoE,EAAKkoE,EAAYX,IACtGrjC,EAAMA,EAAMlvC,OAAS,GAAGjE,MAAQiP,EAEhCkkC,EAAM7vC,KAAK,CAACtD,MAAOiP,IAEXkG,GAAckiE,IAAYpoE,GACpCkkC,EAAM7vC,KAAK,CAACtD,MAAOq3E,IAEdlkC,EAET,SAASqkC,GAAkBx3E,EAAOm3E,GAAY,WAACpiC,EAAU,YAAEyL,IACzD,MAAMzyB,EAAM7e,EAAUsxC,GAChBj5B,GAASwtB,EAAanoC,KAAKuJ,IAAI4X,GAAOnhB,KAAKwK,IAAI2W,KAAS,KACxD9pB,EAAS,IAAOkzE,GAAc,GAAKn3E,GAAOiE,OAChD,OAAO2I,KAAKoC,IAAImoE,EAAa5vD,EAAOtjB,GA/FtC,GAAcoD,GAAK,WACnB,GAAcqkB,SAAW,CACvBynB,MAAO,CACLvqC,SAAU,GAAcf,UAAUsoC,mBA8FtC,MAAM,WAAwB,GAC5B,YAAY/J,GACVyP,MAAMzP,GACN5mC,KAAK+Q,WAAQ1O,EACbrC,KAAKgR,SAAM3O,EACXrC,KAAK02E,iBAAcr0E,EACnBrC,KAAKi4E,eAAY51E,EACjBrC,KAAK22E,YAAc,EAErB,MAAMvqC,EAAKznC,GACT,OAAIwD,EAAcikC,KAGE,kBAARA,GAAoBA,aAAe5mC,UAAYmD,UAAUyjC,GAF5D,MAKDA,EAEV,yBACE,MAAM,YAACnY,GAAej0B,KAAKoE,SACrB,WAACsR,EAAU,WAAEC,GAAc3V,KAAK4V,gBACtC,IAAI,IAACpG,EAAG,IAAEC,GAAOzP,KACjB,MAAMk4E,EAAS1sE,GAAMgE,EAAMkG,EAAalG,EAAMhE,EACxC2sE,EAAS3sE,GAAMiE,EAAMkG,EAAalG,EAAMjE,EAC9C,GAAIyoB,EAAa,CACf,MAAMmkD,EAAUtqE,EAAK0B,GACf6oE,EAAUvqE,EAAK2B,GACjB2oE,EAAU,GAAKC,EAAU,EAC3BF,EAAO,GACEC,EAAU,GAAKC,EAAU,GAClCH,EAAO,GAGX,GAAI1oE,IAAQC,EAAK,CACf,IAAI8oC,EAAS,GACT9oC,GAAOjK,OAAO8yE,kBAAoB9oE,GAAOhK,OAAO+yE,oBAClDhgC,EAASnrC,KAAK8B,IAAU,IAANO,IAEpB0oE,EAAO1oE,EAAM8oC,GACRtkB,GACHikD,EAAO1oE,EAAM+oC,GAGjBv4C,KAAKwP,IAAMA,EACXxP,KAAKyP,IAAMA,EAEb,eACE,MAAMuvC,EAAWh/C,KAAKoE,QAAQuvC,MAC9B,IACIyjC,GADA,cAACl4B,EAAa,SAAEs5B,GAAYx5B,EAehC,OAbIw5B,GACFpB,EAAWhqE,KAAKkzC,KAAKtgD,KAAKyP,IAAM+oE,GAAYprE,KAAKkB,MAAMtO,KAAKwP,IAAMgpE,GAAY,EAC1EpB,EAAW,MACb5jD,QAAQC,KAAK,UAAUzzB,KAAK6H,sBAAsB2wE,mCAA0CpB,8BAC5FA,EAAW,OAGbA,EAAWp3E,KAAKy4E,mBAChBv5B,EAAgBA,GAAiB,IAE/BA,IACFk4B,EAAWhqE,KAAKoC,IAAI0vC,EAAek4B,IAE9BA,EAET,mBACE,OAAO5xE,OAAOgI,kBAEhB,aACE,MAAMkjB,EAAO1wB,KAAKoE,QACZ46C,EAAWtuB,EAAKijB,MACtB,IAAIyjC,EAAWp3E,KAAK04E,eACpBtB,EAAWhqE,KAAKqC,IAAI,EAAG2nE,GACvB,MAAMuB,EAA0B,CAC9BvB,WACAx1C,OAAQlR,EAAKkR,OACbpyB,IAAKkhB,EAAKlhB,IACVC,IAAKihB,EAAKjhB,IACV0nE,UAAWn4B,EAASm4B,UACpBptB,KAAM/K,EAASw5B,SACfnjE,MAAO2pC,EAAS3pC,MAChBgiE,UAAWr3E,KAAK44E,aAChBrjC,WAAYv1C,KAAKq1C,eACjB2L,YAAahC,EAASgC,aAAe,EACrCs2B,eAA0C,IAA3Bt4B,EAASs4B,eAEpBL,EAAYj3E,KAAKujD,QAAUvjD,KAC3B2zC,EAAQojC,GAAgB4B,EAAyB1B,GAYvD,MAXoB,UAAhBvmD,EAAKkR,QACPvyB,EAAmBskC,EAAO3zC,KAAM,SAE9B0wB,EAAK/mB,SACPgqC,EAAMhqC,UACN3J,KAAK+Q,MAAQ/Q,KAAKyP,IAClBzP,KAAKgR,IAAMhR,KAAKwP,MAEhBxP,KAAK+Q,MAAQ/Q,KAAKwP,IAClBxP,KAAKgR,IAAMhR,KAAKyP,KAEXkkC,EAET,YACE,MAAMA,EAAQ3zC,KAAK2zC,MACnB,IAAI5iC,EAAQ/Q,KAAKwP,IACbwB,EAAMhR,KAAKyP,IAEf,GADA4mC,MAAM7N,YACFxoC,KAAKoE,QAAQm0C,QAAU5E,EAAMlvC,OAAQ,CACvC,MAAM8zC,GAAUvnC,EAAMD,GAAS3D,KAAKqC,IAAIkkC,EAAMlvC,OAAS,EAAG,GAAK,EAC/DsM,GAASwnC,EACTvnC,GAAOunC,EAETv4C,KAAK02E,YAAc3lE,EACnB/Q,KAAKi4E,UAAYjnE,EACjBhR,KAAK22E,YAAc3lE,EAAMD,EAE3B,iBAAiBvQ,GACf,OAAO6/B,GAAa7/B,EAAOR,KAAKyC,MAAM2B,QAAQy7B,OAAQ7/B,KAAKoE,QAAQuvC,MAAMpT,SAI7E,MAAM,WAAoB,GACxB,sBACE,MAAM,IAAC/wB,EAAG,IAAEC,GAAOzP,KAAKukD,WAAU,GAClCvkD,KAAKwP,IAAM9G,EAAe8G,GAAOA,EAAM,EACvCxP,KAAKyP,IAAM/G,EAAe+G,GAAOA,EAAM,EACvCzP,KAAK64E,yBAEP,mBACE,MAAMtjC,EAAav1C,KAAKq1C,eAClB5wC,EAAS8wC,EAAav1C,KAAKuF,MAAQvF,KAAKyF,OACxCu7C,EAActxC,EAAU1P,KAAKoE,QAAQuvC,MAAMqN,aAC3Cj5B,GAASwtB,EAAanoC,KAAKuJ,IAAIqqC,GAAe5zC,KAAKwK,IAAIopC,KAAiB,KACxEkH,EAAWloD,KAAKuoD,wBAAwB,GAC9C,OAAOn7C,KAAKkzC,KAAK77C,EAAS2I,KAAKoC,IAAI,GAAI04C,EAAS79B,WAAatC,IAE/D,iBAAiBvnB,GACf,OAAiB,OAAVA,EAAiB2vC,IAAMnwC,KAAK63C,oBAAoBr3C,EAAQR,KAAK02E,aAAe12E,KAAK22E,aAE1F,iBAAiBlpD,GACf,OAAOztB,KAAK02E,YAAc12E,KAAK82E,mBAAmBrpD,GAASztB,KAAK22E,aAUpE,SAASmC,GAAQC,GACf,MAAMvxC,EAASuxC,EAAW3rE,KAAKiB,IAAI,GAAIjB,KAAKkB,MAAMT,EAAMkrE,KACxD,OAAkB,IAAXvxC,EAET,SAASwxC,GAAchC,EAAmBC,GACxC,MAAMgC,EAAS7rE,KAAKkB,MAAMT,EAAMopE,EAAUxnE,MACpCypE,EAAiB9rE,KAAKkzC,KAAK22B,EAAUxnE,IAAMrC,KAAKiB,IAAI,GAAI4qE,IACxDtlC,EAAQ,GACd,IAAIolC,EAAUnwE,EAAgBouE,EAAkBxnE,IAAKpC,KAAKiB,IAAI,GAAIjB,KAAKkB,MAAMT,EAAMopE,EAAUznE,QACzF2pE,EAAM/rE,KAAKkB,MAAMT,EAAMkrE,IACvBK,EAAchsE,KAAKkB,MAAMyqE,EAAU3rE,KAAKiB,IAAI,GAAI8qE,IAChDhC,EAAYgC,EAAM,EAAI/rE,KAAKiB,IAAI,GAAIjB,KAAK8B,IAAIiqE,IAAQ,EACxD,GACExlC,EAAM7vC,KAAK,CAACtD,MAAOu4E,EAAS15B,MAAOy5B,GAAQC,OACzCK,EACkB,KAAhBA,IACFA,EAAc,IACZD,EACFhC,EAAYgC,GAAO,EAAI,EAAIhC,GAE7B4B,EAAU3rE,KAAKc,MAAMkrE,EAAchsE,KAAKiB,IAAI,GAAI8qE,GAAOhC,GAAaA,QAC7DgC,EAAMF,GAAWE,IAAQF,GAAUG,EAAcF,GAC1D,MAAMG,EAAWzwE,EAAgBouE,EAAkBvnE,IAAKspE,GAExD,OADAplC,EAAM7vC,KAAK,CAACtD,MAAO64E,EAAUh6B,MAAOy5B,GAAQC,KACrCplC,EA/BT,GAAY9rC,GAAK,SACjB,GAAYqkB,SAAW,CACrBynB,MAAO,CACLvqC,SAAU01C,GAAMV,WAAWS,UA8B/B,MAAM,WAAyB,GAC7B,YAAYjY,GACVyP,MAAMzP,GACN5mC,KAAK+Q,WAAQ1O,EACbrC,KAAKgR,SAAM3O,EACXrC,KAAK02E,iBAAcr0E,EACnBrC,KAAK22E,YAAc,EAErB,MAAMvqC,EAAKznC,GACT,MAAMnE,EAAQ,GAAgB6H,UAAUmwB,MAAMhvB,MAAMxJ,KAAM,CAACosC,EAAKznC,IAChE,GAAc,IAAVnE,EAIJ,OAAOkI,EAAelI,IAAUA,EAAQ,EAAIA,EAAQ,KAHlDR,KAAKs5E,OAAQ,EAKjB,sBACE,MAAM,IAAC9pE,EAAG,IAAEC,GAAOzP,KAAKukD,WAAU,GAClCvkD,KAAKwP,IAAM9G,EAAe8G,GAAOpC,KAAKqC,IAAI,EAAGD,GAAO,KACpDxP,KAAKyP,IAAM/G,EAAe+G,GAAOrC,KAAKqC,IAAI,EAAGA,GAAO,KAChDzP,KAAKoE,QAAQ6vB,cACfj0B,KAAKs5E,OAAQ,GAEft5E,KAAK64E,yBAEP,yBACE,MAAM,WAACnjE,EAAU,WAAEC,GAAc3V,KAAK4V,gBACtC,IAAIpG,EAAMxP,KAAKwP,IACXC,EAAMzP,KAAKyP,IACf,MAAMyoE,EAAS1sE,GAAMgE,EAAMkG,EAAalG,EAAMhE,EACxC2sE,EAAS3sE,GAAMiE,EAAMkG,EAAalG,EAAMjE,EACxC2tE,EAAM,CAAC3tE,EAAGiN,IAAMrL,KAAKiB,IAAI,GAAIjB,KAAKkB,MAAMT,EAAMrC,IAAMiN,GACtDjJ,IAAQC,IACND,GAAO,GACT0oE,EAAO,GACPC,EAAO,MAEPD,EAAOiB,EAAI3pE,GAAM,IACjB2oE,EAAOgB,EAAI1pE,EAAK,MAGhBD,GAAO,GACT0oE,EAAOiB,EAAI1pE,GAAM,IAEfA,GAAO,GACT0oE,EAAOgB,EAAI3pE,EAAK,IAEdxP,KAAKs5E,OAASt5E,KAAKwP,MAAQxP,KAAKgkD,eAAiBx0C,IAAQ2pE,EAAIn5E,KAAKwP,IAAK,IACzE0oE,EAAOiB,EAAI3pE,GAAM,IAEnBxP,KAAKwP,IAAMA,EACXxP,KAAKyP,IAAMA,EAEb,aACE,MAAMihB,EAAO1wB,KAAKoE,QACZ4yE,EAAoB,CACxBxnE,IAAKxP,KAAK8jD,SACVr0C,IAAKzP,KAAK6jD,UAENlQ,EAAQqlC,GAAchC,EAAmBh3E,MAY/C,MAXoB,UAAhB0wB,EAAKkR,QACPvyB,EAAmBskC,EAAO3zC,KAAM,SAE9B0wB,EAAK/mB,SACPgqC,EAAMhqC,UACN3J,KAAK+Q,MAAQ/Q,KAAKyP,IAClBzP,KAAKgR,IAAMhR,KAAKwP,MAEhBxP,KAAK+Q,MAAQ/Q,KAAKwP,IAClBxP,KAAKgR,IAAMhR,KAAKyP,KAEXkkC,EAET,iBAAiBnzC,GACf,YAAiB6B,IAAV7B,EACH,IACA6/B,GAAa7/B,EAAOR,KAAKyC,MAAM2B,QAAQy7B,OAAQ7/B,KAAKoE,QAAQuvC,MAAMpT,QAExE,YACE,MAAMxvB,EAAQ/Q,KAAKwP,IACnB6mC,MAAM7N,YACNxoC,KAAK02E,YAAc7oE,EAAMkD,GACzB/Q,KAAK22E,YAAc9oE,EAAM7N,KAAKyP,KAAO5B,EAAMkD,GAE7C,iBAAiBvQ,GAIf,YAHc6B,IAAV7B,GAAiC,IAAVA,IACzBA,EAAQR,KAAKwP,KAED,OAAVhP,GAAkBwO,MAAMxO,GACnB2vC,IAEFnwC,KAAK63C,mBAAmBr3C,IAAUR,KAAKwP,IAC1C,GACC3B,EAAMrN,GAASR,KAAK02E,aAAe12E,KAAK22E,aAE/C,iBAAiBlpD,GACf,MAAMi7B,EAAU1oD,KAAK82E,mBAAmBrpD,GACxC,OAAOrgB,KAAKiB,IAAI,GAAIrO,KAAK02E,YAAchuB,EAAU1oD,KAAK22E,cAa1D,SAAS4C,GAAsB7oD,GAC7B,MAAMsuB,EAAWtuB,EAAKijB,MACtB,GAAIqL,EAAStB,SAAWhtB,EAAKgtB,QAAS,CACpC,MAAMqD,EAAU1tB,GAAU2rB,EAAS2C,iBACnC,OAAO74C,EAAek2C,EAAS70B,MAAQ60B,EAAS70B,KAAKrd,KAAMof,GAAS/B,KAAKrd,MAAQi0C,EAAQt7C,OAE3F,OAAO,EAET,SAAS+zE,GAAiBhvD,EAAKL,EAAM5lB,GAEnC,OADAA,EAAQ6D,EAAQ7D,GAASA,EAAQ,CAACA,GAC3B,CACL6W,EAAG0R,GAAatC,EAAKL,EAAKwC,OAAQpoB,GAClCuU,EAAGvU,EAAME,OAAS0lB,EAAKE,YAG3B,SAASovD,GAAgBnpE,EAAOmsB,EAAK3vB,EAAM0C,EAAKC,GAC9C,OAAIa,IAAUd,GAAOc,IAAUb,EACtB,CACLsB,MAAO0rB,EAAO3vB,EAAO,EACrBkE,IAAKyrB,EAAO3vB,EAAO,GAEZwD,EAAQd,GAAOc,EAAQb,EACzB,CACLsB,MAAO0rB,EAAM3vB,EACbkE,IAAKyrB,GAGF,CACL1rB,MAAO0rB,EACPzrB,IAAKyrB,EAAM3vB,GAGf,SAAS4sE,GAAmBruD,GAC1B,MAAM0qB,EAAO,CACXl9B,EAAGwS,EAAMzW,KAAOyW,EAAMyiD,SAASl5D,KAC/B+F,EAAG0Q,EAAMxW,MAAQwW,EAAMyiD,SAASj5D,MAChC4B,EAAG4U,EAAMoE,IAAMpE,EAAMyiD,SAASr+C,IAC9B5iB,EAAGwe,EAAMqE,OAASrE,EAAMyiD,SAASp+C,QAE7BiqD,EAAS51E,OAAOC,OAAO,GAAI+xC,GAC3B0Q,EAAa,GACb1F,EAAU,GACV64B,EAAavuD,EAAMwuD,aAAap1E,OAChCq1E,EAAiBzuD,EAAMjnB,QAAQw5C,YAC/Bm8B,EAAkBD,EAAeE,kBAAoB7sE,EAAKysE,EAAa,EAC7E,IAAK,IAAIhwE,EAAI,EAAGA,EAAIgwE,EAAYhwE,IAAK,CACnC,MAAM8mB,EAAOopD,EAAezjD,WAAWhL,EAAM4uD,qBAAqBrwE,IAClEm3C,EAAQn3C,GAAK8mB,EAAKqwB,QAClB,MAAMjD,EAAgBzyB,EAAM6uD,iBAAiBtwE,EAAGyhB,EAAM8uD,YAAcp5B,EAAQn3C,GAAImwE,GAC1EK,EAAS9mD,GAAO5C,EAAKvG,MACrB4jD,EAAWyL,GAAiBnuD,EAAMb,IAAK4vD,EAAQ/uD,EAAMwuD,aAAajwE,IACxE68C,EAAW78C,GAAKmkE,EAChB,MAAM3mB,EAAev2C,EAAgBwa,EAAM+xB,cAAcxzC,GAAKmwE,GACxDzpE,EAAQlD,KAAKc,MAAM0B,EAAUw3C,IAC7BizB,EAAUZ,GAAgBnpE,EAAOwtC,EAAcryC,EAAGsiE,EAAS3yD,EAAG,EAAG,KACjEk/D,EAAUb,GAAgBnpE,EAAOwtC,EAAcnyC,EAAGoiE,EAASj1D,EAAG,GAAI,KACxEyhE,GAAaZ,EAAQ5jC,EAAMqR,EAAcizB,EAASC,GAEpDjvD,EAAMmvD,eACJzkC,EAAKl9B,EAAI8gE,EAAO9gE,EAChB8gE,EAAOh/D,EAAIo7B,EAAKp7B,EAChBo7B,EAAKt/B,EAAIkjE,EAAOljE,EAChBkjE,EAAO9sE,EAAIkpC,EAAKlpC,GAElBwe,EAAMovD,iBAAmBC,GAAqBrvD,EAAOo7B,EAAY1F,GAEnE,SAASw5B,GAAaZ,EAAQ5jC,EAAMzlC,EAAO+pE,EAASC,GAClD,MAAM3jE,EAAMvJ,KAAK8B,IAAI9B,KAAKuJ,IAAIrG,IACxBsH,EAAMxK,KAAK8B,IAAI9B,KAAKwK,IAAItH,IAC9B,IAAI7E,EAAI,EACJE,EAAI,EACJ0uE,EAAQtpE,MAAQglC,EAAKl9B,GACvBpN,GAAKsqC,EAAKl9B,EAAIwhE,EAAQtpE,OAAS4F,EAC/BgjE,EAAO9gE,EAAIzL,KAAKoC,IAAImqE,EAAO9gE,EAAGk9B,EAAKl9B,EAAIpN,IAC9B4uE,EAAQrpE,IAAM+kC,EAAKp7B,IAC5BlP,GAAK4uE,EAAQrpE,IAAM+kC,EAAKp7B,GAAKhE,EAC7BgjE,EAAOh/D,EAAIvN,KAAKqC,IAAIkqE,EAAOh/D,EAAGo7B,EAAKp7B,EAAIlP,IAErC6uE,EAAQvpE,MAAQglC,EAAKt/B,GACvB9K,GAAKoqC,EAAKt/B,EAAI6jE,EAAQvpE,OAAS6G,EAC/B+hE,EAAOljE,EAAIrJ,KAAKoC,IAAImqE,EAAOljE,EAAGs/B,EAAKt/B,EAAI9K,IAC9B2uE,EAAQtpE,IAAM+kC,EAAKlpC,IAC5BlB,GAAK2uE,EAAQtpE,IAAM+kC,EAAKlpC,GAAK+K,EAC7B+hE,EAAO9sE,EAAIO,KAAKqC,IAAIkqE,EAAO9sE,EAAGkpC,EAAKlpC,EAAIlB,IAG3C,SAAS+uE,GAAqBrvD,EAAOo7B,EAAY1F,GAC/C,MAAMztC,EAAQ,GACRsmE,EAAavuD,EAAMwuD,aAAap1E,OAChCisB,EAAOrF,EAAMjnB,QACbu2E,EAAQpB,GAAsB7oD,GAAQ,EACtCkqD,EAAgBvvD,EAAM8uD,YACtBJ,EAAkBrpD,EAAKktB,YAAYo8B,kBAAoB7sE,EAAKysE,EAAa,EAC/E,IAAK,IAAIhwE,EAAI,EAAGA,EAAIgwE,EAAYhwE,IAAK,CACnC,MAAMixE,EAAqBxvD,EAAM6uD,iBAAiBtwE,EAAGgxE,EAAgBD,EAAQ55B,EAAQn3C,GAAImwE,GACnFzpE,EAAQlD,KAAKc,MAAM0B,EAAUiB,EAAgBgqE,EAAmBvqE,MAAQ5C,KACxEZ,EAAO25C,EAAW78C,GAClB+B,EAAImvE,GAAUD,EAAmBlvE,EAAGmB,EAAKgM,EAAGxI,GAC5CkhB,EAAYupD,GAAqBzqE,GACjCsE,EAAOomE,GAAiBH,EAAmBpvE,EAAGqB,EAAKsO,EAAGoW,GAC5Dle,EAAMxP,KAAK,CACT2H,EAAGovE,EAAmBpvE,EACtBE,IACA6lB,YACA5c,OACA6a,IAAK9jB,EACLkJ,MAAOD,EAAO9H,EAAKsO,EACnBsU,OAAQ/jB,EAAImB,EAAKgM,IAGrB,OAAOxF,EAET,SAASynE,GAAqBzqE,GAC5B,OAAc,IAAVA,GAAyB,MAAVA,EACV,SACEA,EAAQ,IACV,OAEF,QAET,SAAS0qE,GAAiBvvE,EAAG2P,EAAG3G,GAM9B,MALc,UAAVA,EACFhJ,GAAK2P,EACc,WAAV3G,IACThJ,GAAM2P,EAAI,GAEL3P,EAET,SAASqvE,GAAUnvE,EAAGmN,EAAGxI,GAMvB,OALc,KAAVA,GAA0B,MAAVA,EAClB3E,GAAMmN,EAAI,GACDxI,EAAQ,KAAOA,EAAQ,MAChC3E,GAAKmN,GAEAnN,EAET,SAASsvE,GAAgB5vD,EAAO+qD,GAC9B,MAAM,IAAC5rD,EAAKpmB,SAAS,YAACw5C,IAAgBvyB,EACtC,IAAK,IAAIzhB,EAAIwsE,EAAa,EAAGxsE,GAAK,EAAGA,IAAK,CACxC,MAAMogD,EAAcpM,EAAYvnB,WAAWhL,EAAM4uD,qBAAqBrwE,IAChEwwE,EAAS9mD,GAAO02B,EAAY7/B,OAC5B,EAAC1e,EAAC,EAAEE,EAAC,UAAE6lB,EAAS,KAAE5c,EAAI,IAAE6a,EAAG,MAAE5a,EAAK,OAAE6a,GAAUrE,EAAMovD,iBAAiB7wE,IACrE,cAAC83C,GAAiBsI,EACxB,IAAK7hD,EAAcu5C,GAAgB,CACjC,MAAMuhB,EAAe7vC,GAAc42B,EAAYiZ,cACzCliB,EAAU1tB,GAAU22B,EAAYrI,iBACtCn3B,EAAI+G,UAAYmwB,EAChB,MAAMw5B,EAAetmE,EAAOmsC,EAAQnsC,KAC9BumE,EAAc1rD,EAAMsxB,EAAQtxB,IAC5B2rD,EAAgBvmE,EAAQD,EAAOmsC,EAAQx7C,MACvC81E,EAAiB3rD,EAASD,EAAMsxB,EAAQt7C,OAC1C1B,OAAOqO,OAAO6wD,GAAcpL,KAAKrsD,GAAW,IAANA,IACxCgf,EAAIkE,YACJyD,GAAmB3H,EAAK,CACtB/e,EAAGyvE,EACHvvE,EAAGwvE,EACH//D,EAAGggE,EACHtiE,EAAGuiE,EACH/sD,OAAQ20C,IAEVz4C,EAAI0E,QAEJ1E,EAAIsgC,SAASowB,EAAcC,EAAaC,EAAeC,GAG3D7qD,GACEhG,EACAa,EAAMwuD,aAAajwE,GACnB6B,EACAE,EAAKyuE,EAAO/vD,WAAa,EACzB+vD,EACA,CACE5xD,MAAOwhC,EAAYxhC,MACnBgJ,UAAWA,EACXC,aAAc,YAKtB,SAAS6pD,GAAejwD,EAAOiD,EAAQqvB,EAAUy4B,GAC/C,MAAM,IAAC5rD,GAAOa,EACd,GAAIsyB,EACFnzB,EAAIoE,IAAIvD,EAAM4xB,QAAS5xB,EAAM6xB,QAAS5uB,EAAQ,EAAGjhB,OAC5C,CACL,IAAIywC,EAAgBzyB,EAAM6uD,iBAAiB,EAAG5rD,GAC9C9D,EAAIsE,OAAOgvB,EAAcryC,EAAGqyC,EAAcnyC,GAC1C,IAAK,IAAI/B,EAAI,EAAGA,EAAIwsE,EAAYxsE,IAC9Bk0C,EAAgBzyB,EAAM6uD,iBAAiBtwE,EAAG0kB,GAC1C9D,EAAIuE,OAAO+uB,EAAcryC,EAAGqyC,EAAcnyC,IAIhD,SAAS4vE,GAAelwD,EAAOmwD,EAAcltD,EAAQ8nD,GACnD,MAAM5rD,EAAMa,EAAMb,IACZmzB,EAAW69B,EAAa79B,UACxB,MAACn1B,EAAK,UAAEyI,GAAauqD,GACrB79B,IAAay4B,IAAgB5tD,IAAUyI,GAAa3C,EAAS,IAGnE9D,EAAI0C,OACJ1C,EAAIwG,YAAcxI,EAClBgC,EAAIyG,UAAYA,EAChBzG,EAAI0gC,YAAYswB,EAAat3C,YAC7B1Z,EAAI2gC,eAAiBqwB,EAAar3C,iBAClC3Z,EAAIkE,YACJ4sD,GAAejwD,EAAOiD,EAAQqvB,EAAUy4B,GACxC5rD,EAAIqE,YACJrE,EAAI4E,SACJ5E,EAAI8C,WAEN,SAASmuD,GAAwB5jD,EAAQlzB,EAAOJ,GAC9C,OAAO6vB,GAAcyD,EAAQ,CAC3BtzB,QACAI,QACAQ,KAAM,eAhOV,GAAiB0C,GAAK,cACtB,GAAiBqkB,SAAW,CAC1BynB,MAAO,CACLvqC,SAAU01C,GAAMV,WAAWs9B,YAC3Br8B,MAAO,CACLC,SAAS,KA8Nf,MAAM,WAA0B,GAC9B,YAAY1Y,GACVyP,MAAMzP,GACN5mC,KAAKi9C,aAAU56C,EACfrC,KAAKk9C,aAAU76C,EACfrC,KAAKm6E,iBAAc93E,EACnBrC,KAAK65E,aAAe,GACpB75E,KAAKy6E,iBAAmB,GAE1B,gBACE,MAAM15B,EAAU/gD,KAAK8tE,SAAWz6C,GAAUkmD,GAAsBv5E,KAAKoE,SAAW,GAC1EgX,EAAIpb,KAAKuF,MAAQvF,KAAKmxB,SAAW4vB,EAAQx7C,MACzCuT,EAAI9Y,KAAKyF,OAASzF,KAAK29B,UAAYojB,EAAQt7C,OACjDzF,KAAKi9C,QAAU7vC,KAAKkB,MAAMtO,KAAK4U,KAAOwG,EAAI,EAAI2lC,EAAQnsC,MACtD5U,KAAKk9C,QAAU9vC,KAAKkB,MAAMtO,KAAKyvB,IAAM3W,EAAI,EAAIioC,EAAQtxB,KACrDzvB,KAAKm6E,YAAc/sE,KAAKkB,MAAMlB,KAAKoC,IAAI4L,EAAGtC,GAAK,GAEjD,sBACE,MAAM,IAACtJ,EAAG,IAAEC,GAAOzP,KAAKukD,WAAU,GAClCvkD,KAAKwP,IAAM9G,EAAe8G,KAASR,MAAMQ,GAAOA,EAAM,EACtDxP,KAAKyP,IAAM/G,EAAe+G,KAAST,MAAMS,GAAOA,EAAM,EACtDzP,KAAK64E,yBAEP,mBACE,OAAOzrE,KAAKkzC,KAAKtgD,KAAKm6E,YAAcZ,GAAsBv5E,KAAKoE,UAEjE,mBAAmBuvC,GACjB,GAAgBtrC,UAAUy/C,mBAAmBv/C,KAAKvI,KAAM2zC,GACxD3zC,KAAK65E,aAAe75E,KAAK8vC,YACtBtsC,IAAI,CAAChD,EAAOmE,KACX,MAAMJ,EAAQ6E,EAASpJ,KAAKoE,QAAQw5C,YAAYx0C,SAAU,CAAC5I,EAAOmE,GAAQ3E,MAC1E,OAAOuE,GAAmB,IAAVA,EAAcA,EAAQ,KAEvCmzB,OAAO,CAAClsB,EAAG5B,IAAM5J,KAAKyC,MAAMk1C,kBAAkB/tC,IAEnD,MACE,MAAM8mB,EAAO1wB,KAAKoE,QACdssB,EAAKgtB,SAAWhtB,EAAKktB,YAAYF,QACnCg8B,GAAmB15E,MAEnBA,KAAKw6E,eAAe,EAAG,EAAG,EAAG,GAGjC,eAAemB,EAAcC,EAAeC,EAAaC,GACvD97E,KAAKi9C,SAAW7vC,KAAKkB,OAAOqtE,EAAeC,GAAiB,GAC5D57E,KAAKk9C,SAAW9vC,KAAKkB,OAAOutE,EAAcC,GAAkB,GAC5D97E,KAAKm6E,aAAe/sE,KAAKoC,IAAIxP,KAAKm6E,YAAc,EAAG/sE,KAAKqC,IAAIksE,EAAcC,EAAeC,EAAaC,IAExG,cAAcn3E,GACZ,MAAMo3E,EAAkB1uE,GAAOrN,KAAK65E,aAAap1E,QAAU,GACrDs0C,EAAa/4C,KAAKoE,QAAQ20C,YAAc,EAC9C,OAAOloC,EAAgBlM,EAAQo3E,EAAkBrsE,EAAUqpC,IAE7D,8BAA8Bv4C,GAC5B,GAAI2H,EAAc3H,GAChB,OAAO2vC,IAET,MAAM6rC,EAAgBh8E,KAAKm6E,aAAen6E,KAAKyP,IAAMzP,KAAKwP,KAC1D,OAAIxP,KAAKoE,QAAQuF,SACP3J,KAAKyP,IAAMjP,GAASw7E,GAEtBx7E,EAAQR,KAAKwP,KAAOwsE,EAE9B,8BAA8BxrE,GAC5B,GAAIrI,EAAcqI,GAChB,OAAO2/B,IAET,MAAM8rC,EAAiBzrE,GAAYxQ,KAAKm6E,aAAen6E,KAAKyP,IAAMzP,KAAKwP,MACvE,OAAOxP,KAAKoE,QAAQuF,QAAU3J,KAAKyP,IAAMwsE,EAAiBj8E,KAAKwP,IAAMysE,EAEvE,qBAAqBt3E,GACnB,MAAMi5C,EAAc59C,KAAK65E,cAAgB,GACzC,GAAIl1E,GAAS,GAAKA,EAAQi5C,EAAYn5C,OAAQ,CAC5C,MAAMy3E,EAAat+B,EAAYj5C,GAC/B,OAAO82E,GAAwBz7E,KAAKmH,aAAcxC,EAAOu3E,IAG7D,iBAAiBv3E,EAAOw3E,EAAoBpC,EAAkB,GAC5D,MAAMzpE,EAAQtQ,KAAKo9C,cAAcz4C,GAAS+I,EAAUqsE,EACpD,MAAO,CACLtuE,EAAG2B,KAAKwK,IAAItH,GAAS6rE,EAAqBn8E,KAAKi9C,QAC/CtxC,EAAGyB,KAAKuJ,IAAIrG,GAAS6rE,EAAqBn8E,KAAKk9C,QAC/C5sC,SAGJ,yBAAyB3L,EAAOnE,GAC9B,OAAOR,KAAKk6E,iBAAiBv1E,EAAO3E,KAAKw9C,8BAA8Bh9C,IAEzE,gBAAgBmE,GACd,OAAO3E,KAAK+9C,yBAAyBp5C,GAAS,EAAG3E,KAAK2oD,gBAExD,sBAAsBhkD,GACpB,MAAM,KAACiQ,EAAI,IAAE6a,EAAG,MAAE5a,EAAK,OAAE6a,GAAU1vB,KAAKy6E,iBAAiB91E,GACzD,MAAO,CACLiQ,OACA6a,MACA5a,QACA6a,UAGJ,iBACE,MAAM,gBAAC9F,EAAiB4uB,MAAM,SAACmF,IAAa39C,KAAKoE,QACjD,GAAIwlB,EAAiB,CACnB,MAAMY,EAAMxqB,KAAKwqB,IACjBA,EAAI0C,OACJ1C,EAAIkE,YACJ4sD,GAAet7E,KAAMA,KAAKw9C,8BAA8Bx9C,KAAKi4E,WAAYt6B,EAAU39C,KAAK65E,aAAap1E,QACrG+lB,EAAIqE,YACJrE,EAAI+G,UAAY3H,EAChBY,EAAI0E,OACJ1E,EAAI8C,WAGR,WACE,MAAM9C,EAAMxqB,KAAKwqB,IACXkG,EAAO1wB,KAAKoE,SACZ,WAACq5C,EAAU,KAAEjF,GAAQ9nB,EACrB0lD,EAAap2E,KAAK65E,aAAap1E,OACrC,IAAImF,EAAG2uC,EAAQqK,EAaf,GAZIlyB,EAAKktB,YAAYF,SACnBu9B,GAAgBj7E,KAAMo2E,GAEpB59B,EAAKkF,SACP19C,KAAK2zC,MAAM9gC,QAAQ,CAAC4yB,EAAM9gC,KACxB,GAAc,IAAVA,EAAa,CACf4zC,EAASv4C,KAAKw9C,8BAA8B/X,EAAKjlC,OACjD,MAAMwpD,EAAcxR,EAAKniB,WAAWr2B,KAAKmH,WAAWxC,EAAQ,IAC5D42E,GAAev7E,KAAMgqD,EAAazR,EAAQ69B,MAI5C34B,EAAWC,QAAS,CAEtB,IADAlzB,EAAI0C,OACCtjB,EAAIwsE,EAAa,EAAGxsE,GAAK,EAAGA,IAAK,CACpC,MAAMogD,EAAcvM,EAAWpnB,WAAWr2B,KAAKi6E,qBAAqBrwE,KAC9D,MAAC4e,EAAK,UAAEyI,GAAa+4B,EACtB/4B,GAAczI,IAGnBgC,EAAIyG,UAAYA,EAChBzG,EAAIwG,YAAcxI,EAClBgC,EAAI0gC,YAAYlB,EAAY9lB,YAC5B1Z,EAAI2gC,eAAiBnB,EAAY7lB,iBACjCoU,EAASv4C,KAAKw9C,8BAA8B9sB,EAAKijB,MAAMhqC,QAAU3J,KAAKwP,IAAMxP,KAAKyP,KACjFmzC,EAAW5iD,KAAKk6E,iBAAiBtwE,EAAG2uC,GACpC/tB,EAAIkE,YACJlE,EAAIsE,OAAO9uB,KAAKi9C,QAASj9C,KAAKk9C,SAC9B1yB,EAAIuE,OAAO6zB,EAASn3C,EAAGm3C,EAASj3C,GAChC6e,EAAI4E,UAEN5E,EAAI8C,WAGR,cACA,aACE,MAAM9C,EAAMxqB,KAAKwqB,IACXkG,EAAO1wB,KAAKoE,QACZ46C,EAAWtuB,EAAKijB,MACtB,IAAKqL,EAAStB,QACZ,OAEF,MAAM3E,EAAa/4C,KAAKo9C,cAAc,GACtC,IAAI7E,EAAQhzC,EACZilB,EAAI0C,OACJ1C,EAAIgE,UAAUxuB,KAAKi9C,QAASj9C,KAAKk9C,SACjC1yB,EAAIvO,OAAO88B,GACXvuB,EAAIgH,UAAY,SAChBhH,EAAIiH,aAAe,SACnBzxB,KAAK2zC,MAAM9gC,QAAQ,CAAC4yB,EAAM9gC,KACxB,GAAc,IAAVA,IAAgB+rB,EAAK/mB,QACvB,OAEF,MAAMqgD,EAAchL,EAAS3oB,WAAWr2B,KAAKmH,WAAWxC,IAClDujD,EAAW50B,GAAO02B,EAAY7/B,MAEpC,GADAouB,EAASv4C,KAAKw9C,8BAA8Bx9C,KAAK2zC,MAAMhvC,GAAOnE,OAC1DwpD,EAAYvI,kBAAmB,CACjCj3B,EAAIL,KAAO+9B,EAASv7B,OACpBpnB,EAAQilB,EAAIqC,YAAY4Y,EAAKlhC,OAAOgB,MACpCilB,EAAI+G,UAAYy4B,EAAYtI,cAC5B,MAAMX,EAAU1tB,GAAU22B,EAAYrI,iBACtCn3B,EAAIsgC,UACDvlD,EAAQ,EAAIw7C,EAAQnsC,MACpB2jC,EAAS2P,EAASp7C,KAAO,EAAIi0C,EAAQtxB,IACtClqB,EAAQw7C,EAAQx7C,MAChB2iD,EAASp7C,KAAOi0C,EAAQt7C,QAG5B+qB,GAAWhG,EAAKib,EAAKlhC,MAAO,GAAIg0C,EAAQ2P,EAAU,CAChD1/B,MAAOwhC,EAAYxhC,UAGvBgC,EAAI8C,UAEN,cAEF,GAAkBzlB,GAAK,eACvB,GAAkBqkB,SAAW,CAC3BwxB,SAAS,EACT0+B,SAAS,EACTx5B,SAAU,YACVnF,WAAY,CACVC,SAAS,EACTzsB,UAAW,EACXiT,WAAY,GACZC,iBAAkB,GAEpBqU,KAAM,CACJmF,UAAU,GAEZ5E,WAAY,EACZpF,MAAO,CACL8N,mBAAmB,EACnBr4C,SAAU01C,GAAMV,WAAWS,SAE7BjB,YAAa,CACX8D,mBAAer/C,EACfs/C,gBAAiB,EACjBjE,SAAS,EACTvzB,KAAM,CACJrd,KAAM,IAER,SAASvI,GACP,OAAOA,GAETw8C,QAAS,EACTi5B,mBAAmB,IAGvB,GAAkB77B,cAAgB,CAChC,mBAAoB,cACpB,oBAAqB,QACrB,cAAe,SAEjB,GAAkBhnB,YAAc,CAC9BsmB,WAAY,CACVnxB,UAAW,SAIf,MAAM+vD,GAAY,CAChBC,YAAa,CAACC,QAAQ,EAAMzvE,KAAM,EAAG0vE,MAAO,KAC5CC,OAAQ,CAACF,QAAQ,EAAMzvE,KAAM,IAAM0vE,MAAO,IAC1CE,OAAQ,CAACH,QAAQ,EAAMzvE,KAAM,IAAO0vE,MAAO,IAC3CG,KAAM,CAACJ,QAAQ,EAAMzvE,KAAM,KAAS0vE,MAAO,IAC3CI,IAAK,CAACL,QAAQ,EAAMzvE,KAAM,MAAU0vE,MAAO,IAC3CK,KAAM,CAACN,QAAQ,EAAOzvE,KAAM,OAAW0vE,MAAO,GAC9CM,MAAO,CAACP,QAAQ,EAAMzvE,KAAM,OAAS0vE,MAAO,IAC5CO,QAAS,CAACR,QAAQ,EAAOzvE,KAAM,OAAS0vE,MAAO,GAC/CQ,KAAM,CAACT,QAAQ,EAAMzvE,KAAM,SAEvBmwE,GAASl5E,OAAOsD,KAAKg1E,IAC3B,SAASa,GAAOtwE,EAAGC,GACjB,OAAOD,EAAIC,EAEb,SAAS2rB,GAAMnN,EAAOlD,GACpB,GAAIhgB,EAAcggB,GAChB,OAAO,KAET,MAAMg1D,EAAU9xD,EAAM+xD,UAChB,OAACC,EAAM,MAAEnvE,EAAK,WAAEovE,GAAcjyD,EAAMkyD,WAC1C,IAAI/8E,EAAQ2nB,EASZ,MARsB,oBAAXk1D,IACT78E,EAAQ68E,EAAO78E,IAEZkI,EAAelI,KAClBA,EAA0B,kBAAX68E,EACXF,EAAQ3kD,MAAMh4B,EAAO68E,GACrBF,EAAQ3kD,MAAMh4B,IAEN,OAAVA,EACK,MAEL0N,IACF1N,EAAkB,SAAV0N,IAAqBY,EAASwuE,KAA8B,IAAfA,EAEjDH,EAAQK,QAAQh9E,EAAO0N,GADvBivE,EAAQK,QAAQh9E,EAAO,UAAW88E,KAGhC98E,GAEV,SAASi9E,GAA0BC,EAASluE,EAAKC,EAAKkuE,GACpD,MAAM1zE,EAAOgzE,GAAMx4E,OACnB,IAAK,IAAImF,EAAIqzE,GAAMpyE,QAAQ6yE,GAAU9zE,EAAIK,EAAO,IAAKL,EAAG,CACtD,MAAMg0E,EAAWvB,GAAUY,GAAMrzE,IAC3B48B,EAASo3C,EAASpB,MAAQoB,EAASpB,MAAQh3E,OAAO8yE,iBACxD,GAAIsF,EAASrB,QAAUnvE,KAAKkzC,MAAM7wC,EAAMD,IAAQg3B,EAASo3C,EAAS9wE,QAAU6wE,EAC1E,OAAOV,GAAMrzE,GAGjB,OAAOqzE,GAAMhzE,EAAO,GAEtB,SAAS4zE,GAA2BxyD,EAAOi7B,EAAUo3B,EAASluE,EAAKC,GACjE,IAAK,IAAI7F,EAAIqzE,GAAMx4E,OAAS,EAAGmF,GAAKqzE,GAAMpyE,QAAQ6yE,GAAU9zE,IAAK,CAC/D,MAAMgkD,EAAOqvB,GAAMrzE,GACnB,GAAIyyE,GAAUzuB,GAAM2uB,QAAUlxD,EAAM+xD,SAAS38B,KAAKhxC,EAAKD,EAAKo+C,IAAStH,EAAW,EAC9E,OAAOsH,EAGX,OAAOqvB,GAAMS,EAAUT,GAAMpyE,QAAQ6yE,GAAW,GAElD,SAASI,GAAmBlwB,GAC1B,IAAK,IAAIhkD,EAAIqzE,GAAMpyE,QAAQ+iD,GAAQ,EAAG3jD,EAAOgzE,GAAMx4E,OAAQmF,EAAIK,IAAQL,EACrE,GAAIyyE,GAAUY,GAAMrzE,IAAI2yE,OACtB,OAAOU,GAAMrzE,GAInB,SAASm0E,GAAQpqC,EAAOqqC,EAAMC,GAC5B,GAAKA,GAEE,GAAIA,EAAWx5E,OAAQ,CAC5B,MAAM,GAACsN,EAAE,GAAED,GAAMJ,GAAQusE,EAAYD,GAC/BtwB,EAAYuwB,EAAWlsE,IAAOisE,EAAOC,EAAWlsE,GAAMksE,EAAWnsE,GACvE6hC,EAAM+Z,IAAa,QAJnB/Z,EAAMqqC,IAAQ,EAOlB,SAASE,GAAc7yD,EAAOsoB,EAAOnwC,EAAK26E,GACxC,MAAMhB,EAAU9xD,EAAM+xD,SAChB39B,GAAS09B,EAAQK,QAAQ7pC,EAAM,GAAGnzC,MAAO29E,GACzClsE,EAAO0hC,EAAMA,EAAMlvC,OAAS,GAAGjE,MACrC,IAAI6+C,EAAO16C,EACX,IAAK06C,EAAQI,EAAOJ,GAASptC,EAAMotC,GAAS89B,EAAQ1pE,IAAI4rC,EAAO,EAAG8+B,GAChEx5E,EAAQnB,EAAI67C,GACR16C,GAAS,IACXgvC,EAAMhvC,GAAO06C,OAAQ,GAGzB,OAAO1L,EAET,SAASyqC,GAAoB/yD,EAAOjZ,EAAQ+rE,GAC1C,MAAMxqC,EAAQ,GACRnwC,EAAM,GACNyG,EAAOmI,EAAO3N,OACpB,IAAImF,EAAGpJ,EACP,IAAKoJ,EAAI,EAAGA,EAAIK,IAAQL,EACtBpJ,EAAQ4R,EAAOxI,GACfpG,EAAIhD,GAASoJ,EACb+pC,EAAM7vC,KAAK,CACTtD,QACA6+C,OAAO,IAGX,OAAiB,IAATp1C,GAAek0E,EAAqBD,GAAc7yD,EAAOsoB,EAAOnwC,EAAK26E,GAAzCxqC,EAEtC,MAAM,WAAkB,GACtB,YAAYryC,GACV+0C,MAAM/0C,GACNtB,KAAKkzC,OAAS,CACZ3xC,KAAM,GACN2B,OAAQ,GACRomC,IAAK,IAEPtpC,KAAKq+E,MAAQ,MACbr+E,KAAKs+E,gBAAaj8E,EAClBrC,KAAKu+E,SAAW,GAChBv+E,KAAKw+E,aAAc,EACnBx+E,KAAKu9E,gBAAal7E,EAEpB,KAAK07D,EAAWrtC,GACd,MAAMstD,EAAOjgB,EAAUigB,OAASjgB,EAAUigB,KAAO,IAC3Cb,EAAUn9E,KAAKo9E,SAAW,IAAIrvB,GAASC,MAAM+P,EAAUhQ,SAASrpB,MACtEy4C,EAAQ5e,KAAK7tC,GACbtlB,EAAQ4yE,EAAKS,eAAgBtB,EAAQuB,WACrC1+E,KAAKu9E,WAAa,CAChBF,OAAQW,EAAKX,OACbnvE,MAAO8vE,EAAK9vE,MACZovE,WAAYU,EAAKV,YAEnBjnC,MAAMkoB,KAAKR,GACX/9D,KAAKw+E,YAAc9tD,EAAKiuD,WAE1B,MAAMvyC,EAAKznC,GACT,YAAYtC,IAAR+pC,EACK,KAEF5T,GAAMx4B,KAAMosC,GAErB,eACEiK,MAAM6c,eACNlzD,KAAKkzC,OAAS,CACZ3xC,KAAM,GACN2B,OAAQ,GACRomC,IAAK,IAGT,sBACE,MAAMllC,EAAUpE,KAAKoE,QACf+4E,EAAUn9E,KAAKo9E,SACfxvB,EAAOxpD,EAAQ45E,KAAKpwB,MAAQ,MAClC,IAAI,IAACp+C,EAAG,IAAEC,EAAG,WAAEiG,EAAU,WAAEC,GAAc3V,KAAK4V,gBAC9C,SAASgpE,EAAah9C,GACflsB,GAAe1G,MAAM4yB,EAAOpyB,OAC/BA,EAAMpC,KAAKoC,IAAIA,EAAKoyB,EAAOpyB,MAExBmG,GAAe3G,MAAM4yB,EAAOnyB,OAC/BA,EAAMrC,KAAKqC,IAAIA,EAAKmyB,EAAOnyB,MAG1BiG,GAAeC,IAClBipE,EAAa5+E,KAAK6+E,mBACK,UAAnBz6E,EAAQw9B,QAA+C,WAAzBx9B,EAAQuvC,MAAMrpC,QAC9Cs0E,EAAa5+E,KAAKukD,WAAU,KAGhC/0C,EAAM9G,EAAe8G,KAASR,MAAMQ,GAAOA,GAAO2tE,EAAQK,QAAQt4C,KAAKC,MAAOyoB,GAC9En+C,EAAM/G,EAAe+G,KAAST,MAAMS,GAAOA,GAAO0tE,EAAQ2B,MAAM55C,KAAKC,MAAOyoB,GAAQ,EACpF5tD,KAAKwP,IAAMpC,KAAKoC,IAAIA,EAAKC,EAAM,GAC/BzP,KAAKyP,IAAMrC,KAAKqC,IAAID,EAAM,EAAGC,GAE/B,kBACE,MAAMgoB,EAAMz3B,KAAK++E,qBACjB,IAAIvvE,EAAMhK,OAAOgI,kBACbiC,EAAMjK,OAAOolC,kBAKjB,OAJInT,EAAIhzB,SACN+K,EAAMioB,EAAI,GACVhoB,EAAMgoB,EAAIA,EAAIhzB,OAAS,IAElB,CAAC+K,MAAKC,OAEf,aACE,MAAMrL,EAAUpE,KAAKoE,QACf46E,EAAW56E,EAAQ45E,KACnBh/B,EAAW56C,EAAQuvC,MACnBsqC,EAAiC,WAApBj/B,EAAS10C,OAAsBtK,KAAK++E,qBAAuB/+E,KAAKi/E,YAC5D,UAAnB76E,EAAQw9B,QAAsBq8C,EAAWx5E,SAC3CzE,KAAKwP,IAAMxP,KAAK8jD,UAAYm6B,EAAW,GACvCj+E,KAAKyP,IAAMzP,KAAK6jD,UAAYo6B,EAAWA,EAAWx5E,OAAS,IAE7D,MAAM+K,EAAMxP,KAAKwP,IACXC,EAAMzP,KAAKyP,IACXkkC,EAAQxhC,GAAe8rE,EAAYzuE,EAAKC,GAU9C,OATAzP,KAAKq+E,MAAQW,EAASpxB,OAAS5O,EAASD,SACpC0+B,GAA0BuB,EAAStB,QAAS19E,KAAKwP,IAAKxP,KAAKyP,IAAKzP,KAAKk/E,kBAAkB1vE,IACvFquE,GAA2B79E,KAAM2zC,EAAMlvC,OAAQu6E,EAAStB,QAAS19E,KAAKwP,IAAKxP,KAAKyP,MACpFzP,KAAKs+E,WAAct/B,EAASK,MAAMC,SAA0B,SAAft/C,KAAKq+E,MAC9CP,GAAmB99E,KAAKq+E,YADyCh8E,EAErErC,KAAKm/E,YAAYlB,GACb75E,EAAQuF,SACVgqC,EAAMhqC,UAEDy0E,GAAoBp+E,KAAM2zC,EAAO3zC,KAAKs+E,YAE/C,gBACMt+E,KAAKoE,QAAQg7E,qBACfp/E,KAAKm/E,YAAYn/E,KAAK2zC,MAAMnwC,IAAIiiC,IAASA,EAAKjlC,QAGlD,YAAYy9E,GACV,IAEIx+B,EAAOxtC,EAFPlB,EAAQ,EACRC,EAAM,EAENhR,KAAKoE,QAAQm0C,QAAU0lC,EAAWx5E,SACpCg7C,EAAQz/C,KAAKq/E,mBAAmBpB,EAAW,IAEzCltE,EADwB,IAAtBktE,EAAWx5E,OACL,EAAIg7C,GAEHz/C,KAAKq/E,mBAAmBpB,EAAW,IAAMx+B,GAAS,EAE7DxtC,EAAOjS,KAAKq/E,mBAAmBpB,EAAWA,EAAWx5E,OAAS,IAE5DuM,EADwB,IAAtBitE,EAAWx5E,OACPwN,GAECA,EAAOjS,KAAKq/E,mBAAmBpB,EAAWA,EAAWx5E,OAAS,KAAO,GAGhF,MAAMqlD,EAAQm0B,EAAWx5E,OAAS,EAAI,GAAM,IAC5CsM,EAAQQ,GAAYR,EAAO,EAAG+4C,GAC9B94C,EAAMO,GAAYP,EAAK,EAAG84C,GAC1B9pD,KAAKu+E,SAAW,CAACxtE,QAAOC,MAAKw1B,OAAQ,GAAKz1B,EAAQ,EAAIC,IAExD,YACE,MAAMmsE,EAAUn9E,KAAKo9E,SACf5tE,EAAMxP,KAAKwP,IACXC,EAAMzP,KAAKyP,IACXrL,EAAUpE,KAAKoE,QACf46E,EAAW56E,EAAQ45E,KACnBz8B,EAAQy9B,EAASpxB,MAAQ6vB,GAA0BuB,EAAStB,QAASluE,EAAKC,EAAKzP,KAAKk/E,kBAAkB1vE,IACtGgpE,EAAW1vE,EAAek2E,EAASxG,SAAU,GAC7C3qB,EAAoB,SAAVtM,GAAmBy9B,EAAS1B,WACtCgC,EAAaxwE,EAAS++C,KAAwB,IAAZA,EAClCla,EAAQ,GACd,IACIqqC,EAAM3oE,EADNoqC,EAAQjwC,EAMZ,GAJI8vE,IACF7/B,GAAS09B,EAAQK,QAAQ/9B,EAAO,UAAWoO,IAE7CpO,GAAS09B,EAAQK,QAAQ/9B,EAAO6/B,EAAa,MAAQ/9B,GACjD47B,EAAQ18B,KAAKhxC,EAAKD,EAAK+xC,GAAS,IAASi3B,EAC3C,MAAM,IAAIvxE,MAAMuI,EAAM,QAAUC,EAAM,uCAAyC+oE,EAAW,IAAMj3B,GAElG,MAAM08B,EAAsC,SAAzB75E,EAAQuvC,MAAMrpC,QAAqBtK,KAAKu/E,oBAC3D,IAAKvB,EAAOv+B,EAAOpqC,EAAQ,EAAG2oE,EAAOvuE,EAAKuuE,GAAQb,EAAQ1pE,IAAIuqE,EAAMxF,EAAUj3B,GAAQlsC,IACpF0oE,GAAQpqC,EAAOqqC,EAAMC,GAKvB,OAHID,IAASvuE,GAA0B,UAAnBrL,EAAQw9B,QAAgC,IAAVvsB,GAChD0oE,GAAQpqC,EAAOqqC,EAAMC,GAEhBl6E,OAAOsD,KAAKssC,GAAO/kC,KAAK,CAAChC,EAAGC,IAAMD,EAAIC,GAAGrJ,IAAIiI,IAAMA,GAE5D,iBAAiBjL,GACf,MAAM28E,EAAUn9E,KAAKo9E,SACf4B,EAAWh/E,KAAKoE,QAAQ45E,KAC9B,OAAIgB,EAASQ,cACJrC,EAAQ58C,OAAO//B,EAAOw+E,EAASQ,eAEjCrC,EAAQ58C,OAAO//B,EAAOw+E,EAASP,eAAegB,UAEvD,oBAAoBzB,EAAMr5E,EAAOgvC,EAAOpT,GACtC,MAAMn8B,EAAUpE,KAAKoE,QACfs6E,EAAUt6E,EAAQ45E,KAAKS,eACvB7wB,EAAO5tD,KAAKq+E,MACZF,EAAYn+E,KAAKs+E,WACjBoB,EAAc9xB,GAAQ8wB,EAAQ9wB,GAC9B+xB,EAAcxB,GAAaO,EAAQP,GACnC14C,EAAOkO,EAAMhvC,GACb06C,EAAQ8+B,GAAawB,GAAel6C,GAAQA,EAAK4Z,MACjD96C,EAAQvE,KAAKo9E,SAAS78C,OAAOy9C,EAAMz9C,IAAW8e,EAAQsgC,EAAcD,IACpEz/C,EAAY77B,EAAQuvC,MAAMvqC,SAChC,OAAO62B,EAAY72B,EAAS62B,EAAW,CAAC17B,EAAOI,EAAOgvC,GAAQ3zC,MAAQuE,EAExE,mBAAmBovC,GACjB,IAAI/pC,EAAGK,EAAMw7B,EACb,IAAK77B,EAAI,EAAGK,EAAO0pC,EAAMlvC,OAAQmF,EAAIK,IAAQL,EAC3C67B,EAAOkO,EAAM/pC,GACb67B,EAAKlhC,MAAQvE,KAAK4/E,oBAAoBn6C,EAAKjlC,MAAOoJ,EAAG+pC,GAGzD,mBAAmBnzC,GACjB,OAAiB,OAAVA,EAAiB2vC,KAAO3vC,EAAQR,KAAKwP,MAAQxP,KAAKyP,IAAMzP,KAAKwP,KAEtE,iBAAiBhP,GACf,MAAMq/E,EAAU7/E,KAAKu+E,SACf9hD,EAAMz8B,KAAKq/E,mBAAmB7+E,GACpC,OAAOR,KAAK63C,oBAAoBgoC,EAAQ9uE,MAAQ0rB,GAAOojD,EAAQr5C,QAEjE,iBAAiB/Y,GACf,MAAMoyD,EAAU7/E,KAAKu+E,SACf9hD,EAAMz8B,KAAK82E,mBAAmBrpD,GAASoyD,EAAQr5C,OAASq5C,EAAQ7uE,IACtE,OAAOhR,KAAKwP,IAAMitB,GAAOz8B,KAAKyP,IAAMzP,KAAKwP,KAE3C,cAAcjL,GACZ,MAAMu7E,EAAY9/E,KAAKoE,QAAQuvC,MACzBosC,EAAiB//E,KAAKwqB,IAAIqC,YAAYtoB,GAAOgB,MAC7C+K,EAAQZ,EAAU1P,KAAKq1C,eAAiByqC,EAAU7+B,YAAc6+B,EAAU9+B,aAC1Eg/B,EAAc5yE,KAAKwK,IAAItH,GACvB2vE,EAAc7yE,KAAKuJ,IAAIrG,GACvB4vE,EAAelgF,KAAKuoD,wBAAwB,GAAGz7C,KACrD,MAAO,CACLsO,EAAI2kE,EAAiBC,EAAgBE,EAAeD,EACpDnnE,EAAIinE,EAAiBE,EAAgBC,EAAeF,GAGxD,kBAAkBG,GAChB,MAAMnB,EAAWh/E,KAAKoE,QAAQ45E,KACxBS,EAAiBO,EAASP,eAC1Bl+C,EAASk+C,EAAeO,EAASpxB,OAAS6wB,EAAenC,YACzD8D,EAAepgF,KAAK4/E,oBAAoBO,EAAa,EAAG/B,GAAoBp+E,KAAM,CAACmgF,GAAcngF,KAAKs+E,YAAa/9C,GACnHzzB,EAAO9M,KAAKqgF,cAAcD,GAC1BzC,EAAWvwE,KAAKkB,MAAMtO,KAAKq1C,eAAiBr1C,KAAKuF,MAAQuH,EAAKsO,EAAIpb,KAAKyF,OAASqH,EAAKgM,GAAK,EAChG,OAAO6kE,EAAW,EAAIA,EAAW,EAEnC,oBACE,IACI/zE,EAAGK,EADHg0E,EAAaj+E,KAAKkzC,OAAO3xC,MAAQ,GAErC,GAAI08E,EAAWx5E,OACb,OAAOw5E,EAET,MAAM35B,EAAQtkD,KAAKqrC,0BACnB,GAAIrrC,KAAKw+E,aAAel6B,EAAM7/C,OAC5B,OAAQzE,KAAKkzC,OAAO3xC,KAAO+iD,EAAM,GAAG/Y,WAAW+H,mBAAmBtzC,MAEpE,IAAK4J,EAAI,EAAGK,EAAOq6C,EAAM7/C,OAAQmF,EAAIK,IAAQL,EAC3Cq0E,EAAaA,EAAW5qC,OAAOiR,EAAM16C,GAAG2hC,WAAW+H,mBAAmBtzC,OAExE,OAAQA,KAAKkzC,OAAO3xC,KAAOvB,KAAKwhC,UAAUy8C,GAE5C,qBACE,MAAMA,EAAaj+E,KAAKkzC,OAAOhwC,QAAU,GACzC,IAAI0G,EAAGK,EACP,GAAIg0E,EAAWx5E,OACb,OAAOw5E,EAET,MAAM/6E,EAASlD,KAAK8vC,YACpB,IAAKlmC,EAAI,EAAGK,EAAO/G,EAAOuB,OAAQmF,EAAIK,IAAQL,EAC5Cq0E,EAAWn6E,KAAK00B,GAAMx4B,KAAMkD,EAAO0G,KAErC,OAAQ5J,KAAKkzC,OAAOhwC,OAASlD,KAAKw+E,YAAcP,EAAaj+E,KAAKwhC,UAAUy8C,GAE9E,UAAU7rE,GACR,OAAOiB,GAAajB,EAAOxD,KAAKsuE,MAuBpC,SAAS,GAAYvrE,EAAOmX,EAAKnf,GAC/B,IAEI22E,EAAYC,EAAYC,EAAYC,EAFpC1uE,EAAK,EACLD,EAAKH,EAAMlN,OAAS,EAEpBkF,GACEmf,GAAOnX,EAAMI,GAAI0qB,KAAO3T,GAAOnX,EAAMG,GAAI2qB,OACzC1qB,KAAID,MAAME,GAAaL,EAAO,MAAOmX,MAEvC2T,IAAK6jD,EAAYtC,KAAMwC,GAAc7uE,EAAMI,MAC3C0qB,IAAK8jD,EAAYvC,KAAMyC,GAAc9uE,EAAMG,MAEzCgX,GAAOnX,EAAMI,GAAIisE,MAAQl1D,GAAOnX,EAAMG,GAAIksE,QAC1CjsE,KAAID,MAAME,GAAaL,EAAO,OAAQmX,MAExCk1D,KAAMsC,EAAY7jD,IAAK+jD,GAAc7uE,EAAMI,MAC3CisE,KAAMuC,EAAY9jD,IAAKgkD,GAAc9uE,EAAMG,KAE/C,MAAM4uE,EAAOH,EAAaD,EAC1B,OAAOI,EAAOF,GAAcC,EAAaD,IAAe13D,EAAMw3D,GAAcI,EAAOF,EAtCrF,GAAU34E,GAAK,OACf,GAAUqkB,SAAW,CACnB0V,OAAQ,OACRmsB,SAAU,GACViwB,KAAM,CACJX,QAAQ,EACRzvB,MAAM,EACN1/C,OAAO,EACPovE,YAAY,EACZI,QAAS,cACTe,eAAgB,IAElB9qC,MAAO,CACLrpC,OAAQ,OACR+0C,MAAO,CACLC,SAAS,KAyBf,MAAMqhC,WAAwB,GAC5B,YAAYr/E,GACV+0C,MAAM/0C,GACNtB,KAAK4gF,OAAS,GACd5gF,KAAK6gF,aAAUx+E,EACfrC,KAAK8gF,iBAAcz+E,EAErB,cACE,MAAM47E,EAAaj+E,KAAK+gF,yBAClBpvE,EAAQ3R,KAAK4gF,OAAS5gF,KAAKghF,iBAAiB/C,GAClDj+E,KAAK6gF,QAAU,GAAYlvE,EAAO3R,KAAKwP,KACvCxP,KAAK8gF,YAAc,GAAYnvE,EAAO3R,KAAKyP,KAAOzP,KAAK6gF,QACvDxqC,MAAM8oC,YAAYlB,GAEpB,iBAAiBA,GACf,MAAM,IAACzuE,EAAG,IAAEC,GAAOzP,KACbsT,EAAQ,GACR3B,EAAQ,GACd,IAAI/H,EAAGK,EAAMoxB,EAAMmY,EAAMva,EACzB,IAAKrvB,EAAI,EAAGK,EAAOg0E,EAAWx5E,OAAQmF,EAAIK,IAAQL,EAChD4pC,EAAOyqC,EAAWr0E,GACd4pC,GAAQhkC,GAAOgkC,GAAQ/jC,GACzB6D,EAAMxP,KAAK0vC,GAGf,GAAIlgC,EAAM7O,OAAS,EACjB,MAAO,CACL,CAACu5E,KAAMxuE,EAAKitB,IAAK,GACjB,CAACuhD,KAAMvuE,EAAKgtB,IAAK,IAGrB,IAAK7yB,EAAI,EAAGK,EAAOqJ,EAAM7O,OAAQmF,EAAIK,IAAQL,EAC3CqvB,EAAO3lB,EAAM1J,EAAI,GACjByxB,EAAO/nB,EAAM1J,EAAI,GACjB4pC,EAAOlgC,EAAM1J,GACTwD,KAAKc,OAAO+qB,EAAOoC,GAAQ,KAAOmY,GACpC7hC,EAAM7N,KAAK,CAACk6E,KAAMxqC,EAAM/W,IAAK7yB,GAAKK,EAAO,KAG7C,OAAO0H,EAET,yBACE,IAAIssE,EAAaj+E,KAAKkzC,OAAO5J,KAAO,GACpC,GAAI20C,EAAWx5E,OACb,OAAOw5E,EAET,MAAM18E,EAAOvB,KAAKu/E,oBACZh7E,EAAQvE,KAAK++E,qBAOnB,OALEd,EADE18E,EAAKkD,QAAUF,EAAME,OACVzE,KAAKwhC,UAAUjgC,EAAK8xC,OAAO9uC,IAE3BhD,EAAKkD,OAASlD,EAAOgD,EAEpC05E,EAAaj+E,KAAKkzC,OAAO5J,IAAM20C,EACxBA,EAET,mBAAmBz9E,GACjB,OAAQ,GAAYR,KAAK4gF,OAAQpgF,GAASR,KAAK6gF,SAAW7gF,KAAK8gF,YAEjE,iBAAiBrzD,GACf,MAAMoyD,EAAU7/E,KAAKu+E,SACf71B,EAAU1oD,KAAK82E,mBAAmBrpD,GAASoyD,EAAQr5C,OAASq5C,EAAQ7uE,IAC1E,OAAO,GAAYhR,KAAK4gF,OAAQl4B,EAAU1oD,KAAK8gF,YAAc9gF,KAAK6gF,SAAS,IAG/EF,GAAgB94E,GAAK,aACrB84E,GAAgBz0D,SAAW,GAAUA","file":"js/chunk-ac94b832.3f8eedae.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.$vuetify.breakpoint.mobile),expression:\"$vuetify.breakpoint.mobile\"}]},[_c('v-row',{staticClass:\"d-flex h-0 pb-20 pt-0\"},[_c('v-col',{attrs:{\"cols\":\"10\"}},[_c('span',{staticStyle:{\"font-size\":\"20px\",\"font-weight\":\"600\",\"color\":\"#a84192\"}},[_vm._v(_vm._s(_vm.title))])]),_c('v-col',{attrs:{\"cols\":\"2\"}},[_c('v-btn',{staticStyle:{\"background-color\":\"#E8E0EA\"},attrs:{\"elevation\":\"4\",\"icon\":\"\",\"small\":\"\",\"color\":\"primary\"},on:{\"click\":_vm.goHome}},[_c('v-icon',{attrs:{\"color\":\"#a05c92\"}},[_vm._v(\"home\")])],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n<div v-show=\"$vuetify.breakpoint.mobile\">\r\n  <v-row  class=\"d-flex h-0 pb-20 pt-0\">\r\n    <v-col cols=\"10\">\r\n      <span style=\"font-size: 20px; font-weight: 600; color: #a84192\">{{title}}</span>\r\n    </v-col>\r\n    <v-col cols=\"2\" >\r\n      <v-btn style=\"background-color:#E8E0EA;\" elevation=\"4\" icon small color=\"primary\" @click=\"goHome\">\r\n        <v-icon color=\"#a05c92\">home</v-icon>\r\n      </v-btn>\r\n    </v-col>\r\n  </v-row>\r\n</div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"CheckmongHomeBar\",\r\n  components: {},\r\n  props: {\r\n    title: String,\r\n  },\r\n  data() {\r\n    return {};\r\n  },\r\n  watch: {},\r\n  methods: {\r\n    goHome(){\r\n      this.$router.push('/home_checkmong')\r\n    }\r\n  },\r\n};\r\n</script>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CheckmongHomeBar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CheckmongHomeBar.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CheckmongHomeBar.vue?vue&type=template&id=6be6f31b&\"\nimport script from \"./CheckmongHomeBar.vue?vue&type=script&lang=js&\"\nexport * from \"./CheckmongHomeBar.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VRow } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VBtn,VCol,VIcon,VRow})\n","import { Chart, BarController, DoughnutController, LineController, PieController, PolarAreaController, RadarController, BubbleController, ScatterController } from 'chart.js';\n\nvar ChartEmits;\n(function(ChartEmits) {\n    ChartEmits[\"ChartRendered\"] = \"chart:rendered\";\n    ChartEmits[\"ChartUpdated\"] = \"chart:updated\";\n    ChartEmits[\"ChartDestroyed\"] = \"chart:destroyed\";\n    ChartEmits[\"LabelsUpdated\"] = \"labels:updated\";\n})(ChartEmits || (ChartEmits = {}));\nfunction chartCreate(createChartFunction, chartData, chartOptions, context) {\n    createChartFunction(chartData, chartOptions);\n    if (context !== undefined) {\n        context.emit(ChartEmits.ChartRendered);\n    }\n}\nfunction chartUpdate(chart, context) {\n    chart.update();\n    if (context !== undefined) {\n        context.emit(ChartEmits.ChartUpdated);\n    }\n}\nfunction chartDestroy(chart, context) {\n    chart.destroy();\n    if (context !== undefined) {\n        context.emit(ChartEmits.ChartDestroyed);\n    }\n}\nfunction getChartData(data, datasetIdKey) {\n    const nextData = {\n        labels: typeof data.labels === \"undefined\" ? [] : [\n            ...data.labels\n        ],\n        datasets: []\n    };\n    setChartDatasets(nextData, {\n        ...data\n    }, datasetIdKey);\n    return nextData;\n}\nfunction setChartDatasets(oldData, newData, datasetIdKey) {\n    const addedDatasets = [];\n    oldData.datasets = newData.datasets.map((nextDataset)=>{\n        // given the new set, find it's current match\n        const currentDataset = oldData.datasets.find((dataset)=>dataset[datasetIdKey] === nextDataset[datasetIdKey]\n        );\n        // There is no original to update, so simply add new one\n        if (!currentDataset || !nextDataset.data || addedDatasets.includes(currentDataset)) {\n            return {\n                ...nextDataset\n            };\n        }\n        addedDatasets.push(currentDataset);\n        Object.assign(currentDataset, nextDataset);\n        return currentDataset;\n    });\n}\nfunction setChartLabels(chart, labels, context) {\n    chart.data.labels = labels;\n    if (context !== undefined) {\n        context.emit(ChartEmits.LabelsUpdated);\n    }\n}\nfunction setChartOptions(chart, options) {\n    chart.options = {\n        ...options\n    };\n}\nfunction compareData(newData, oldData) {\n    // Get new and old DataSet Labels\n    const newDatasetLabels = newData.datasets.map((dataset)=>{\n        return dataset.label;\n    });\n    const oldDatasetLabels = oldData.datasets.map((dataset)=>{\n        return dataset.label;\n    });\n    // Check if Labels are equal and if dataset length is equal\n    return oldData.datasets.length === newData.datasets.length && newDatasetLabels.every((value, index)=>value === oldDatasetLabels[index]\n    );\n}\nconst templateError = \"Please remove the <template></template> tags from your chart component. See https://vue-chartjs.org/guide/#vue-single-file-components\";\n\nconst ANNOTATION_PLUGIN_KEY = \"annotation\";\nfunction generateChart(chartId, chartType, chartController) {\n    let _chartRef = null;\n    return {\n        props: {\n            chartData: {\n                type: Object,\n                required: true\n            },\n            chartOptions: {\n                type: Object,\n                default: ()=>{}\n            },\n            datasetIdKey: {\n                type: String,\n                default: \"label\"\n            },\n            chartId: {\n                type: String,\n                default: chartId\n            },\n            width: {\n                type: Number,\n                default: 400\n            },\n            height: {\n                type: Number,\n                default: 400\n            },\n            cssClasses: {\n                type: String,\n                default: \"\"\n            },\n            styles: {\n                type: Object,\n                default: ()=>{}\n            },\n            plugins: {\n                type: Array,\n                default: ()=>[]\n            }\n        },\n        data () {\n            return {\n                _chart: null\n            };\n        },\n        computed: {\n            hasAnnotationPlugin () {\n                var ref, ref1;\n                const pluginSettings = (ref = this.chartOptions) === null || ref === void 0 ? void 0 : (ref1 = ref.plugins) === null || ref1 === void 0 ? void 0 : ref1[ANNOTATION_PLUGIN_KEY];\n                return typeof pluginSettings !== \"undefined\";\n            }\n        },\n        created () {\n            Chart.register(chartController);\n        },\n        mounted () {\n            _chartRef = {\n                current: null\n            };\n            if (\"datasets\" in this.chartData && this.chartData.datasets.length > 0) {\n                chartCreate(this.renderChart, this.chartData, this.chartOptions);\n                this.$emit(ChartEmits.ChartRendered);\n            }\n        },\n        watch: {\n            chartData: {\n                handler: function(newValue, oldValue) {\n                    this.chartDataHandler(newValue, oldValue);\n                },\n                deep: true\n            },\n            chartOptions: {\n                handler: function(newValue) {\n                    this.chartOptionsHandler(newValue);\n                },\n                deep: true\n            }\n        },\n        methods: {\n            renderChart (data, options) {\n                const currentChart = this.getCurrentChart();\n                if (currentChart !== null) {\n                    chartDestroy(currentChart);\n                    this.$emit(ChartEmits.ChartDestroyed);\n                }\n                if (!this.$refs.canvas) {\n                    throw new Error(templateError);\n                } else {\n                    const chartData = getChartData(data, this.datasetIdKey);\n                    const canvasEl2DContext = this.$refs.canvas.getContext(\"2d\");\n                    if (canvasEl2DContext !== null) {\n                        this.setCurrentChart(new Chart(canvasEl2DContext, {\n                            type: chartType,\n                            data: chartData,\n                            options,\n                            plugins: this.plugins\n                        }));\n                    }\n                }\n            },\n            chartDataHandler (newValue, oldValue) {\n                const newData = {\n                    ...newValue\n                };\n                const oldData = {\n                    ...oldValue\n                };\n                const currentChart = this.getCurrentChart();\n                if (Object.keys(oldData).length > 0) {\n                    const isEqualLabelsAndDatasetsLength = compareData(newData, oldData);\n                    if (isEqualLabelsAndDatasetsLength && currentChart !== null) {\n                        setChartDatasets(currentChart.data, newData, this.datasetIdKey);\n                        if (newData.labels !== undefined) {\n                            setChartLabels(currentChart, newData.labels);\n                            this.$emit(ChartEmits.LabelsUpdated);\n                        }\n                        this.updateChart();\n                        this.$emit(ChartEmits.ChartUpdated);\n                    } else {\n                        if (currentChart !== null) {\n                            chartDestroy(currentChart);\n                            this.$emit(ChartEmits.ChartDestroyed);\n                        }\n                        chartCreate(this.renderChart, this.chartData, this.chartOptions);\n                        this.$emit(ChartEmits.ChartRendered);\n                    }\n                } else {\n                    if (currentChart !== null) {\n                        chartDestroy(currentChart);\n                        this.$emit(ChartEmits.ChartDestroyed);\n                    }\n                    chartCreate(this.renderChart, this.chartData, this.chartOptions);\n                    this.$emit(ChartEmits.ChartRendered);\n                }\n            },\n            chartOptionsHandler (options) {\n                const currentChart = this.getCurrentChart();\n                if (currentChart !== null) {\n                    setChartOptions(currentChart, options);\n                    this.updateChart();\n                } else {\n                    chartCreate(this.renderChart, this.chartData, this.chartOptions);\n                }\n            },\n            updateChart () {\n                const currentChart = this.getCurrentChart();\n                chartUpdate(currentChart);\n            },\n            getCurrentChart () {\n                return this.hasAnnotationPlugin ? _chartRef.current : this.$data._chart;\n            },\n            setCurrentChart (chart) {\n                this.hasAnnotationPlugin ? _chartRef.current = chart : this.$data._chart = chart;\n            }\n        },\n        beforeDestroy () {\n            const currentChart = this.getCurrentChart();\n            if (currentChart !== null) {\n                chartDestroy(currentChart);\n                this.$emit(ChartEmits.ChartDestroyed);\n            }\n        },\n        render: function(createElement) {\n            return createElement(\"div\", {\n                style: this.styles,\n                class: this.cssClasses\n            }, [\n                createElement(\"canvas\", {\n                    attrs: {\n                        id: this.chartId,\n                        width: this.width,\n                        height: this.height\n                    },\n                    ref: \"canvas\"\n                })\n            ]);\n        }\n    };\n}\n/** @type Object */ const Bar = /* #__PURE__ */ generateChart(\"bar-chart\", \"bar\", BarController);\n/** @type Object */ const Doughnut = /* #__PURE__ */ generateChart(\"doughnut-chart\", \"doughnut\", DoughnutController);\n/** @type Object */ const Line = /* #__PURE__ */ generateChart(\"line-chart\", \"line\", LineController);\n/** @type Object */ const Pie = /* #__PURE__ */ generateChart(\"pie-chart\", \"pie\", PieController);\n/** @type Object */ const PolarArea = /* #__PURE__ */ generateChart(\"polar-chart\", \"polarArea\", PolarAreaController);\n/** @type Object */ const Radar = /* #__PURE__ */ generateChart(\"radar-chart\", \"radar\", RadarController);\n/** @type Object */ const Bubble = /* #__PURE__ */ generateChart(\"bubble-chart\", \"bubble\", BubbleController);\n/** @type Object */ const Scatter = /* #__PURE__ */ generateChart(\"scatter-chart\", \"scatter\", ScatterController);\n\nexport { Bar, Bubble, Doughnut, Line, Pie, PolarArea, Radar, Scatter, generateChart };\n//# sourceMappingURL=index.js.map\n","/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst keyResolvers = {\n  '': v => v,\n  x: o => o.x,\n  y: o => o.y\n};\nfunction resolveObjectKey(obj, key) {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\nfunction _getKeyResolver(key) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\nfunction _splitKey(key) {\n  const parts = key.split('.');\n  const keys = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value, last) =>\n  _lookup(table, value, last\n    ? index => table[index][key] <= value\n    : index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\nfunction _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nfunction isPatternOrGradient(value) {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n  return false;\n}\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\nfunction drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(e, canvas) {\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  if ('native' in evt) {\n    return evt;\n  }\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { _isPointInArea as $, _factorize as A, finiteOrDefault as B, callback as C, _addGrace as D, _limitValue as E, toDegrees as F, _measureText as G, HALF_PI as H, _int16Range as I, _alignPixel as J, toPadding as K, clipArea as L, renderText as M, unclipArea as N, toFont as O, PI as P, each as Q, _toLeftRightCenter as R, _alignStartEnd as S, TAU as T, overrides as U, merge as V, _capitalize as W, getRelativePosition as X, _rlookupByKey as Y, _lookupByKey as Z, _arrayUnique as _, resolve as a, toLineHeight as a$, getAngleFromPoint as a0, getMaximumSize as a1, _getParentNode as a2, readUsedSize as a3, throttled as a4, supportsEventListenerOptions as a5, _isDomSupported as a6, descriptors as a7, isFunction as a8, _attachContext as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, noop as aF, distanceBetweenPoints as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, _longestText as aM, _filterBetween as aN, _lookup as aO, isPatternOrGradient as aP, getHoverColor as aQ, clone$1 as aR, _merger as aS, _mergerIf as aT, _deprecated as aU, _splitKey as aV, toFontString as aW, splineCurve as aX, splineCurveMonotone as aY, getStyle as aZ, fontString as a_, _createResolver as aa, _descriptors as ab, mergeIf as ac, uid as ad, debounce as ae, retinaScale as af, clearCanvas as ag, setsEqual as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _readValueToProps as al, _updateBezierControlPoints as am, _computeSegments as an, _boundSegments as ao, _steppedInterpolation as ap, _bezierInterpolation as aq, _pointInLine as ar, _steppedLineTo as as, _bezierCurveTo as at, drawPoint as au, addRoundedRectPath as av, toTRBL as aw, toTRBLCorners as ax, _boundSegment as ay, _normalizeAngle as az, isArray as b, PITAU as b0, INFINITY as b1, RAD_PER_DEG as b2, QUARTER_PI as b3, TWO_THIRDS_PI as b4, _angleDiff as b5, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, createContext as h, isObject as i, defined as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, log10 as z };\n","/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as log10, A as _factorize, B as finiteOrDefault, C as callback, D as _addGrace, E as _limitValue, F as toDegrees, G as _measureText, I as _int16Range, J as _alignPixel, K as toPadding, L as clipArea, M as renderText, N as unclipArea, O as toFont, Q as each, R as _toLeftRightCenter, S as _alignStartEnd, U as overrides, V as merge, W as _capitalize, X as getRelativePosition, Y as _rlookupByKey, Z as _lookupByKey, $ as _isPointInArea, a0 as getAngleFromPoint, a1 as getMaximumSize, a2 as _getParentNode, a3 as readUsedSize, a4 as throttled, a5 as supportsEventListenerOptions, a6 as _isDomSupported, a7 as descriptors, a8 as isFunction, a9 as _attachContext, aa as _createResolver, ab as _descriptors, ac as mergeIf, ad as uid, ae as debounce, af as retinaScale, ag as clearCanvas, ah as setsEqual, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as noop, aG as distanceBetweenPoints, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as _longestText, aN as _filterBetween, aO as _lookup } from './chunks/helpers.segment.mjs';\nexport { d as defaults } from './chunks/helpers.segment.mjs';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndex.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass ScatterController extends DatasetController {\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    if (this.options.showLine) {\n      const {dataset: line, _dataset} = meta;\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n    this.updateElements(points, start, count, mode);\n  }\n  addElements() {\n    const {showLine} = this.options;\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = registry.getElement('line');\n    }\n    super.addElements();\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  init(chartOptions) {}\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {plugins, localIds};\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.9.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  if (circular) {\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    adapter.init(opts);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"sourceRoot":""}